import*as H from"../../../../../__snowpack__/env.js";import*as d from"../../../../../__snowpack__/pkg/d3.js";import y from"../../../../../__snowpack__/pkg/eventemitter3.js";import{ScaleMethod as G}from"../../../../resource/hyper-parameter/index.js";import A from"../../../../../__snowpack__/pkg/lodash/intersection.js";const W=H.SNOWPACK_PUBLIC_PATH,_=25,E=60,L=5,u=class extends y{constructor(e){super();this.colors=[],this.data=[],this.grids=[],this.lines=[],this.hoveredLineIndex=null,this.selectedLineIndex=null,this.brushedLineIndexesArray=[],this.dragStartX=0,this.draggingIndicator=null,this.containerWidth=e.getBoundingClientRect().width;const[t,s]=[this.containerWidth,u.GRAPH_HEIGHT+_];this.svg=d.select(e).append("svg").attr("width",t).attr("height",s).attr("viewBox",`0 0 ${t} ${s}`).on("click",()=>{this.unselectLine()})}get svgWidth(){return this.columnWidth*this.grids.length+u.GRID_BRUSH_WIDTH/2}get columnWidth(){return this.grids.length===0?0:Math.max((this.containerWidth-u.GRID_BRUSH_WIDTH)/this.grids.length,E)}get brushedLineIndexes(){return this.brushedLineIndexesArray.every(e=>e==null)?null:A(...this.brushedLineIndexesArray.filter(e=>e!=null))}get sequenceGrids(){return[...this.grids].sort((e,t)=>e.x-t.x)}getDataByIndicator(e){return this.data.map(t=>t[e.group][e.name])}removeGrids(){this.brushedLineIndexesArray=[],this.grids.forEach(e=>{var t;(t=e.grid)==null||t.remove(),e.grid=null})}drawGrids(){this.brushedLineIndexesArray=Array(this.grids.length).fill(null),this.sequenceGrids.forEach((e,t)=>{var p,I,x,v;const s=e.x,i=this.svg.append("g").classed("grid",!0).attr("transform",`translate(${s}, 0)`),n=i.append("g").classed("indicator",!0).classed(e.group,!0),r=n.append("text").attr("x",0).attr("y",0).text(e.name);let a=(I=(p=r.node())==null?void 0:p.getComputedTextLength())!=null?I:0;for(;a>this.columnWidth-u.GRID_BRUSH_WIDTH/2;)r.text(r.text().slice(0,-1)+"..."),a=(v=(x=r.node())==null?void 0:x.getComputedTextLength())!=null?v:0;n.append("image").classed("dragger",!0).attr("x",-15).attr("y",-1).attr("width",16).attr("height",16).attr("href",`${W}/icons/dragger.svg`).call(d.drag().container(this.svg).on("start",({x:m})=>this.dragstart(e,m)).on("drag",({x:m})=>this.dragging(e,m)).on("end",()=>this.dragend()));const l=i.append("g").classed("axis",!0).attr("transform",`translate(0, ${_})`),h=e.yScale,o=d.axisRight(h);e.scale===G.QUANTILE&&o.tickValues(h.quantiles()).tickFormat(d.format("-.6g")),l.call(o);const c=u.GRAPH_HEIGHT-2*L,g=u.GRID_BRUSH_WIDTH,f=l.append("g").classed("grid-brush",!0).attr("transform",`translate(${-g/2}, 0)`);f.call(d.brushY().extent([[0,L-.5],[g,c+L+.5]]).on("brush end",({selection:m})=>this.brushed(t,m))),f.select(".selection").attr("fill",null).attr("fill-opacity",null).attr("stroke",null).attr("stroke-width",null),e.grid=i})}removeLines(){this.lines.forEach(e=>{var t;(t=e.line)==null||t.remove(),e.line=null})}drawLines(){this.lines.forEach((e,t)=>{const s=this.svg.append("g").attr("transform",`translate(0, ${_})`);s.append("path").classed("line",!0).attr("fill","none").attr("stroke-width",1),s.append("path").classed("hover-trigger",!0).attr("stroke","transparent").attr("fill","none").attr("stroke-width",7).on("mouseenter",()=>{s.classed("disabled")||this.hoverLine(t)}).on("mouseleave",()=>{s.classed("disabled")||this.unhoverLine()}).on("click",i=>{s.classed("disabled")||(this.selectLine(t),i.stopPropagation())}),e.line=s}),this.updateLines(!1),this.updateLineColors(),this.updateLineWidths()}updateLineColors(){this.lines.forEach((e,t)=>{var a,l,h;const s=this.brushedLineIndexes!=null&&!this.brushedLineIndexes.includes(t),i=(a=e.line)==null?void 0:a.classed("disabled",s),n=i==null?void 0:i.select(".line"),r=i==null?void 0:i.selectAll(".select-indicator");s?(n==null||n.attr("stroke",null),r==null||r.attr("stroke",null)):((l=this.select(n,!0))==null||l.attr("stroke",e.color),(h=this.select(r,!0))==null||h.attr("stroke",e.color))})}updateLineWidths(){this.lines.forEach((e,t)=>{var i,n;let s=1;(t===this.hoveredLineIndex||t===this.selectedLineIndex)&&(s=3),(n=this.select((i=e.line)==null?void 0:i.select(".line"),!0))==null||n.attr("stroke-width",s)})}hoverLine(e){this.emit("hover",e),this.hoveredLineIndex=e,this.updateLineWidths()}unhoverLine(){this.hoveredLineIndex!=null&&(this.hoveredLineIndex=null,this.emit("hover",null)),this.updateLineWidths()}selectLine(e){this.emit("select",e),this.selectedLineIndex=e;const t=this.lines[e];this.lines.forEach(s=>{var i;return(i=s.line)==null?void 0:i.selectAll(".select-indicator").remove()}),this.sequenceGrids.forEach(s=>{var i,n;(n=t.line)==null||n.append("circle").classed("select-indicator",!0).attr("cx",s.x).attr("cy",(i=s.yScale(t.data[s.group][s.name]))!=null?i:0).attr("r",4).attr("stroke",t.color)}),this.updateLineWidths()}unselectLine(){var e;this.selectedLineIndex!=null&&((e=this.lines[this.selectedLineIndex].line)==null||e.selectAll(".select-indicator").remove(),this.selectedLineIndex=null,this.emit("select",null)),this.updateLineWidths()}calculateLineColors(){this.lines.forEach((e,t)=>{var s;e.color=(s=this.colors[t])!=null?s:"#000"})}calculateXScale(){const e=u.GRID_BRUSH_WIDTH/2,t=d.scalePoint().domain(this.sequenceGrids.map(s=>s.name)).range([e,e+this.columnWidth*(this.sequenceGrids.length-1)]);this.sequenceGrids.forEach(s=>{var i;s.x=(i=t(s.name))!=null?i:0})}calculateYScales(){const e=this.grids.map(t=>{var n;const s=u.GRAPH_HEIGHT-2*L;let i=[s+L,L];if(t.type==="continuous"){let r;const a=this.getDataByIndicator(t).map(h=>+h),l=d.extent(a);if(t.scale===G.LOGARITHMIC)r=d.scaleLog();else if(t.scale===G.QUANTILE){const h=20;r=d.scaleQuantile(),i=d.range(h).map(o=>i[0]-o*s/(h-1))}else r=d.scaleLinear();return r.domain(l).range(i)}return d.scalePoint().domain((n=t.selectedValues)!=null?n:[]).range(i).padding(.1)});this.grids.forEach((t,s)=>{t.yScale=e[s]})}getDiscreteLineBySelection(e,[t,s]){const i=this.grids[e],n=i.yScale,r=n.domain(),a=n.step(),l=n.padding()*a,h=r.length-Math.min(Math.floor((s-L-l)/a),r.length-1)-1,o=r.length-Math.max(Math.ceil((t-L-l)/a),0)-1;return this.data.reduce((c,g,f)=>{const p=r.indexOf(g[i.group][i.name]);return p>=h&&p<=o&&c.push(f),c},[])}getContinuousLineBySelection(e,[t,s]){const i=this.grids[e],n=i.yScale;let r,a;if(i.scale===G.QUANTILE){const l=n,h=l.range(),o=h.filter(c=>t<=c&&c<=s).map(c=>{const g=l.invertExtent(c);return c===h[h.length-1]?[g[0],g[1]+1]:g});[r,a]=d.extent(d.merge(o))}else{const l=n.invert;r=l(t),a=l(s)}return r>a&&([r,a]=[a,r]),this.data.reduce((l,h,o)=>{const c=h[i.group][i.name];return c>=r&&c<=a&&l.push(o),l},[])}brushed(e,t){const s=this.sequenceGrids[e];t==null?this.brushedLineIndexesArray[e]=null:s.type!=="continuous"?this.brushedLineIndexesArray[e]=this.getDiscreteLineBySelection(e,t):this.brushedLineIndexesArray[e]=this.getContinuousLineBySelection(e,t),this.updateLineColors()}dragstart(e,t){var s;this.draggingIndicator={...e},this.dragStartX=t,(s=e.grid)==null||s.classed("dragging",!0)}dragging(e,t){if(this.draggingIndicator){const s=t-this.dragStartX,i=Math.min(this.svgWidth-this.columnWidth+u.GRID_BRUSH_WIDTH/2,Math.max(0,this.draggingIndicator.x+s));e.x=i,this.calculateXScale(),this.sequenceGrids.forEach(({grid:n,name:r,x:a})=>n==null?void 0:n.attr("transform",`translate(${r===e.name?i:a}, 0)`)),this.updateLines(!1,{indicator:e.name,x:i}),this.emit("dragging",e.name,i-e.x,this.sequenceGrids.map(({name:n})=>n))}}dragend(){var e,t;(t=(e=this.draggingIndicator)==null?void 0:e.grid)==null||t.classed("dragging",!1),this.draggingIndicator=null,this.updateGrids(),this.updateLines(),this.emit("dragged",this.sequenceGrids.map(({name:s})=>s))}updateGrids(e=!0){this.sequenceGrids.forEach(({grid:t,x:s})=>{var i;return(i=this.select(t,e))==null?void 0:i.attr("transform",`translate(${s}, 0)`)})}updateLines(e=!0,t){this.lines.forEach(s=>{var r,a,l,h;const i=(a=(r=s.line)==null?void 0:r.selectAll(".select-indicator").nodes())!=null?a:[],n=d.line()(this.sequenceGrids.map(({group:o,name:c,x:g,yScale:f},p)=>{var v,m;let I=g;const x=(v=f(s.data[o][c]))!=null?v:0;return t&&t.indicator===c&&(I=t.x),i[p]&&((m=this.select(d.select(i[p]),e))==null||m.attr("cx",I).attr("cy",x)),[I,x]}));(h=this.select((l=s.line)==null?void 0:l.selectAll("path"),e))==null||h.attr("d",n!=null?n:"")})}select(e,t=!1){return t?e==null?void 0:e.transition().duration(75):e}setSvgSize(){const e=this.svgWidth,t=u.GRAPH_HEIGHT+_;this.svg.attr("width",e).attr("height",t).attr("viewBox",`0 0 ${e} ${t}`)}resize(e){this.containerWidth=e,this.setSvgSize(),this.calculateXScale(),this.updateGrids(!1),this.updateLines(!1)}setColors(e){this.colors=e,this.calculateLineColors(),this.updateLineColors()}setScaleMethod(e,t){const s=this.grids.find(i=>i.name===e);s&&(s.scale=t,this.removeGrids(),this.calculateYScales(),this.drawGrids(),this.updateLines())}render(e,t){if(e.length!==this.grids.length)this.unselectLine();else for(const s of e){const i=this.grids.find(n=>n.name===s.name);if(!i||i.group!==s.group||i.type!==s.type){this.unselectLine();break}}this.unhoverLine(),this.removeLines(),this.removeGrids(),this.grids=e.map(s=>({...s,scale:G.LINEAR,x:0,yScale:d.scaleLinear(),grid:null})),this.data=t,this.setSvgSize(),this.calculateXScale(),this.calculateYScales(),this.lines=t.map(s=>({data:s,color:"",line:null})),this.calculateLineColors(),this.drawLines(),this.drawGrids()}dispose(){this.removeLines(),this.removeGrids(),this.svg.remove()}};let S=u;S.GRAPH_HEIGHT=300,S.GRID_BRUSH_WIDTH=20;export default S;
