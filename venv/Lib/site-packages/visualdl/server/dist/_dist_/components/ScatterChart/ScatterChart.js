import*as s from"../../../__snowpack__/pkg/three.js";import*as d from"../../../__snowpack__/pkg/d3.js";import{ColorType as p}from"./types.js";import{OrbitControls as R}from"../../../__snowpack__/pkg/three/examples/jsm/controls/OrbitControls.js";const n=class{constructor(t,e){var i,o;this.background="#fff",this.is3D=!0,this.data=[],this.labels=[],this.axes=null,this.material=null,this.positions=new Float32Array,this.colors=new Float32Array,this.pickingMaterial=null,this.pickingColors=null,this.fog=null,this.blending=s.NormalBlending,this.depth=!0,this.colorMap={type:p.Null,labels:[]},this.colorGenerator=null,this.mouseCoordinates=null,this.focusedDataIndices=[],this.hoveredDataIndices=[],this.highLightDataIndices=[],this.rotate=!1,this.animationId=null,this.container=t,this.width=e.width,this.height=e.height,this.is3D=(i=e.is3D)!=null?i:this.is3D,this.background=(o=e.background)!=null?o:this.background,this.canvas=this.initCanvas(),this.container.appendChild(this.canvas),this.scene=this.initScene(),this.camera=this.initCamera(),this.renderer=this.initRenderer(),this.controls=this.initControls(),this.pickingRenderTarget=this.initRenderTarget(),this.geometry=this.createGeometry(),this.onMouseMoveBindThis=this.onMouseMove.bind(this),this.bindEventListeners(),this.is3D&&this.addAxes(),this.reset()}get dataCount(){return this.data.length}initCanvas(){const t=document.createElement("canvas");return t.width=this.width,t.height=this.height,t}initScene(){const t=new s.Scene;t.background=new s.Color(this.background);const e=new s.PointLight(16772287,1,0);return e.name="light",t.add(e),t}initCamera(){const t=new s.Vector3(0,0,0);let e;return this.is3D?(e=new s.PerspectiveCamera(n.PERSP_CAMERA_FOV_VERTICAL,this.width/this.height,n.PERSP_CAMERA_NEAR_CLIP_PLANE,n.PERSP_CAMERA_FAR_CLIP_PLANE),e.position.set(...n.PERSP_CAMERA_INIT_POSITION)):(e=new s.OrthographicCamera(-n.ORTHO_CAMERA_FRUSTUM_HALF_EXTENT,n.ORTHO_CAMERA_FRUSTUM_HALF_EXTENT,n.ORTHO_CAMERA_FRUSTUM_HALF_EXTENT,-n.ORTHO_CAMERA_FRUSTUM_HALF_EXTENT,-1e3,1e3),e.position.set(...n.ORTHO_CAMERA_INIT_POSITION),e.up=new s.Vector3(0,1,0)),e.lookAt(t),e.zoom=1,e.updateProjectionMatrix(),e}initRenderer(){var e;const t=new s.WebGLRenderer({canvas:(e=this.canvas)!=null?e:void 0,alpha:!0,premultipliedAlpha:!1,antialias:!1});return t.setClearColor(this.background,1),t.setPixelRatio(window.devicePixelRatio||1),t.setSize(this.width,this.height),t}initControls(){const t=new R(this.camera,this.renderer.domElement);return t.enableRotate=this.is3D,t.autoRotate=!1,t.rotateSpeed=n.ORBIT_MOUSE_ROTATION_SPEED,t.minDistance=n.MIN_ZOOM,t.maxDistance=n.MAX_ZOOM,t.mouseButtons.LEFT=this.is3D?s.MOUSE.ROTATE:s.MOUSE.PAN,t.reset(),t.addEventListener("start",()=>{this.stopRotate()}),t.addEventListener("change",()=>{this.render()}),t}initRenderTarget(){const t=new s.Vector2;this.renderer.getSize(t);const e=this.renderer.getPixelRatio(),i=new s.WebGLRenderTarget(t.width*e,t.height*e);return i.texture.minFilter=s.LinearFilter,i}createGeometry(){const t=new s.BufferGeometry;return t.computeBoundingSphere(),t}createRenderMaterial(){const t=this.createShaderUniforms(!1);return new s.ShaderMaterial({transparent:!0,depthTest:this.depth,depthWrite:this.depth,fog:this.fog!=null,blending:this.blending,uniforms:t,vertexShader:this.vertexShader,fragmentShader:this.fragmentShader})}createPickingMaterial(){const t=this.createShaderUniforms(!0);return new s.ShaderMaterial({transparent:!0,depthTest:!0,depthWrite:!0,fog:!1,blending:s.NormalBlending,uniforms:t,vertexShader:this.vertexShader,fragmentShader:this.fragmentShader})}convertColorMap(){switch(this.colorMap.type){case p.Value:{const{minValue:t,maxValue:e}=this.colorMap;return i=>{const o=Number.parseFloat(i);if(!Number.isFinite(o))return this.defaultColor;const h=d.scaleLinear().domain([t,e]).range(n.VALUE_COLOR_MAP_RANGE);return new s.Color(h(o))}}case p.Category:{const t=this.colorMap.categories;return e=>{const i=t.indexOf(e);return i===-1?this.defaultColor:n.CATEGORY_COLOR_MAP[i%n.CATEGORY_COLOR_MAP.length]}}default:return null}}getColorByIndex(t){return this.hoveredDataIndices.includes(t)?this.hoveredColor:this.focusedDataIndices.includes(t)?this.focusedColor:this.highLightDataIndices.includes(t)?this.highLightColor:this.colorGenerator?this.colorGenerator(this.colorMap.labels[t]):this.defaultColor}createMaterial(){this.material=this.createRenderMaterial(),this.pickingMaterial=this.createPickingMaterial()}setGeometryAttribute(t,e,i){this.geometry.setAttribute(t,new s.BufferAttribute(e,i))}setPosition(t){this.setGeometryAttribute("position",t,3)}setColor(t){this.setGeometryAttribute("color",t,3)}convertDataToPosition(){const t=this.data,e=d.scaleLinear(),i=d.scaleLinear();let o=null;const h=d.extent(t,(r,c)=>t[c][0]),m=d.extent(t,(r,c)=>t[c][1]),l=[-n.CUBE_LENGTH/2,n.CUBE_LENGTH/2];if(e.domain(h).range(l),i.domain(m).range(l),this.is3D){o=d.scaleLinear();const r=d.extent(t,(c,C)=>t[C][2]);o.domain(r).range(l)}const u=t.map(r=>{var c,C,E;return[(c=e(r[0]))!=null?c:0,(C=i(r[1]))!=null?C:0,(E=o==null?void 0:o(r[2]))!=null?E:0]}),g=new Float32Array(u.length*3);let _=0;return u.forEach(r=>{g[_++]=r[0],g[_++]=r[1],g[_++]=r[2]}),g}convertDataPickingColor(){const t=this.dataCount,e=new Float32Array(t*3);let i=0;for(let o=0;o<t;o++){const h=new s.Color(o);e[i++]=h.r,e[i++]=h.g,e[i++]=h.b}return e}updateHoveredPoints(){if(!this.mouseCoordinates)return;const t=window.devicePixelRatio||1,e=Math.floor(this.mouseCoordinates[0]*t),i=Math.floor(this.mouseCoordinates[1]*t),o=this.dataCount,h=Math.floor(t),m=Math.floor(t),l=new Uint8Array(h*m*4);this.renderer.readRenderTargetPixels(this.pickingRenderTarget,e,this.pickingRenderTarget.height-i,h,m,l);const u=new Uint8Array(o),g=h*m;for(let r=0;r<g;r++){const c=l[r*4]<<16|l[r*4+1]<<8|l[r*4+2];c!==16777215&&c<o&&(u[c]=1)}const _=[];for(let r=0;r<u.length;r++)u[r]===1&&_.push(r);this.hoveredDataIndices=_}updateLight(){const t=this.scene.getObjectByName("light"),i=this.camera.position.clone();i.x+=1,i.y+=1,t.position.set(i.x,i.y,i.z)}bindEventListeners(){var t;(t=this.canvas)==null||t.addEventListener("mousemove",this.onMouseMoveBindThis)}removeEventListeners(){var t;(t=this.canvas)==null||t.removeEventListener("mousemove",this.onMouseMoveBindThis)}onMouseMove(t){this.mouseCoordinates=[t.offsetX,t.offsetY],this.render()}addAxes(){this.axes&&this.removeAxes(),this.axes=new s.AxesHelper,this.scene.add(this.axes)}removeAxes(){this.axes&&(this.scene.remove(this.axes),this.axes=null)}render(){this.updateLight(),this.updateHoveredPoints(),this.onRender(),this.pickingMaterial&&(this.axes&&this.scene.remove(this.axes),this.object&&this.pickingMaterial&&(this.object.material=this.pickingMaterial),this.pickingColors&&this.setColor(this.pickingColors),this.renderer.setRenderTarget(this.pickingRenderTarget),this.renderer.render(this.scene,this.camera),this.axes&&this.scene.add(this.axes),this.object&&this.material&&(this.object.material=this.material)),this.colors.length&&this.setColor(this.colors),this.renderer.setRenderTarget(null),this.renderer.render(this.scene,this.camera)}startRotate(){if(this.rotate)return;this.rotate=!0,this.controls.autoRotate=!0,this.controls.autoRotateSpeed=n.ORBIT_ANIMATION_ROTATION_CYCLE_IN_SECONDS;const t=()=>{this.controls.update(),this.animationId=requestAnimationFrame(t)};t()}stopRotate(){this.rotate&&(this.rotate=!1,this.controls.autoRotate=!1,this.controls.rotateSpeed=n.ORBIT_MOUSE_ROTATION_SPEED,this.animationId!=null&&(cancelAnimationFrame(this.animationId),this.animationId=null))}reset(){this.controls.reset(),this.is3D&&!this.animationId&&this.startRotate()}setSize(t,e){if(this.width=t,this.height=e,this.onSetSize(t,e),this.is3D){const i=this.camera;i.aspect=t/e,i.updateProjectionMatrix()}this.renderer.setSize(t,e),this.pickingRenderTarget=this.initRenderTarget(),this.controls.update()}setDimension(t){this.is3D!==t&&(this.is3D=t,this.stopRotate(),this.controls.dispose(),this.camera=this.initCamera(),this.controls=this.initControls(),t?(this.addAxes(),this.startRotate()):this.removeAxes(),this.setData(this.data,this.labels,this.colorMap))}setData(t,e,i){this.object&&this.scene.remove(this.object),this.labels=e,this.colorMap=i!=null?i:{type:p.Null,labels:[]},this.data=t,this.colorGenerator=this.convertColorMap(),this.positions=this.convertDataToPosition(),this.pickingColors=this.convertDataPickingColor(),this.onDataSet(),this.object&&this.scene.add(this.object),this.render()}setHighLightIndices(t){this.highLightDataIndices=t,this.render()}setFocusedPointIndices(t){this.focusedDataIndices=t,this.render()}dispose(){var t,e;this.removeEventListeners(),this.onDispose(),this.canvas&&(this.container.removeChild(this.canvas),this.canvas=null),this.renderer.dispose(),this.controls.dispose(),this.pickingRenderTarget.dispose(),this.geometry.dispose(),(t=this.material)==null||t.dispose(),(e=this.pickingMaterial)==null||e.dispose()}};let a=n;a.CUBE_LENGTH=2,a.MAX_ZOOM=5*n.CUBE_LENGTH,a.MIN_ZOOM=.025*n.CUBE_LENGTH,a.PERSP_CAMERA_FOV_VERTICAL=70,a.PERSP_CAMERA_NEAR_CLIP_PLANE=.01,a.PERSP_CAMERA_FAR_CLIP_PLANE=100,a.ORTHO_CAMERA_FRUSTUM_HALF_EXTENT=1.2,a.ORBIT_MOUSE_ROTATION_SPEED=1,a.ORBIT_ANIMATION_ROTATION_CYCLE_IN_SECONDS=2,a.PERSP_CAMERA_INIT_POSITION=[.45,.9,1.6],a.ORTHO_CAMERA_INIT_POSITION=[0,0,4],a.VALUE_COLOR_MAP_RANGE=["#ffffdd","#1f2d86"],a.CATEGORY_COLOR_MAP=["#9BB9E8","#8BB8FF","#B4CCB7","#A8E9B8","#DB989A","#6DCDE4","#93C2CA","#DE7CCE","#DA96BC","#309E51","#D6C482","#6D7CE4","#CDCB74","#2576AD","#E46D6D","#CA5353","#E49D6D","#E4E06D"].map(t=>new s.Color(t));export default a;
