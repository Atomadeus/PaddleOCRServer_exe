import*as L from"../utils/chart.js";import n,{useEffect as z,useImperativeHandle as A}from"../../__snowpack__/pkg/react.js";import{primaryColor as j}from"../utils/style.js";import T,{Wrapper as D,useChartTheme as N}from"../hooks/useECharts.js";import G from"../../__snowpack__/pkg/react-spinners/GridLoader.js";import I from"../../__snowpack__/pkg/lodash/defaultsDeep.js";import{useTranslation as h}from"../../__snowpack__/pkg/react-i18next.js";export var XAxisType;(function(o){o.value="value",o.log="log",o.time="time"})(XAxisType||(XAxisType={}));export var YAxisType;(function(o){o.value="value",o.log="log"})(YAxisType||(YAxisType={}));const R=n.forwardRef(({options:o,data:a,title:d,loading:f,zoom:x,className:u,onInit:F,units:p},y)=>{const{i18n:v}=h(),{t:c}=h(["profiler","common"]),{ref:b,echart:s,wrapper:k,saveAsImage:w}=T({loading:!!f,zoom:x,autoFit:!0,onInit:F}),_=N();return A(y,()=>({restore:()=>{s==null||s.dispatchAction({type:"restore"})},saveAsImage:()=>{w(d)}})),z(()=>{if(!a)return;const{colorAlt:H,series:M,...O}=L,m=a.order,S=["#2932E1","#00CC88","#981EFF","#FF6D6D","#25C9FF","#E71ED5","#FFAA00","#00307D"],g=[],C=a.steps;for(let e=0;e<a.order.length;e++)g.push({name:m[e],type:"bar",stack:"\u6570\u636E",barCategoryGap:"0%",itemStyle:{color:S[e]},emphasis:{focus:"series"},data:a.data[e]});const E=I({tooltip:{trigger:"axis",extraCssText:"padding:15px;padding-right:41px;line-height:30px;width:auto;height:auto;background:rgba(0,0,0,0.75);box-shadow:1px 5px 20px 0px rgba(1,11,19,0.2);border-radius:6px;border:none;",axisPointer:{type:"shadow"},formatter:function(e){let l=0;for(let r=0;r<e.length;r++){const i=e[r];l+=Number(i.data)}l=Number(l.toFixed(2));let t="";t+='<div style="font-size:16px;color:#FFFFFF;font-weight:500;margin-left:17px;">step'+e[0].axisValue+"</div>",t+='<div class="tooltipContent">',t+='<div class="tooltipitems">',t+='<span style="display:inline-block;margin-right:5px;width:12px;height:12px;background-color:#2932E1;" class="ant-radio-inner ant-radio-checked"></span><span style="color: #FFFFFF;">total</span></span> : <span style="color: #FFFFFF;">'+l+p+"</span>",t+="</div>",t+="</div>";for(let r=0;r<e.length;r++){const i=e[r];t+='<div class="tooltipitems">',t+='<span style="font-size:12px;display:inline-block;margin-right:5px;width:12px;height:12px;border-radius:50%;background-color:'+i.color+';"></span><span style="color: #FFFFFF;">'+i.seriesName+'</span></span> : <span style="color: #FFFFFF;">'+i.data+p+"</span>",t+="</div>"}return t+="</div>",t}},legend:{data:m,top:0,right:0,itemGap:14,textStyle:{fontSize:14,color:"#666666",padding:[0,0,0,8]},itemWidth:17,itemHeight:5,icon:"path://M14.5,0h-12C1.1,0,0,1.1,0,2.5S1.1,5,2.5,5h12C15.9,5,17,3.9,17,2.5S15.9,0,14.5,0z"},grid:{left:"0",right:"0",bottom:"0",top:"62",containLabel:!0},xAxis:[{name:c("step"),nameLocation:"end",nameTextStyle:{fontSize:12,color:"#999999"},type:"category",data:C,axisLine:{lineStyle:{color:"#ccc"}},axisTick:{show:!1},splitArea:{show:!1},splitLine:{show:!1},axisLabel:{fontSize:12,color:"#666666"}}],yAxis:{name:c("timeConsuming"),nameTextStyle:{fontSize:12,color:"#999999"},type:"value",axisLine:{show:!0,lineStyle:{color:"#ccc"}},axisTick:{show:!1},splitLine:{show:!0,lineStyle:{opacity:.3}},axisLabel:{fontSize:12,color:"#666666"}},series:g});s==null||s.setOption(E,{notMerge:!0})},[o,a,d,_,v.language,s,c,p]),n.createElement(D,{ref:k,className:u},!s&&n.createElement("div",{className:"loading"},n.createElement(G,{color:j,size:"10px"})),n.createElement("div",{className:"echarts",ref:b}))});export default R;
