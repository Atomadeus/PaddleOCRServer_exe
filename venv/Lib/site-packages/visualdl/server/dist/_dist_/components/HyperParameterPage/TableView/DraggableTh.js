import w,{useCallback as H,useEffect as c,useRef as f,useState as Y}from"../../../../__snowpack__/pkg/react.js";import{useDrag as B,useDrop as C}from"../../../../__snowpack__/pkg/react-dnd.js";import{DND_TYPE as R}from"../../../resource/hyper-parameter/index.js";import{Dragger as D}from"../../Table.js";import{Th as N}from"../../Table.js";const P=({id:e,draggable:j,onDragStart:m,onDragEnd:g,onChangeDropSide:_,onDrop:n,className:T,style:x,children:E})=>{const o=f(null),[{isDragging:k},I,O]=B(()=>({type:R,item:{id:e!=null?e:""},options:{dropEffect:"move"},previewOptions:{offsetX:8,offsetY:25},collect:t=>({isDragging:t.isDragging()})})),l=f(m);c(()=>{l.current=m},[m]);const u=f(g);c(()=>{u.current=g},[g]),c(()=>{var t,s;k?(t=l.current)==null||t.call(l,e!=null?e:""):(s=u.current)==null||s.call(u,e!=null?e:"")},[e,k]);const[r,b]=Y(null),i=H(()=>{r&&(n==null||n(e!=null?e:"",r))},[r,e,n]),h=f(i);c(()=>{h.current=i},[i]);const[{handlerId:X},y]=C(()=>({accept:R,collect:t=>({handlerId:t.getHandlerId()}),canDrop:()=>!!j,hover:(t,s)=>{if(!o.current||!s.canDrop())return;const p=o.current.getBoundingClientRect();if(p){const F=(p.right-p.left)/2,v=s.getClientOffset();v&&(v.x-p.left<F?b("before"):b("after"))}},drop:t=>(h.current(),t)})),a=f(_);return c(()=>{a.current=_},[_]),c(()=>{var t;r&&e&&((t=a.current)==null||t.call(a,e,r))},[r,e]),O(y(o)),w.createElement(N,{ref:o,"data-handler-id":X,className:T,style:x},j?w.createElement(D,{ref:I}):null,E)};export default P;
