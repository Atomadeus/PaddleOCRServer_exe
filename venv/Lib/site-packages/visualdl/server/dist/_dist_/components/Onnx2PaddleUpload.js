import t,{useState as h}from"../../__snowpack__/pkg/react.js";import{Form as s,Input as T,Radio as u,Select as d}from"../../__snowpack__/pkg/antd.js";import $ from"./Button.js";import{axios_fetcher as j}from"../utils/fetch.js";import{message as v}from"../../__snowpack__/pkg/antd.js";import{useTranslation as q}from"../../__snowpack__/pkg/react-i18next.js";import{Progress as C}from"../../__snowpack__/pkg/antd.js";const{Option:y}=d;export default function L(i){const[p]=s.useForm(),{t:l}=q(["togglegraph","common"]),g={labelCol:{span:4},wrapperCol:{span:14}},[E,_]=h(0),[f,c]=h(!1),I={name:"file",action:"",headers:{authorization:"authorization-text"},onChange(e){e.file.status!=="uploading"&&console.log(e.file,e.fileList),e.file.status==="done"?v.success(`${e.file.name} file uploaded successfully`):e.file.status==="error"&&v.error(`${e.file.name} file upload failed.`)}},x=["arm","opencl","x86","metal","xpu","bm","mlu","intel_fpga","huawei_ascend_npu","imagination_nna","rockchip_npu","mediatek_apu","huawei_kirin_npu","amlogic_npu"],k=["protobuf","naive_buffer"],w=(e,n)=>{const m=atob(e);let o=m.length;const a=new Uint8Array(o);for(;o--;)a[o]=m.charCodeAt(o);return new File([a],n)},b=async()=>{i.changeLoading(!0);const e=await p.validateFields(),n=new FormData,o=document.getElementById("upload_onnx_model_file").files[0];n.append("convert_to_lite",e.convertToLite),n.append("model",o),n.append("lite_valid_places",e.liteValidPlaces),n.append("lite_model_type:",e.liteModelType),j("/inference/onnx2paddle/convert",{method:"POST",body:n},{onDownloadProgress:function(a){_(Math.round(a.progress*100)),c(!0)}}).then(a=>{const P=w(a.model,"model.pdmodel");i.setFiles([o]),i.changeFiles2([P]);const r=new Date,F=`${r.getFullYear()}_${r.getMonth()}_${r.getDay()}_${r.getHours()}_${r.getMinutes()}_${r.getSeconds()}_paddlemodel.tar`;i.downloadEvent(a.request_id,F)},a=>{i.changeLoading(!1),console.log(a)}).finally(()=>{c(!1)})};return t.createElement("div",null,t.createElement("div",{style:{textAlign:"center",margin:"40px",fontSize:"26px"}},l("togglegraph:Onnx2PaddleTitle")),t.createElement(s,{layout:g,form:p,initialValues:{layout:g},style:{maxWidth:600}},t.createElement(s.Item,{label:l("togglegraph:model"),name:"model",rules:[{required:!0,message:l("isRequire")}]},t.createElement(T,{type:"file",id:"upload_onnx_model_file",accept:".onnx"})),t.createElement(s.Item,{name:"convertToLite",label:l("togglegraph:convert_to_lite"),rules:[{required:!0,message:l("isRequire")}],initialValue:"no"},t.createElement(u.Group,null,t.createElement(u,{value:"yes"},l("togglegraph:isYes")),t.createElement(u,{value:"no"},l("togglegraph:isNo")))),t.createElement(s.Item,{label:l("togglegraph:lite_valid_places"),name:"liteValidPlaces",rules:[{required:!1}],initialValue:"arm"},t.createElement(d,{placeholder:"Please select a lite place"},x.map(e=>t.createElement(y,{value:e,key:e},e)))),t.createElement(s.Item,{label:l("togglegraph:lite_model_type"),name:"liteModelType",rules:[{required:!1}],initialValue:"naive_buffer"},t.createElement(d,{placeholder:"Please select a lite model type"},k.map(e=>t.createElement(y,{value:e,key:e},e))))),t.createElement("div",{style:{textAlign:"center"}},t.createElement($,{onClick:()=>{_(0),c(!0),b()}},l("Conversion")),f?t.createElement(C,{type:"circle",percent:E}):null,f?t.createElement("h1",null," ",l("togglegraph:converting")," "):null))}
