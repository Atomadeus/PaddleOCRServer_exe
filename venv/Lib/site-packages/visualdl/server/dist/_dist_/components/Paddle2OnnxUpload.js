import t,{useState as h}from"../../__snowpack__/pkg/react.js";import{Form as s,Input as y,Select as d}from"../../__snowpack__/pkg/antd.js";import j from"./Button.js";import{message as v}from"../../__snowpack__/pkg/antd.js";import{axios_fetcher as q}from"../utils/fetch.js";import{useTranslation as B}from"../../__snowpack__/pkg/react-i18next.js";import{Progress as I}from"../../__snowpack__/pkg/antd.js";const{Option:E}=d;export default function D(c){const[u]=s.useForm(),g={labelCol:{span:4},wrapperCol:{span:14}},{t:l}=B(["togglegraph","common"]),[k,_]=h(0),[f,i]=h(!1),L={name:"file",action:"",headers:{authorization:"authorization-text"},onChange(e){e.file.status!=="uploading"&&console.log(e.file,e.fileList),e.file.status==="done"?v.success(`${e.file.name} file uploaded successfully`):e.file.status==="error"&&v.error(`${e.file.name} file upload failed.`)}},x=[7,8,9,10,11,12,13,14,15,16],w=["onnxruntime","tensorrt","others"],b=(e,a)=>{const m=atob(e);let n=m.length;const p=new Uint8Array(n);for(;n--;)p[n]=m.charCodeAt(n);return new File([p],a)},F=async()=>{c.changeLoading(!0);const e=await u.validateFields(),a=new FormData,n=document.getElementById("upload_pd_model_file").files[0],P=document.getElementById("upload_pd_param_file").files[0];a.append("model",n),a.append("param",P),a.append("opset_version",e.opset_version),a.append("deploy_backend:",e.deployBackend),q("/inference/paddle2onnx/convert",{method:"POST",body:a},{onDownloadProgress:function(o){_(Math.round(o.progress*100)),i(!0)}}).then(o=>{const C=b(o.model,"model.onnx");c.setFiles([n]),c.changeFiles2([C]);const r=new Date,$=`${r.getFullYear()}_${r.getMonth()}_${r.getDay()}_${r.getHours()}_${r.getMinutes()}_${r.getSeconds()}_onnxmodel.onnx`;c.downloadEvent(o.request_id,$)},o=>{c.changeLoading(!1),console.log(o)}).finally(()=>{i(!1)})};return t.createElement("div",null,t.createElement("div",{style:{textAlign:"center",margin:"40px",fontSize:"26px"}},l("togglegraph:Paddle2OnnxTitle")),t.createElement(s,{layout:g,form:u,initialValues:{layout:g},style:{maxWidth:600}},t.createElement(s.Item,{label:l("togglegraph:pdmodels"),name:"model",rules:[{required:!0,message:l("isRequire")}]},t.createElement(y,{type:"file",id:"upload_pd_model_file",accept:".pdmodel"})),t.createElement(s.Item,{label:l("togglegraph:pdiparams"),name:"param",rules:[{required:!0,message:l("isRequire")}]},t.createElement(y,{type:"file",id:"upload_pd_param_file",accept:".pdiparams"})),t.createElement(s.Item,{label:l("togglegraph:opset_version"),name:"opset_version",rules:[{required:!1}],initialValue:"11"},t.createElement(d,{placeholder:"Please select a version"},x.map(e=>t.createElement(E,{value:e,key:e},e)))),t.createElement(s.Item,{label:l("togglegraph:deploy_backend"),name:"deployBackend",rules:[{required:!1}],initialValue:"onnxruntime"},t.createElement(d,{placeholder:"Please select a version"},w.map(e=>t.createElement(E,{value:e,key:e},e))))),t.createElement("div",{style:{textAlign:"center"}},t.createElement(j,{onClick:()=>{_(0),i(!0),F()}},l("togglegraph:Conversion")),f?t.createElement(I,{type:"circle",className:"processCircle",percent:k}):null,f?t.createElement("h1",null," ",l("togglegraph:converting")," "):null))}
