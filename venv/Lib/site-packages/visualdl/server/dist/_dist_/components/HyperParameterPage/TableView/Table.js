import{ExpandContainer as re,TBody as ae,THead as le,Table as ne,Td as oe,Tr as W}from"../../Table.js";import l,{useCallback as i,useEffect as _,useLayoutEffect as ie,useMemo as m,useRef as ce,useState as E}from"../../../../__snowpack__/pkg/react.js";import{color as v,colorAlt as z}from"../../../utils/chart.js";import{useColumnOrder as me,useExpanded as de,useFlexLayout as pe,useResizeColumns as ue,useSortBy as fe,useTable as ge}from"../../../../__snowpack__/pkg/react-table.js";import M from"./Cell.js";import{DndProvider as be}from"../../../../__snowpack__/pkg/react-dnd.js";import he from"./DraggableTh.js";import{HTML5Backend as ke}from"../../../../__snowpack__/pkg/react-dnd-html5-backend.js";import G from"./Header.js";import Ce from"../MetricGraphs.js";import _e from"./MetricsHeader.js";import Ee from"./NameCell.js";import je from"./NameHeader.js";import Te from"../../../../__snowpack__/pkg/classnames.js";import we from"../../../hooks/useClassNames.js";import{useSticky as ye}from"../../../../__snowpack__/pkg/react-table-sticky.js";const De=({indicators:d,list:L,sortBy:c,columnOrder:h,onOrderChange:g,expand:k,expandAll:F})=>{const j=ce(null),$=m(()=>({minWidth:100,draggable:!0}),[]),A=m(()=>[{accessor:"name",Header:k?je:G,Cell:k?Ee:M,width:200,sticky:"left",draggable:!1},...d.map(({name:e,group:t})=>({accessor:`${t}.${e}`,id:e,Header:t==="metrics"?_e:G,Cell:M,minWidth:200}))],[k,d]),V=m(()=>h?["name",...h]:[],[h]),{getTableProps:q,headerGroups:J,rows:K,prepareRow:Q,setSortBy:T,setColumnOrder:w,state:y,totalColumnsWidth:b,visibleColumns:D,allColumns:H}=ge({columns:A,data:L,defaultColumn:$,initialState:{sortBy:c!=null?c:[],columnOrder:V},autoResetExpanded:!1},pe,ye,ue,fe,me,de);_(()=>{H.forEach(e=>{const t=d.find(s=>s.name===e.id);t&&e.toggleHidden(!t.selected)})},[H,d]),_(()=>T(c!=null?c:[]),[T,c]);const[a,N]=E(null),[n,U]=E(null),X=i(e=>N(e),[]),Y=i(()=>N(null),[]),Z=i((e,t)=>U([e,t]),[]),r=m(()=>D.map(e=>e.id),[D]);_(()=>{g==null||g(r.filter(e=>e!=="name"))},[g,r]);const R=m(()=>{if(a!=null&&n!=null){const[e,t]=n,s=r.findIndex(o=>o===e);if(t==="before"&&s>0)return r[s-1];if(t==="after"&&s<r.length-1)return r[s]}return null},[a,n,r]),P=m(()=>a!=null&&n&&n[1]==="before"&&r[0]===n[0],[a,n,r]),x=m(()=>a!=null&&n&&n[1]==="after"&&r[r.length-1]===n[0],[a,n,r]),O=i((e,t)=>{if(a==null)return;const s=r.filter(f=>f!==a),o=r.findIndex(f=>f===a),C=s.findIndex(f=>f===e);let u=null;C===-1?u=o:t==="before"?u=C:t==="after"&&(u=C+1),u!=null&&(s.splice(u,0,a),w(s))},[a,r,w]),[p,B]=E(0);ie(()=>{const e=j.current;if(e){const t=new ResizeObserver(()=>{const s=e.getBoundingClientRect();B(s.width)});return t.observe(e),()=>t.unobserve(e)}},[]);const ee=we("sticky",{"is-droppable-left":P,"is-droppable-right":x},[P,x]),I=i(e=>({className:Te({"is-sticky":!!e.sticky,"is-resizing":y.columnResizing.isResizingColumn===e.id,"is-dragging":a===e.id,"is-droppable":R===e.id}),style:{position:e.sticky?"sticky":"relative"}}),[a,R,y.columnResizing.isResizingColumn]),S=i(()=>b>p?{style:{width:"fit-content"}}:{style:{width:"auto"}},[p,b]),te=i(()=>b>p?{style:{width:p-2}}:{style:{width:"auto"}},[p,b]),se=i(({index:e,values:t})=>({metrics:d.filter(s=>s.group==="metrics"&&s.selected).map(s=>s.name),run:{label:t.name,colors:[v[e%v.length],z[e%z.length]]}}),[d]);return l.createElement(be,{backend:ke},l.createElement(ne,{...q({className:ee,style:{minWidth:"unset"}}),ref:j},l.createElement(le,{...S()},J.map(e=>l.createElement(W,{...e.getHeaderGroupProps()},e.headers.map(t=>l.createElement(he,{...t.getHeaderProps([{className:t.className,style:t.style},I(t)]),id:t.id,draggable:t.draggable,onDragStart:X,onDragEnd:Y,onChangeDropSide:Z,onDrop:O},t.render("Header")))))),l.createElement(ae,{...S()},K.map(e=>{Q(e);const{key:t,...s}=e.getRowProps();return l.createElement(l.Fragment,{key:t},l.createElement(W,{...s},e.cells.map(o=>l.createElement(oe,{...o.getCellProps([{className:o.column.className,style:o.column.style},I(o.column)])},o.render("Cell")))),e.isExpanded||F?l.createElement(re,{...te()},l.createElement(Ce,{...se(e)})):null)}))))};export default De;
