import A from"../../../__snowpack__/pkg/numeric.js";export default(l,e,n)=>{const i=l.length/e,o=[];for(let r=0;r<i;r++)o.push(Array.from(l.subarray(r*e,r*e+e)));const{dot:g,transpose:m,svd:h,div:p}=A,w=g(m(o),o),y=p(w,i),f=h(y),t=f.S;let u=0;for(let r=0;r<t.length;r++)u+=t[r];for(let r=0;r<t.length;r++)t[r]/=u;const V=f.U,_=o.map(r=>{const c=new Float32Array(n);for(let a=0;a<n;a++){let d=0;for(let s=0;s<r.length;s++)d+=r[s]*V[s][a];c[a]=d}return Array.from(c)}),v=t.slice(0,n);return{vectors:_,variance:v,totalVariance:v.reduce((r,c)=>r+c,0)}};
