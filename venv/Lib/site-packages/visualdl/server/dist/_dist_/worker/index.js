import*as s from"../../__snowpack__/env.js";import{callListener as i,checkWorkerModuleSupport as h,pushFunctionToListener as r,removeFunctionFromListener as n,runner as l}from"./utils.js";import m from"../../__snowpack__/pkg/eventemitter3.js";const a=s.SNOWPACK_PUBLIC_BASE_URI,o=JSON.parse(JSON.stringify(s));export default class c{constructor(e){this.listeners={},this.onceListeners={},this.worker=null,this.emitter=null,this.env=o;const t=`${a}/_dist_/worker`;h()?(this.worker=new Worker(`${t}/worker.js`,{type:"module"}),this.worker.addEventListener("message",this.listener.bind(this)),this.emit("INITIALIZE",{name:e,env:o})):(this.emitter=new m,this.emitter.addListener("message",this.listener.bind(this)),window.setTimeout(()=>{l(e,this)},200))}listener(e){i.call(this,this.onceListeners,e.data),i.call(this,this.listeners,e.data),delete this.onceListeners[e.data.type]}emit(e,t){this.worker?this.worker.postMessage({type:e,data:t}):this.emitter&&this.emitter.emit("message",{data:{type:e,data:t}})}on(e,t){r(this.listeners,e,t)}off(e,t){n(this.listeners,e,t),n(this.onceListeners,e,t)}once(e,t){r(this.onceListeners,e,t)}terminate(){this.worker&&this.worker.terminate()}}
