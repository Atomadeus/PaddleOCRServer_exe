import{PCA as u,UMAP as r,tSNE as m}from"../../resource/high-dimensional/index.js";const E=t=>{const c=n=>{const{vectors:e,variance:i,totalVariance:p}=u(n.input,n.dim,n.n);t.emit("RESULT",{vectors:e,variance:i,totalVariance:p})},o=n=>{const e=new m({dimension:n.n,perplexity:n.perplexity,epsilon:n.epsilon}),i=()=>{e.setData(n.input,n.dim),t.emit("RESULT",{vectors:e.solution,step:e.step})};i(),t.on("INFO",p=>{switch(p.type){case"step":return e.run(),t.emit("RESULT",{vectors:e.solution,step:e.step});case"reset":return i();case"params":{const s=p.data;(s==null?void 0:s.perplexity)!=null&&e.setPerplexity(s.perplexity),(s==null?void 0:s.epsilon)!=null&&e.setEpsilon(s.epsilon);return}default:return null}})},l=n=>{const e=r(n.n,n.neighbors,n.input,n.dim);e&&t.emit("RESULT",{vectors:e.embedding,epoch:e.nEpochs,nEpochs:e.nEpochs}),t.on("INFO",()=>{t.emit("INITIALIZED")})};t.on("RUN",({reduction:n,params:e})=>{switch(n){case"pca":return c(e);case"tsne":return o(e);case"umap":return l(e);default:return null}}),t.emit("INITIALIZED")};export default E;
