export function checkWorkerModuleSupport(){let r=!1;const n={get type(){return r=!0,"module"}};try{new Worker("blob://",n)}finally{return r}}export function handlerInListener(r,n,o){return r[n].findIndex(t=>Object.is(t,o))}export function pushFunctionToListener(r,n,o){r[n]||(r[n]=[]),handlerInListener(r,n,o)===-1&&r[n].push(o)}export function removeFunctionFromListener(r,n,o){if(r[n])if(!o)delete r[n];else{const t=handlerInListener(r,n,o);t!==-1&&r[n].splice(t,1)}}export function callListener(r,n){var o;(o=r[n.type])==null||o.forEach(t=>{try{t(n.data)}catch(e){const c=e instanceof Error?e:new Error(e);this.emit("ERROR",c)}})}export async function runner(r,n){const{default:o}=await import(r);o(n)}
