var dl4j=dl4j||{},long=long||{Long:require("long")};dl4j.ModelFactory=class{match(t){return!!("zip"===t.identifier.toLowerCase().split(".").pop().toLowerCase()&&t.entries("zip").length>0&&dl4j.ModelFactory._openContainer(t))}open(t,e){const n=t.identifier;try{const s=dl4j.ModelFactory._openContainer(t),r=JSON.parse(s.configuration);return dl4j.Metadata.open(e).then((t=>{try{return new dl4j.Model(t,r,s.coefficients)}catch(t){e.exception(t,!1);const s=t&&t.message?t.message:t.toString();throw new dl4j.Error(s.replace(/\.$/,"")+" in '"+n+"'.")}}))}catch(t){e.exception(t,!1);const s=t&&t.message?t.message:t.toString();return Promise.reject(new dl4j.Error(s.replace(/\.$/,"")+" in '"+n+"'."))}}static _openContainer(t){const e=t.entries("zip"),n=e.filter((t=>"configuration.json"===t.name));if(1!=n.length)return null;let s=null;try{s=new TextDecoder("utf-8").decode(n[0].data)}catch(t){return null}if(-1===s.indexOf('"vertices"')&&-1===s.indexOf('"confs"'))return null;const r=e.filter((t=>"coefficients.bin"===t.name));return r.length>1?null:{configuration:s,coefficients:1==r.length?r[0].data:[]}}},dl4j.Model=class{constructor(t,e,n){this._graphs=[],this._graphs.push(new dl4j.Graph(t,e,n))}get format(){return"Deeplearning4j"}get graphs(){return this._graphs}},dl4j.Graph=class{constructor(t,e,n){this._inputs=[],this._outputs=[],this._nodes=[];const s=new dl4j.NDArrayReader(n).dataType;if(e.networkInputs)for(const t of e.networkInputs)this._inputs.push(new dl4j.Parameter(t,!0,[new dl4j.Argument(t,null,null)]));if(e.networkOutputs)for(const t of e.networkOutputs)this._outputs.push(new dl4j.Parameter(t,!0,[new dl4j.Argument(t,null,null)]));let r=null;if(e.vertices)for(const n in e.vertices){const i=dl4j.Node._object(e.vertices[n]);r=e.vertexInputs[n];let a=[],o=null;switch(i.__type__){case"LayerVertex":o=dl4j.Node._object(i.layerConf.layer),a=i.layerConf.variables;break;case"MergeVertex":o={__type__:"Merge",layerName:n};break;case"ElementWiseVertex":o={__type__:"ElementWise",layerName:n,op:i.op};break;case"PreprocessorVertex":o={__type__:"Preprocessor",layerName:n};break;default:throw new dl4j.Error("Unsupported vertex class '"+i["@class"]+"'.")}this._nodes.push(new dl4j.Node(t,o,r,s,a))}if(e.confs){r=["input"],this._inputs.push(new dl4j.Parameter("input",!0,[new dl4j.Argument("input",null,null)]));for(const n of e.confs){const e=dl4j.Node._object(n.layer);this._nodes.push(new dl4j.Node(t,e,r,s,n.variables)),r=[e.layerName]}this._outputs.push(new dl4j.Parameter("output",!0,[new dl4j.Argument(r[0],null,null)]))}}get inputs(){return this._inputs}get outputs(){return this._outputs}get nodes(){return this._nodes}},dl4j.Parameter=class{constructor(t,e,n){this._name=t,this._visible=e,this._arguments=n}get name(){return this._name}get visible(){return this._visible}get arguments(){return this._arguments}},dl4j.Argument=class{constructor(t,e,n){if("string"!=typeof t)throw new dl4j.Error("Invalid argument identifier '"+JSON.stringify(t)+"'.");this._name=t,this._type=e,this._initializer=n}get name(){return this._name}get type(){return this._initializer?this._initializer.type:this._type}get initializer(){return this._initializer}},dl4j.Node=class{constructor(t,e,n,s,r){if(this._metadata=t,this._type=e.__type__,this._name=e.layerName||"",this._inputs=[],this._outputs=[],this._attributes=[],n&&n.length>0){const t=n.map((t=>new dl4j.Argument(t,null,null)));this._inputs.push(new dl4j.Parameter(t.length<2?"input":"inputs",!0,t))}if(r)for(const t of r){let n=null;switch(this._type){case"Convolution":switch(t){case"W":n=new dl4j.Tensor(s,e.kernelSize.concat([e.nin,e.nout]));break;case"b":n=new dl4j.Tensor(s,[e.nout]);break;default:throw new dl4j.Error("Unknown '"+this._type+"' variable '"+t+"'.")}break;case"SeparableConvolution2D":switch(t){case"W":n=new dl4j.Tensor(s,e.kernelSize.concat([e.nin,e.nout]));break;case"pW":n=new dl4j.Tensor(s,[e.nout]);break;default:throw new dl4j.Error("Unknown '"+this._type+"' variable '"+t+"'.")}break;case"Output":case"Dense":switch(t){case"W":n=new dl4j.Tensor(s,[e.nout,e.nin]);break;case"b":n=new dl4j.Tensor(s,[e.nout]);break;default:throw new dl4j.Error("Unknown '"+this._type+"' variable '"+t+"'.")}break;case"BatchNormalization":n=new dl4j.Tensor(s,[e.nin]);break;default:throw new dl4j.Error("Unknown '"+this._type+"' variable '"+t+"'.")}this._inputs.push(new dl4j.Parameter(t,!0,[new dl4j.Argument(t,null,n)]))}this._name&&this._outputs.push(new dl4j.Parameter("output",!0,[new dl4j.Argument(this._name,null,null)]));let i=e;if(e.activationFn){const n=dl4j.Node._object(e.activationFn);"ActivationIdentity"!==n.__type__&&"Identity"!==n.__type__&&(n.__type__.startsWith("Activation")&&(n.__type__=n.__type__.substring("Activation".length)),"Activation"==this._type?(this._type=n.__type__,i=n):(this._chain=this._chain||[],this._chain.push(new dl4j.Node(t,n,[],null,null))))}for(const e in i){switch(e){case"__type__":case"constraints":case"layerName":case"activationFn":case"idropout":case"hasBias":continue}this._attributes.push(new dl4j.Attribute(t.attribute(this._type,e),e,i[e]))}if(e.idropout&&1!==dl4j.Node._object(e.idropout).p)throw new dl4j.Error("Layer 'idropout' not implemented.")}get type(){return this._type}get name(){return this._name}get metadata(){return this._metadata.type(this._type)}get inputs(){return this._inputs}get outputs(){return this._outputs}get attributes(){return this._attributes}get chain(){return this._chain}static _object(t){let e={};if(t["@class"]){e=t;let n=t["@class"].split(".").pop();n.endsWith("Layer")&&(n=n.substring(0,n.length-5)),delete t["@class"],e.__type__=n}else{let n=Object.keys(t)[0];e=t[n],n.length>0&&(n=n[0].toUpperCase()+n.substring(1)),e.__type__=n}return e}},dl4j.Attribute=class{constructor(t,e,n){this._name=e,this._value=n,this._visible=!1,t&&t.visible&&(this._visible=!0)}get name(){return this._name}get type(){return this._type}get value(){return this._value}get visible(){return this._visible}},dl4j.Tensor=class{constructor(t,e){this._type=new dl4j.TensorType(t,new dl4j.TensorShape(e))}get type(){return this._type}get state(){return"Not implemented."}},dl4j.TensorType=class{constructor(t,e){this._dataType=t,this._shape=e}get dataType(){return this._dataType}get shape(){return this._shape}toString(){return(this.dataType||"?")+this._shape.toString()}},dl4j.TensorShape=class{constructor(t){this._dimensions=t}get dimensions(){return this._dimensions}toString(){return this._dimensions?0==this._dimensions.length?"":"["+this._dimensions.map((t=>t.toString())).join(",")+"]":""}},dl4j.Metadata=class{static open(t){return dl4j.Metadata.textDecoder=dl4j.Metadata.textDecoder||new TextDecoder("utf-8"),dl4j.Metadata._metadata?Promise.resolve(dl4j.Metadata._metadata):t.request(null,"dl4j-metadata.json","utf-8").then((t=>(dl4j.Metadata._metadata=new dl4j.Metadata(t),dl4j.Metadata._metadata))).catch((()=>(dl4j.Metadata._metadata=new dl4j.Metadata(null),dl4j.Metadata._metadata)))}constructor(t){if(this._map={},this._attributeCache={},t&&t){const e=JSON.parse(t);if(e)for(const t of e)t.schema.name=t.name,this._map[t.name]=t.schema}}type(t){return this._map[t]}attribute(t,e){let n=this._attributeCache[t];if(!n){n={};const e=this.type(t);if(e&&e.attributes&&e.attributes.length>0)for(const t of e.attributes)n[t.name]=t;this._attributeCache[t]=n}return n[e]||null}},dl4j.NDArrayReader=class{constructor(t){const e=new dl4j.BinaryReader(t);dl4j.NDArrayReader._header(e);const n=dl4j.NDArrayReader._header(e);this._dataType=n.type}get dataType(){return this._dataType}static _header(t){const e={};switch(e.alloc=t.string(),e.length=0,e.alloc){case"DIRECT":case"HEAP":case"JAVACPP":e.length=t.int32();break;case"LONG_SHAPE":case"MIXED_DATA_TYPES":e.length=t.int64()}switch(e.type=t.string(),e.type){case"INT":e.type="int32",e.itemsize=4;break;case"FLOAT":e.type="float32",e.itemsize=4}return e.data=t.bytes(e.itemsize*e.length),e}},dl4j.BinaryReader=class{constructor(t){this._buffer=t,this._position=0}bytes(t){const e=this._buffer.subarray(this._position,this._position+t);return this._position+=t,e}string(){const t=this._buffer[this._position++]<<8|this._buffer[this._position++],e=this.bytes(t);return new TextDecoder("ascii").decode(e)}int32(){return this._buffer[this._position++]<<24|this._buffer[this._position++]<<16|this._buffer[this._position++]<<8|this._buffer[this._position++]}int64(){const t=this.int32(),e=this.int32();return new long.Long(t,e,!0).toNumber()}},dl4j.Error=class extends Error{constructor(t){super(t),this.name="Error loading Deeplearning4j model."}},"undefined"!=typeof module&&"object"==typeof module.exports&&(module.exports.ModelFactory=dl4j.ModelFactory);