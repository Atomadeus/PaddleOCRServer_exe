var $root=protobuf.get("coreml");$root.CoreML={},$root.CoreML.Specification={},$root.CoreML.Specification.Pipeline=class{constructor(){this.models=[],this.names=[]}static decode(e,o){const t=new $root.CoreML.Specification.Pipeline,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.models.push($root.CoreML.Specification.Model.decode(e,e.uint32()));break;case 2:t.names.push(e.string());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.PipelineClassifier=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.PipelineClassifier,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.pipeline=$root.CoreML.Specification.Pipeline.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.PipelineClassifier.prototype.pipeline=null,$root.CoreML.Specification.PipelineRegressor=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.PipelineRegressor,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.pipeline=$root.CoreML.Specification.Pipeline.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.PipelineRegressor.prototype.pipeline=null,$root.CoreML.Specification.FeatureDescription=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.FeatureDescription,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.name=e.string();break;case 2:t.shortDescription=e.string();break;case 3:t.type=$root.CoreML.Specification.FeatureType.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.FeatureDescription.prototype.name="",$root.CoreML.Specification.FeatureDescription.prototype.shortDescription="",$root.CoreML.Specification.FeatureDescription.prototype.type=null,$root.CoreML.Specification.Metadata=class{constructor(){this.userDefined={}}static decode(e,o){const t=new $root.CoreML.Specification.Metadata,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.shortDescription=e.string();break;case 2:t.versionString=e.string();break;case 3:t.author=e.string();break;case 4:t.license=e.string();break;case 100:e.pair(t.userDefined,(()=>e.string()),(()=>e.string()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Metadata.prototype.shortDescription="",$root.CoreML.Specification.Metadata.prototype.versionString="",$root.CoreML.Specification.Metadata.prototype.author="",$root.CoreML.Specification.Metadata.prototype.license="",$root.CoreML.Specification.ModelDescription=class{constructor(){this.input=[],this.output=[],this.trainingInput=[]}static decode(e,o){const t=new $root.CoreML.Specification.ModelDescription,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.input.push($root.CoreML.Specification.FeatureDescription.decode(e,e.uint32()));break;case 10:t.output.push($root.CoreML.Specification.FeatureDescription.decode(e,e.uint32()));break;case 11:t.predictedFeatureName=e.string();break;case 12:t.predictedProbabilitiesName=e.string();break;case 50:t.trainingInput.push($root.CoreML.Specification.FeatureDescription.decode(e,e.uint32()));break;case 100:t.metadata=$root.CoreML.Specification.Metadata.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ModelDescription.prototype.predictedFeatureName="",$root.CoreML.Specification.ModelDescription.prototype.predictedProbabilitiesName="",$root.CoreML.Specification.ModelDescription.prototype.metadata=null,$root.CoreML.Specification.SerializedModel=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SerializedModel,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.identifier=e.string();break;case 2:t.model=e.bytes();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SerializedModel.prototype.identifier="",$root.CoreML.Specification.SerializedModel.prototype.model=new Uint8Array([]),$root.CoreML.Specification.Model=class{constructor(){}get Type(){return $root.CoreML.Specification.Model.TypeSet=$root.CoreML.Specification.Model.TypeSet||new Set(["pipelineClassifier","pipelineRegressor","pipeline","glmRegressor","supportVectorRegressor","treeEnsembleRegressor","neuralNetworkRegressor","bayesianProbitRegressor","glmClassifier","supportVectorClassifier","treeEnsembleClassifier","neuralNetworkClassifier","kNearestNeighborsClassifier","neuralNetwork","itemSimilarityRecommender","customModel","linkedModel","oneHotEncoder","imputer","featureVectorizer","dictVectorizer","scaler","categoricalMapping","normalizer","arrayFeatureExtractor","nonMaximumSuppression","identity","textClassifier","wordTagger","visionFeaturePrint","soundAnalysisPreprocessing","gazetteer","wordEmbedding","serializedModel"]),Object.keys(this).find((e=>$root.CoreML.Specification.Model.TypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.Model,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.specificationVersion=e.int32();break;case 2:t.description=$root.CoreML.Specification.ModelDescription.decode(e,e.uint32());break;case 10:t.isUpdatable=e.bool();break;case 200:t.pipelineClassifier=$root.CoreML.Specification.PipelineClassifier.decode(e,e.uint32());break;case 201:t.pipelineRegressor=$root.CoreML.Specification.PipelineRegressor.decode(e,e.uint32());break;case 202:t.pipeline=$root.CoreML.Specification.Pipeline.decode(e,e.uint32());break;case 300:t.glmRegressor=$root.CoreML.Specification.GLMRegressor.decode(e,e.uint32());break;case 301:t.supportVectorRegressor=$root.CoreML.Specification.SupportVectorRegressor.decode(e,e.uint32());break;case 302:t.treeEnsembleRegressor=$root.CoreML.Specification.TreeEnsembleRegressor.decode(e,e.uint32());break;case 303:t.neuralNetworkRegressor=$root.CoreML.Specification.NeuralNetworkRegressor.decode(e,e.uint32());break;case 304:t.bayesianProbitRegressor=$root.CoreML.Specification.BayesianProbitRegressor.decode(e,e.uint32());break;case 400:t.glmClassifier=$root.CoreML.Specification.GLMClassifier.decode(e,e.uint32());break;case 401:t.supportVectorClassifier=$root.CoreML.Specification.SupportVectorClassifier.decode(e,e.uint32());break;case 402:t.treeEnsembleClassifier=$root.CoreML.Specification.TreeEnsembleClassifier.decode(e,e.uint32());break;case 403:t.neuralNetworkClassifier=$root.CoreML.Specification.NeuralNetworkClassifier.decode(e,e.uint32());break;case 404:t.kNearestNeighborsClassifier=$root.CoreML.Specification.KNearestNeighborsClassifier.decode(e,e.uint32());break;case 500:t.neuralNetwork=$root.CoreML.Specification.NeuralNetwork.decode(e,e.uint32());break;case 501:t.itemSimilarityRecommender=$root.CoreML.Specification.ItemSimilarityRecommender.decode(e,e.uint32());break;case 555:t.customModel=$root.CoreML.Specification.CustomModel.decode(e,e.uint32());break;case 556:t.linkedModel=$root.CoreML.Specification.LinkedModel.decode(e,e.uint32());break;case 600:t.oneHotEncoder=$root.CoreML.Specification.OneHotEncoder.decode(e,e.uint32());break;case 601:t.imputer=$root.CoreML.Specification.Imputer.decode(e,e.uint32());break;case 602:t.featureVectorizer=$root.CoreML.Specification.FeatureVectorizer.decode(e,e.uint32());break;case 603:t.dictVectorizer=$root.CoreML.Specification.DictVectorizer.decode(e,e.uint32());break;case 604:t.scaler=$root.CoreML.Specification.Scaler.decode(e,e.uint32());break;case 606:t.categoricalMapping=$root.CoreML.Specification.CategoricalMapping.decode(e,e.uint32());break;case 607:t.normalizer=$root.CoreML.Specification.Normalizer.decode(e,e.uint32());break;case 609:t.arrayFeatureExtractor=$root.CoreML.Specification.ArrayFeatureExtractor.decode(e,e.uint32());break;case 610:t.nonMaximumSuppression=$root.CoreML.Specification.NonMaximumSuppression.decode(e,e.uint32());break;case 900:t.identity=$root.CoreML.Specification.Identity.decode(e,e.uint32());break;case 2e3:t.textClassifier=$root.CoreML.Specification.CoreMLModels.TextClassifier.decode(e,e.uint32());break;case 2001:t.wordTagger=$root.CoreML.Specification.CoreMLModels.WordTagger.decode(e,e.uint32());break;case 2002:t.visionFeaturePrint=$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.decode(e,e.uint32());break;case 2003:t.soundAnalysisPreprocessing=$root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.decode(e,e.uint32());break;case 2004:t.gazetteer=$root.CoreML.Specification.CoreMLModels.Gazetteer.decode(e,e.uint32());break;case 2005:t.wordEmbedding=$root.CoreML.Specification.CoreMLModels.WordEmbedding.decode(e,e.uint32());break;case 3e3:t.serializedModel=$root.CoreML.Specification.SerializedModel.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Model.prototype.specificationVersion=0,$root.CoreML.Specification.Model.prototype.description=null,$root.CoreML.Specification.Model.prototype.isUpdatable=!1,$root.CoreML.Specification.CoreMLModels={},$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint=class{constructor(){}get VisionFeaturePrintType(){return $root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.VisionFeaturePrintTypeSet=$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.VisionFeaturePrintTypeSet||new Set(["scene","objects"]),Object.keys(this).find((e=>$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.VisionFeaturePrintTypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.CoreMLModels.VisionFeaturePrint,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 20:t.scene=$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Scene.decode(e,e.uint32());break;case 21:t.objects=$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Scene=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Scene,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.version=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Scene.prototype.version=0,$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Scene.SceneVersion={SCENE_VERSION_INVALID:0,SCENE_VERSION_1:1},$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects=class{constructor(){this.output=[]}static decode(e,o){const t=new $root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.version=e.int32();break;case 100:t.output.push(e.string());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects.prototype.version=0,$root.CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects.ObjectsVersion={OBJECTS_VERSION_INVALID:0,OBJECTS_VERSION_1:1},$root.CoreML.Specification.CoreMLModels.TextClassifier=class{constructor(){}get ClassLabels(){return $root.CoreML.Specification.CoreMLModels.TextClassifier.ClassLabelsSet=$root.CoreML.Specification.CoreMLModels.TextClassifier.ClassLabelsSet||new Set(["stringClassLabels"]),Object.keys(this).find((e=>$root.CoreML.Specification.CoreMLModels.TextClassifier.ClassLabelsSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.CoreMLModels.TextClassifier,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.revision=e.uint32();break;case 10:t.language=e.string();break;case 100:t.modelParameterData=e.bytes();break;case 200:t.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CoreMLModels.TextClassifier.prototype.revision=0,$root.CoreML.Specification.CoreMLModels.TextClassifier.prototype.language="",$root.CoreML.Specification.CoreMLModels.TextClassifier.prototype.modelParameterData=new Uint8Array([]),$root.CoreML.Specification.CoreMLModels.WordTagger=class{constructor(){}get Tags(){return $root.CoreML.Specification.CoreMLModels.WordTagger.TagsSet=$root.CoreML.Specification.CoreMLModels.WordTagger.TagsSet||new Set(["stringTags"]),Object.keys(this).find((e=>$root.CoreML.Specification.CoreMLModels.WordTagger.TagsSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.CoreMLModels.WordTagger,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.revision=e.uint32();break;case 10:t.language=e.string();break;case 20:t.tokensOutputFeatureName=e.string();break;case 21:t.tokenTagsOutputFeatureName=e.string();break;case 22:t.tokenLocationsOutputFeatureName=e.string();break;case 23:t.tokenLengthsOutputFeatureName=e.string();break;case 100:t.modelParameterData=e.bytes();break;case 200:t.stringTags=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CoreMLModels.WordTagger.prototype.revision=0,$root.CoreML.Specification.CoreMLModels.WordTagger.prototype.language="",$root.CoreML.Specification.CoreMLModels.WordTagger.prototype.tokensOutputFeatureName="",$root.CoreML.Specification.CoreMLModels.WordTagger.prototype.tokenTagsOutputFeatureName="",$root.CoreML.Specification.CoreMLModels.WordTagger.prototype.tokenLocationsOutputFeatureName="",$root.CoreML.Specification.CoreMLModels.WordTagger.prototype.tokenLengthsOutputFeatureName="",$root.CoreML.Specification.CoreMLModels.WordTagger.prototype.modelParameterData=new Uint8Array([]),$root.CoreML.Specification.CoreMLModels.Gazetteer=class{constructor(){}get ClassLabels(){return $root.CoreML.Specification.CoreMLModels.Gazetteer.ClassLabelsSet=$root.CoreML.Specification.CoreMLModels.Gazetteer.ClassLabelsSet||new Set(["stringClassLabels"]),Object.keys(this).find((e=>$root.CoreML.Specification.CoreMLModels.Gazetteer.ClassLabelsSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.CoreMLModels.Gazetteer,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.revision=e.uint32();break;case 10:t.language=e.string();break;case 100:t.modelParameterData=e.bytes();break;case 200:t.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CoreMLModels.Gazetteer.prototype.revision=0,$root.CoreML.Specification.CoreMLModels.Gazetteer.prototype.language="",$root.CoreML.Specification.CoreMLModels.Gazetteer.prototype.modelParameterData=new Uint8Array([]),$root.CoreML.Specification.CoreMLModels.WordEmbedding=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.CoreMLModels.WordEmbedding,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.revision=e.uint32();break;case 10:t.language=e.string();break;case 100:t.modelParameterData=e.bytes();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CoreMLModels.WordEmbedding.prototype.revision=0,$root.CoreML.Specification.CoreMLModels.WordEmbedding.prototype.language="",$root.CoreML.Specification.CoreMLModels.WordEmbedding.prototype.modelParameterData=new Uint8Array([]),$root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing=class{constructor(){}get SoundAnalysisPreprocessingType(){return $root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.SoundAnalysisPreprocessingTypeSet=$root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.SoundAnalysisPreprocessingTypeSet||new Set(["vggish"]),Object.keys(this).find((e=>$root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.SoundAnalysisPreprocessingTypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 20:t.vggish=$root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.Vggish.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.Vggish=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.Vggish,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.StringToInt64Map=class{constructor(){this.map={}}static decode(e,o){const t=new $root.CoreML.Specification.StringToInt64Map,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:e.pair(t.map,(()=>e.string()),(()=>e.int64()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Int64ToStringMap=class{constructor(){this.map={}}static decode(e,o){const t=new $root.CoreML.Specification.Int64ToStringMap,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:e.pair(t.map,(()=>e.int64()),(()=>e.string()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.StringToDoubleMap=class{constructor(){this.map={}}static decode(e,o){const t=new $root.CoreML.Specification.StringToDoubleMap,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:e.pair(t.map,(()=>e.string()),(()=>e.double()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Int64ToDoubleMap=class{constructor(){this.map={}}static decode(e,o){const t=new $root.CoreML.Specification.Int64ToDoubleMap,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:e.pair(t.map,(()=>e.int64()),(()=>e.double()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.StringVector=class{constructor(){this.vector=[]}static decode(e,o){const t=new $root.CoreML.Specification.StringVector,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.vector.push(e.string());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Int64Vector=class{constructor(){this.vector=[]}static decode(e,o){const t=new $root.CoreML.Specification.Int64Vector,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.vector=e.array(t.vector,(()=>e.int64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.FloatVector=class{constructor(){this.vector=[]}static decode(e,o){const t=new $root.CoreML.Specification.FloatVector,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.vector=e.floats(t.vector,o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.DoubleVector=class{constructor(){this.vector=[]}static decode(e,o){const t=new $root.CoreML.Specification.DoubleVector,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.vector=e.doubles(t.vector,o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Int64Range=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.Int64Range,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.minValue=e.int64();break;case 2:t.maxValue=e.int64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Int64Range.prototype.minValue=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.Int64Range.prototype.maxValue=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.Int64Set=class{constructor(){this.values=[]}static decode(e,o){const t=new $root.CoreML.Specification.Int64Set,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.values=e.array(t.values,(()=>e.int64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.DoubleRange=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.DoubleRange,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.minValue=e.double();break;case 2:t.maxValue=e.double();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.DoubleRange.prototype.minValue=0,$root.CoreML.Specification.DoubleRange.prototype.maxValue=0,$root.CoreML.Specification.Int64FeatureType=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.Int64FeatureType,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.DoubleFeatureType=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.DoubleFeatureType,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.StringFeatureType=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.StringFeatureType,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.SizeRange=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SizeRange,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.lowerBound=e.uint64();break;case 2:t.upperBound=e.int64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SizeRange.prototype.lowerBound=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.SizeRange.prototype.upperBound=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ImageFeatureType=class{constructor(){}get SizeFlexibility(){return $root.CoreML.Specification.ImageFeatureType.SizeFlexibilitySet=$root.CoreML.Specification.ImageFeatureType.SizeFlexibilitySet||new Set(["enumeratedSizes","imageSizeRange"]),Object.keys(this).find((e=>$root.CoreML.Specification.ImageFeatureType.SizeFlexibilitySet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.ImageFeatureType,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.width=e.int64();break;case 2:t.height=e.int64();break;case 21:t.enumeratedSizes=$root.CoreML.Specification.ImageFeatureType.EnumeratedImageSizes.decode(e,e.uint32());break;case 31:t.imageSizeRange=$root.CoreML.Specification.ImageFeatureType.ImageSizeRange.decode(e,e.uint32());break;case 3:t.colorSpace=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ImageFeatureType.prototype.width=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ImageFeatureType.prototype.height=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ImageFeatureType.prototype.colorSpace=0,$root.CoreML.Specification.ImageFeatureType.ColorSpace={INVALID_COLOR_SPACE:0,GRAYSCALE:10,RGB:20,BGR:30},$root.CoreML.Specification.ImageFeatureType.ImageSize=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ImageFeatureType.ImageSize,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.width=e.uint64();break;case 2:t.height=e.uint64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ImageFeatureType.ImageSize.prototype.width=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ImageFeatureType.ImageSize.prototype.height=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ImageFeatureType.EnumeratedImageSizes=class{constructor(){this.sizes=[]}static decode(e,o){const t=new $root.CoreML.Specification.ImageFeatureType.EnumeratedImageSizes,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.sizes.push($root.CoreML.Specification.ImageFeatureType.ImageSize.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ImageFeatureType.ImageSizeRange=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ImageFeatureType.ImageSizeRange,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.widthRange=$root.CoreML.Specification.SizeRange.decode(e,e.uint32());break;case 2:t.heightRange=$root.CoreML.Specification.SizeRange.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ImageFeatureType.ImageSizeRange.prototype.widthRange=null,$root.CoreML.Specification.ImageFeatureType.ImageSizeRange.prototype.heightRange=null,$root.CoreML.Specification.ArrayFeatureType=class{constructor(){this.shape=[]}get ShapeFlexibility(){return $root.CoreML.Specification.ArrayFeatureType.ShapeFlexibilitySet=$root.CoreML.Specification.ArrayFeatureType.ShapeFlexibilitySet||new Set(["enumeratedShapes","shapeRange"]),Object.keys(this).find((e=>$root.CoreML.Specification.ArrayFeatureType.ShapeFlexibilitySet.has(e)&&null!=this[e]))}get defaultOptionalValue(){return $root.CoreML.Specification.ArrayFeatureType.defaultOptionalValueSet=$root.CoreML.Specification.ArrayFeatureType.defaultOptionalValueSet||new Set(["intDefaultValue","floatDefaultValue","doubleDefaultValue"]),Object.keys(this).find((e=>$root.CoreML.Specification.ArrayFeatureType.defaultOptionalValueSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.ArrayFeatureType,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.shape=e.array(t.shape,(()=>e.int64()),o);break;case 2:t.dataType=e.int32();break;case 21:t.enumeratedShapes=$root.CoreML.Specification.ArrayFeatureType.EnumeratedShapes.decode(e,e.uint32());break;case 31:t.shapeRange=$root.CoreML.Specification.ArrayFeatureType.ShapeRange.decode(e,e.uint32());break;case 41:t.intDefaultValue=e.int32();break;case 51:t.floatDefaultValue=e.float();break;case 61:t.doubleDefaultValue=e.double();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ArrayFeatureType.prototype.dataType=0,$root.CoreML.Specification.ArrayFeatureType.ArrayDataType={INVALID_ARRAY_DATA_TYPE:0,FLOAT32:65568,DOUBLE:65600,INT32:131104},$root.CoreML.Specification.ArrayFeatureType.Shape=class{constructor(){this.shape=[]}static decode(e,o){const t=new $root.CoreML.Specification.ArrayFeatureType.Shape,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.shape=e.array(t.shape,(()=>e.int64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ArrayFeatureType.EnumeratedShapes=class{constructor(){this.shapes=[]}static decode(e,o){const t=new $root.CoreML.Specification.ArrayFeatureType.EnumeratedShapes,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.shapes.push($root.CoreML.Specification.ArrayFeatureType.Shape.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ArrayFeatureType.ShapeRange=class{constructor(){this.sizeRanges=[]}static decode(e,o){const t=new $root.CoreML.Specification.ArrayFeatureType.ShapeRange,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.sizeRanges.push($root.CoreML.Specification.SizeRange.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.DictionaryFeatureType=class{constructor(){}get KeyType(){return $root.CoreML.Specification.DictionaryFeatureType.KeyTypeSet=$root.CoreML.Specification.DictionaryFeatureType.KeyTypeSet||new Set(["int64KeyType","stringKeyType"]),Object.keys(this).find((e=>$root.CoreML.Specification.DictionaryFeatureType.KeyTypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.DictionaryFeatureType,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.int64KeyType=$root.CoreML.Specification.Int64FeatureType.decode(e,e.uint32());break;case 2:t.stringKeyType=$root.CoreML.Specification.StringFeatureType.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SequenceFeatureType=class{constructor(){}get Type(){return $root.CoreML.Specification.SequenceFeatureType.TypeSet=$root.CoreML.Specification.SequenceFeatureType.TypeSet||new Set(["int64Type","stringType"]),Object.keys(this).find((e=>$root.CoreML.Specification.SequenceFeatureType.TypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.SequenceFeatureType,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.int64Type=$root.CoreML.Specification.Int64FeatureType.decode(e,e.uint32());break;case 3:t.stringType=$root.CoreML.Specification.StringFeatureType.decode(e,e.uint32());break;case 101:t.sizeRange=$root.CoreML.Specification.SizeRange.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SequenceFeatureType.prototype.sizeRange=null,$root.CoreML.Specification.FeatureType=class{constructor(){}get Type(){return $root.CoreML.Specification.FeatureType.TypeSet=$root.CoreML.Specification.FeatureType.TypeSet||new Set(["int64Type","doubleType","stringType","imageType","multiArrayType","dictionaryType","sequenceType"]),Object.keys(this).find((e=>$root.CoreML.Specification.FeatureType.TypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.FeatureType,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.int64Type=$root.CoreML.Specification.Int64FeatureType.decode(e,e.uint32());break;case 2:t.doubleType=$root.CoreML.Specification.DoubleFeatureType.decode(e,e.uint32());break;case 3:t.stringType=$root.CoreML.Specification.StringFeatureType.decode(e,e.uint32());break;case 4:t.imageType=$root.CoreML.Specification.ImageFeatureType.decode(e,e.uint32());break;case 5:t.multiArrayType=$root.CoreML.Specification.ArrayFeatureType.decode(e,e.uint32());break;case 6:t.dictionaryType=$root.CoreML.Specification.DictionaryFeatureType.decode(e,e.uint32());break;case 7:t.sequenceType=$root.CoreML.Specification.SequenceFeatureType.decode(e,e.uint32());break;case 1e3:t.isOptional=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.FeatureType.prototype.isOptional=!1,$root.CoreML.Specification.ArrayFeatureExtractor=class{constructor(){this.extractIndex=[]}static decode(e,o){const t=new $root.CoreML.Specification.ArrayFeatureExtractor,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.extractIndex=e.array(t.extractIndex,(()=>e.uint64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BayesianProbitRegressor=class{constructor(){this.features=[]}static decode(e,o){const t=new $root.CoreML.Specification.BayesianProbitRegressor,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.numberOfFeatures=e.uint32();break;case 2:t.bias=$root.CoreML.Specification.BayesianProbitRegressor.Gaussian.decode(e,e.uint32());break;case 3:t.features.push($root.CoreML.Specification.BayesianProbitRegressor.FeatureWeight.decode(e,e.uint32()));break;case 10:t.regressionInputFeatureName=e.string();break;case 11:t.optimismInputFeatureName=e.string();break;case 12:t.samplingScaleInputFeatureName=e.string();break;case 13:t.samplingTruncationInputFeatureName=e.string();break;case 20:t.meanOutputFeatureName=e.string();break;case 21:t.varianceOutputFeatureName=e.string();break;case 22:t.pessimisticProbabilityOutputFeatureName=e.string();break;case 23:t.sampledProbabilityOutputFeatureName=e.string();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BayesianProbitRegressor.prototype.numberOfFeatures=0,$root.CoreML.Specification.BayesianProbitRegressor.prototype.bias=null,$root.CoreML.Specification.BayesianProbitRegressor.prototype.regressionInputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.prototype.optimismInputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.prototype.samplingScaleInputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.prototype.samplingTruncationInputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.prototype.meanOutputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.prototype.varianceOutputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.prototype.pessimisticProbabilityOutputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.prototype.sampledProbabilityOutputFeatureName="",$root.CoreML.Specification.BayesianProbitRegressor.Gaussian=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.BayesianProbitRegressor.Gaussian,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.mean=e.double();break;case 2:t.precision=e.double();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BayesianProbitRegressor.Gaussian.prototype.mean=0,$root.CoreML.Specification.BayesianProbitRegressor.Gaussian.prototype.precision=0,$root.CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.featureValue=e.uint32();break;case 2:t.featureWeight=$root.CoreML.Specification.BayesianProbitRegressor.Gaussian.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight.prototype.featureValue=0,$root.CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight.prototype.featureWeight=null,$root.CoreML.Specification.BayesianProbitRegressor.FeatureWeight=class{constructor(){this.weights=[]}static decode(e,o){const t=new $root.CoreML.Specification.BayesianProbitRegressor.FeatureWeight,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.featureId=e.uint32();break;case 2:t.weights.push($root.CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BayesianProbitRegressor.FeatureWeight.prototype.featureId=0,$root.CoreML.Specification.CategoricalMapping=class{constructor(){}get MappingType(){return $root.CoreML.Specification.CategoricalMapping.MappingTypeSet=$root.CoreML.Specification.CategoricalMapping.MappingTypeSet||new Set(["stringToInt64Map","int64ToStringMap"]),Object.keys(this).find((e=>$root.CoreML.Specification.CategoricalMapping.MappingTypeSet.has(e)&&null!=this[e]))}get ValueOnUnknown(){return $root.CoreML.Specification.CategoricalMapping.ValueOnUnknownSet=$root.CoreML.Specification.CategoricalMapping.ValueOnUnknownSet||new Set(["strValue","int64Value"]),Object.keys(this).find((e=>$root.CoreML.Specification.CategoricalMapping.ValueOnUnknownSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.CategoricalMapping,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.stringToInt64Map=$root.CoreML.Specification.StringToInt64Map.decode(e,e.uint32());break;case 2:t.int64ToStringMap=$root.CoreML.Specification.Int64ToStringMap.decode(e,e.uint32());break;case 101:t.strValue=e.string();break;case 102:t.int64Value=e.int64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CustomModel=class{constructor(){this.parameters={}}static decode(e,o){const t=new $root.CoreML.Specification.CustomModel,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 10:t.className=e.string();break;case 30:e.pair(t.parameters,(()=>e.string()),(()=>$root.CoreML.Specification.CustomModel.CustomModelParamValue.decode(e,e.uint32())));break;case 40:t.description=e.string();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CustomModel.prototype.className="",$root.CoreML.Specification.CustomModel.prototype.description="",$root.CoreML.Specification.CustomModel.CustomModelParamValue=class{constructor(){}get value(){return $root.CoreML.Specification.CustomModel.CustomModelParamValue.valueSet=$root.CoreML.Specification.CustomModel.CustomModelParamValue.valueSet||new Set(["doubleValue","stringValue","intValue","longValue","boolValue","bytesValue"]),Object.keys(this).find((e=>$root.CoreML.Specification.CustomModel.CustomModelParamValue.valueSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.CustomModel.CustomModelParamValue,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 10:t.doubleValue=e.double();break;case 20:t.stringValue=e.string();break;case 30:t.intValue=e.int32();break;case 40:t.longValue=e.int64();break;case 50:t.boolValue=e.bool();break;case 60:t.bytesValue=e.bytes();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.DictVectorizer=class{constructor(){}get Map(){return $root.CoreML.Specification.DictVectorizer.MapSet=$root.CoreML.Specification.DictVectorizer.MapSet||new Set(["stringToIndex","int64ToIndex"]),Object.keys(this).find((e=>$root.CoreML.Specification.DictVectorizer.MapSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.DictVectorizer,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.stringToIndex=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 2:t.int64ToIndex=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.FeatureVectorizer=class{constructor(){this.inputList=[]}static decode(e,o){const t=new $root.CoreML.Specification.FeatureVectorizer,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.inputList.push($root.CoreML.Specification.FeatureVectorizer.InputColumn.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.FeatureVectorizer.InputColumn=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.FeatureVectorizer.InputColumn,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.inputColumn=e.string();break;case 2:t.inputDimensions=e.uint64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.FeatureVectorizer.InputColumn.prototype.inputColumn="",$root.CoreML.Specification.FeatureVectorizer.InputColumn.prototype.inputDimensions=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.GLMRegressor=class{constructor(){this.weights=[],this.offset=[]}static decode(e,o){const t=new $root.CoreML.Specification.GLMRegressor,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.weights.push($root.CoreML.Specification.GLMRegressor.DoubleArray.decode(e,e.uint32()));break;case 2:t.offset=e.doubles(t.offset,o);break;case 3:t.postEvaluationTransform=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.GLMRegressor.prototype.postEvaluationTransform=0,$root.CoreML.Specification.GLMRegressor.DoubleArray=class{constructor(){this.value=[]}static decode(e,o){const t=new $root.CoreML.Specification.GLMRegressor.DoubleArray,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.value=e.doubles(t.value,o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.GLMRegressor.PostEvaluationTransform={NoTransform:0,Logit:1,Probit:2},$root.CoreML.Specification.GLMClassifier=class{constructor(){this.weights=[],this.offset=[]}get ClassLabels(){return $root.CoreML.Specification.GLMClassifier.ClassLabelsSet=$root.CoreML.Specification.GLMClassifier.ClassLabelsSet||new Set(["stringClassLabels","int64ClassLabels"]),Object.keys(this).find((e=>$root.CoreML.Specification.GLMClassifier.ClassLabelsSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.GLMClassifier,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.weights.push($root.CoreML.Specification.GLMClassifier.DoubleArray.decode(e,e.uint32()));break;case 2:t.offset=e.doubles(t.offset,o);break;case 3:t.postEvaluationTransform=e.int32();break;case 4:t.classEncoding=e.int32();break;case 100:t.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 101:t.int64ClassLabels=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.GLMClassifier.prototype.postEvaluationTransform=0,$root.CoreML.Specification.GLMClassifier.prototype.classEncoding=0,$root.CoreML.Specification.GLMClassifier.DoubleArray=class{constructor(){this.value=[]}static decode(e,o){const t=new $root.CoreML.Specification.GLMClassifier.DoubleArray,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.value=e.doubles(t.value,o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.GLMClassifier.PostEvaluationTransform={Logit:0,Probit:1},$root.CoreML.Specification.GLMClassifier.ClassEncoding={ReferenceClass:0,OneVsRest:1},$root.CoreML.Specification.KNearestNeighborsClassifier=class{constructor(){}get ClassLabels(){return $root.CoreML.Specification.KNearestNeighborsClassifier.ClassLabelsSet=$root.CoreML.Specification.KNearestNeighborsClassifier.ClassLabelsSet||new Set(["stringClassLabels","int64ClassLabels"]),Object.keys(this).find((e=>$root.CoreML.Specification.KNearestNeighborsClassifier.ClassLabelsSet.has(e)&&null!=this[e]))}get DefaultClassLabel(){return $root.CoreML.Specification.KNearestNeighborsClassifier.DefaultClassLabelSet=$root.CoreML.Specification.KNearestNeighborsClassifier.DefaultClassLabelSet||new Set(["defaultStringLabel","defaultInt64Label"]),Object.keys(this).find((e=>$root.CoreML.Specification.KNearestNeighborsClassifier.DefaultClassLabelSet.has(e)&&null!=this[e]))}get WeightingScheme(){return $root.CoreML.Specification.KNearestNeighborsClassifier.WeightingSchemeSet=$root.CoreML.Specification.KNearestNeighborsClassifier.WeightingSchemeSet||new Set(["uniformWeighting","inverseDistanceWeighting"]),Object.keys(this).find((e=>$root.CoreML.Specification.KNearestNeighborsClassifier.WeightingSchemeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.KNearestNeighborsClassifier,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.nearestNeighborsIndex=$root.CoreML.Specification.NearestNeighborsIndex.decode(e,e.uint32());break;case 3:t.numberOfNeighbors=$root.CoreML.Specification.Int64Parameter.decode(e,e.uint32());break;case 100:t.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 101:t.int64ClassLabels=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;case 110:t.defaultStringLabel=e.string();break;case 111:t.defaultInt64Label=e.int64();break;case 200:t.uniformWeighting=$root.CoreML.Specification.UniformWeighting.decode(e,e.uint32());break;case 210:t.inverseDistanceWeighting=$root.CoreML.Specification.InverseDistanceWeighting.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.KNearestNeighborsClassifier.prototype.nearestNeighborsIndex=null,$root.CoreML.Specification.KNearestNeighborsClassifier.prototype.numberOfNeighbors=null,$root.CoreML.Specification.NearestNeighborsIndex=class{constructor(){this.floatSamples=[]}get IndexType(){return $root.CoreML.Specification.NearestNeighborsIndex.IndexTypeSet=$root.CoreML.Specification.NearestNeighborsIndex.IndexTypeSet||new Set(["linearIndex","singleKdTreeIndex"]),Object.keys(this).find((e=>$root.CoreML.Specification.NearestNeighborsIndex.IndexTypeSet.has(e)&&null!=this[e]))}get DistanceFunction(){return $root.CoreML.Specification.NearestNeighborsIndex.DistanceFunctionSet=$root.CoreML.Specification.NearestNeighborsIndex.DistanceFunctionSet||new Set(["squaredEuclideanDistance"]),Object.keys(this).find((e=>$root.CoreML.Specification.NearestNeighborsIndex.DistanceFunctionSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.NearestNeighborsIndex,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.numberOfDimensions=e.int32();break;case 2:t.floatSamples.push($root.CoreML.Specification.FloatVector.decode(e,e.uint32()));break;case 100:t.linearIndex=$root.CoreML.Specification.LinearIndex.decode(e,e.uint32());break;case 110:t.singleKdTreeIndex=$root.CoreML.Specification.SingleKdTreeIndex.decode(e,e.uint32());break;case 200:t.squaredEuclideanDistance=$root.CoreML.Specification.SquaredEuclideanDistance.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NearestNeighborsIndex.prototype.numberOfDimensions=0,$root.CoreML.Specification.UniformWeighting=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.UniformWeighting,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.InverseDistanceWeighting=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.InverseDistanceWeighting,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.LinearIndex=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LinearIndex,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.SingleKdTreeIndex=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SingleKdTreeIndex,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.leafSize=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SingleKdTreeIndex.prototype.leafSize=0,$root.CoreML.Specification.SquaredEuclideanDistance=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SquaredEuclideanDistance,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.Int64Parameter=class{constructor(){}get AllowedValues(){return $root.CoreML.Specification.Int64Parameter.AllowedValuesSet=$root.CoreML.Specification.Int64Parameter.AllowedValuesSet||new Set(["range","set"]),Object.keys(this).find((e=>$root.CoreML.Specification.Int64Parameter.AllowedValuesSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.Int64Parameter,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.defaultValue=e.int64();break;case 10:t.range=$root.CoreML.Specification.Int64Range.decode(e,e.uint32());break;case 11:t.set=$root.CoreML.Specification.Int64Set.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Int64Parameter.prototype.defaultValue=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.DoubleParameter=class{constructor(){}get AllowedValues(){return $root.CoreML.Specification.DoubleParameter.AllowedValuesSet=$root.CoreML.Specification.DoubleParameter.AllowedValuesSet||new Set(["range"]),Object.keys(this).find((e=>$root.CoreML.Specification.DoubleParameter.AllowedValuesSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.DoubleParameter,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.defaultValue=e.double();break;case 10:t.range=$root.CoreML.Specification.DoubleRange.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.DoubleParameter.prototype.defaultValue=0,$root.CoreML.Specification.StringParameter=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.StringParameter,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.defaultValue=e.string();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.StringParameter.prototype.defaultValue="",$root.CoreML.Specification.BoolParameter=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.BoolParameter,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.defaultValue=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BoolParameter.prototype.defaultValue=!1,$root.CoreML.Specification.Identity=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.Identity,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.Imputer=class{constructor(){}get ImputedValue(){return $root.CoreML.Specification.Imputer.ImputedValueSet=$root.CoreML.Specification.Imputer.ImputedValueSet||new Set(["imputedDoubleValue","imputedInt64Value","imputedStringValue","imputedDoubleArray","imputedInt64Array","imputedStringDictionary","imputedInt64Dictionary"]),Object.keys(this).find((e=>$root.CoreML.Specification.Imputer.ImputedValueSet.has(e)&&null!=this[e]))}get ReplaceValue(){return $root.CoreML.Specification.Imputer.ReplaceValueSet=$root.CoreML.Specification.Imputer.ReplaceValueSet||new Set(["replaceDoubleValue","replaceInt64Value","replaceStringValue"]),Object.keys(this).find((e=>$root.CoreML.Specification.Imputer.ReplaceValueSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.Imputer,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.imputedDoubleValue=e.double();break;case 2:t.imputedInt64Value=e.int64();break;case 3:t.imputedStringValue=e.string();break;case 4:t.imputedDoubleArray=$root.CoreML.Specification.DoubleVector.decode(e,e.uint32());break;case 5:t.imputedInt64Array=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;case 6:t.imputedStringDictionary=$root.CoreML.Specification.StringToDoubleMap.decode(e,e.uint32());break;case 7:t.imputedInt64Dictionary=$root.CoreML.Specification.Int64ToDoubleMap.decode(e,e.uint32());break;case 11:t.replaceDoubleValue=e.double();break;case 12:t.replaceInt64Value=e.int64();break;case 13:t.replaceStringValue=e.string();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NeuralNetworkMultiArrayShapeMapping={RANK5_ARRAY_MAPPING:0,EXACT_ARRAY_MAPPING:1},$root.CoreML.Specification.NeuralNetworkImageShapeMapping={RANK5_IMAGE_MAPPING:0,RANK4_IMAGE_MAPPING:1},$root.CoreML.Specification.NeuralNetwork=class{constructor(){this.layers=[],this.preprocessing=[]}static decode(e,o){const t=new $root.CoreML.Specification.NeuralNetwork,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.layers.push($root.CoreML.Specification.NeuralNetworkLayer.decode(e,e.uint32()));break;case 2:t.preprocessing.push($root.CoreML.Specification.NeuralNetworkPreprocessing.decode(e,e.uint32()));break;case 5:t.arrayInputShapeMapping=e.int32();break;case 6:t.imageInputShapeMapping=e.int32();break;case 10:t.updateParams=$root.CoreML.Specification.NetworkUpdateParameters.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NeuralNetwork.prototype.arrayInputShapeMapping=0,$root.CoreML.Specification.NeuralNetwork.prototype.imageInputShapeMapping=0,$root.CoreML.Specification.NeuralNetwork.prototype.updateParams=null,$root.CoreML.Specification.NeuralNetworkImageScaler=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.NeuralNetworkImageScaler,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 10:t.channelScale=e.float();break;case 20:t.blueBias=e.float();break;case 21:t.greenBias=e.float();break;case 22:t.redBias=e.float();break;case 30:t.grayBias=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NeuralNetworkImageScaler.prototype.channelScale=0,$root.CoreML.Specification.NeuralNetworkImageScaler.prototype.blueBias=0,$root.CoreML.Specification.NeuralNetworkImageScaler.prototype.greenBias=0,$root.CoreML.Specification.NeuralNetworkImageScaler.prototype.redBias=0,$root.CoreML.Specification.NeuralNetworkImageScaler.prototype.grayBias=0,$root.CoreML.Specification.NeuralNetworkMeanImage=class{constructor(){this.meanImage=[]}static decode(e,o){const t=new $root.CoreML.Specification.NeuralNetworkMeanImage,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.meanImage=e.floats(t.meanImage,o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NeuralNetworkPreprocessing=class{constructor(){}get preprocessor(){return $root.CoreML.Specification.NeuralNetworkPreprocessing.preprocessorSet=$root.CoreML.Specification.NeuralNetworkPreprocessing.preprocessorSet||new Set(["scaler","meanImage"]),Object.keys(this).find((e=>$root.CoreML.Specification.NeuralNetworkPreprocessing.preprocessorSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.NeuralNetworkPreprocessing,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.featureName=e.string();break;case 10:t.scaler=$root.CoreML.Specification.NeuralNetworkImageScaler.decode(e,e.uint32());break;case 11:t.meanImage=$root.CoreML.Specification.NeuralNetworkMeanImage.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NeuralNetworkPreprocessing.prototype.featureName="",$root.CoreML.Specification.ActivationReLU=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ActivationReLU,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.ActivationLeakyReLU=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ActivationLeakyReLU,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ActivationLeakyReLU.prototype.alpha=0,$root.CoreML.Specification.ActivationTanh=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ActivationTanh,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.ActivationScaledTanh=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ActivationScaledTanh,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=e.float();break;case 2:t.beta=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ActivationScaledTanh.prototype.alpha=0,$root.CoreML.Specification.ActivationScaledTanh.prototype.beta=0,$root.CoreML.Specification.ActivationSigmoid=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ActivationSigmoid,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.ActivationLinear=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ActivationLinear,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=e.float();break;case 2:t.beta=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ActivationLinear.prototype.alpha=0,$root.CoreML.Specification.ActivationLinear.prototype.beta=0,$root.CoreML.Specification.ActivationSigmoidHard=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ActivationSigmoidHard,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=e.float();break;case 2:t.beta=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ActivationSigmoidHard.prototype.alpha=0,$root.CoreML.Specification.ActivationSigmoidHard.prototype.beta=0,$root.CoreML.Specification.ActivationPReLU=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ActivationPReLU,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ActivationPReLU.prototype.alpha=null,$root.CoreML.Specification.ActivationELU=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ActivationELU,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ActivationELU.prototype.alpha=0,$root.CoreML.Specification.ActivationThresholdedReLU=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ActivationThresholdedReLU,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ActivationThresholdedReLU.prototype.alpha=0,$root.CoreML.Specification.ActivationSoftsign=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ActivationSoftsign,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.ActivationSoftplus=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ActivationSoftplus,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.ActivationParametricSoftplus=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ActivationParametricSoftplus,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 2:t.beta=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ActivationParametricSoftplus.prototype.alpha=null,$root.CoreML.Specification.ActivationParametricSoftplus.prototype.beta=null,$root.CoreML.Specification.ActivationParams=class{constructor(){}get NonlinearityType(){return $root.CoreML.Specification.ActivationParams.NonlinearityTypeSet=$root.CoreML.Specification.ActivationParams.NonlinearityTypeSet||new Set(["linear","ReLU","leakyReLU","thresholdedReLU","PReLU","tanh","scaledTanh","sigmoid","sigmoidHard","ELU","softsign","softplus","parametricSoftplus"]),Object.keys(this).find((e=>$root.CoreML.Specification.ActivationParams.NonlinearityTypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.ActivationParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 5:t.linear=$root.CoreML.Specification.ActivationLinear.decode(e,e.uint32());break;case 10:t.ReLU=$root.CoreML.Specification.ActivationReLU.decode(e,e.uint32());break;case 15:t.leakyReLU=$root.CoreML.Specification.ActivationLeakyReLU.decode(e,e.uint32());break;case 20:t.thresholdedReLU=$root.CoreML.Specification.ActivationThresholdedReLU.decode(e,e.uint32());break;case 25:t.PReLU=$root.CoreML.Specification.ActivationPReLU.decode(e,e.uint32());break;case 30:t.tanh=$root.CoreML.Specification.ActivationTanh.decode(e,e.uint32());break;case 31:t.scaledTanh=$root.CoreML.Specification.ActivationScaledTanh.decode(e,e.uint32());break;case 40:t.sigmoid=$root.CoreML.Specification.ActivationSigmoid.decode(e,e.uint32());break;case 41:t.sigmoidHard=$root.CoreML.Specification.ActivationSigmoidHard.decode(e,e.uint32());break;case 50:t.ELU=$root.CoreML.Specification.ActivationELU.decode(e,e.uint32());break;case 60:t.softsign=$root.CoreML.Specification.ActivationSoftsign.decode(e,e.uint32());break;case 70:t.softplus=$root.CoreML.Specification.ActivationSoftplus.decode(e,e.uint32());break;case 71:t.parametricSoftplus=$root.CoreML.Specification.ActivationParametricSoftplus.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Tensor=class{constructor(){this.dimValue=[]}static decode(e,o){const t=new $root.CoreML.Specification.Tensor,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.rank=e.uint32();break;case 2:t.dimValue=e.array(t.dimValue,(()=>e.int64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Tensor.prototype.rank=0,$root.CoreML.Specification.NeuralNetworkLayer=class{constructor(){this.input=[],this.output=[],this.inputTensor=[],this.outputTensor=[]}get layer(){return $root.CoreML.Specification.NeuralNetworkLayer.layerSet=$root.CoreML.Specification.NeuralNetworkLayer.layerSet||new Set(["convolution","pooling","activation","innerProduct","embedding","batchnorm","mvn","l2normalize","softmax","lrn","crop","padding","upsample","resizeBilinear","cropResize","unary","add","multiply","average","scale","bias","max","min","dot","reduce","loadConstant","reshape","flatten","permute","concat","split","sequenceRepeat","reorganizeData","slice","simpleRecurrent","gru","uniDirectionalLSTM","biDirectionalLSTM","custom","copy","branch","loop","loopBreak","loopContinue","rangeStatic","rangeDynamic","clip","ceil","floor","sign","round","exp2","sin","cos","tan","asin","acos","atan","sinh","cosh","tanh","asinh","acosh","atanh","erf","gelu","equal","notEqual","lessThan","lessEqual","greaterThan","greaterEqual","logicalOr","logicalXor","logicalNot","logicalAnd","modBroadcastable","minBroadcastable","maxBroadcastable","addBroadcastable","powBroadcastable","divideBroadcastable","floorDivBroadcastable","multiplyBroadcastable","subtractBroadcastable","tile","stack","gather","scatter","gatherND","scatterND","softmaxND","gatherAlongAxis","scatterAlongAxis","reverse","reverseSeq","splitND","concatND","transpose","sliceStatic","sliceDynamic","slidingWindows","topK","argMin","argMax","embeddingND","batchedMatmul","getShape","loadConstantND","fillLike","fillStatic","fillDynamic","broadcastToLike","broadcastToStatic","broadcastToDynamic","squeeze","expandDims","flattenTo2D","reshapeLike","reshapeStatic","reshapeDynamic","rankPreservingReshape","constantPad","randomNormalLike","randomNormalStatic","randomNormalDynamic","randomUniformLike","randomUniformStatic","randomUniformDynamic","randomBernoulliLike","randomBernoulliStatic","randomBernoulliDynamic","categoricalDistribution","reduceL1","reduceL2","reduceMax","reduceMin","reduceSum","reduceProd","reduceMean","reduceLogSum","reduceSumSquare","reduceLogSumExp","whereNonZero","matrixBandPart","lowerTriangular","upperTriangular","whereBroadcastable","layerNormalization","NonMaximumSuppression","oneHot","cumSum","clampedReLU","argSort","pooling3d","globalPooling3d","sliceBySize","convolution3d"]),Object.keys(this).find((e=>$root.CoreML.Specification.NeuralNetworkLayer.layerSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.NeuralNetworkLayer,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.name=e.string();break;case 2:t.input.push(e.string());break;case 3:t.output.push(e.string());break;case 4:t.inputTensor.push($root.CoreML.Specification.Tensor.decode(e,e.uint32()));break;case 5:t.outputTensor.push($root.CoreML.Specification.Tensor.decode(e,e.uint32()));break;case 10:t.isUpdatable=e.bool();break;case 100:t.convolution=$root.CoreML.Specification.ConvolutionLayerParams.decode(e,e.uint32());break;case 120:t.pooling=$root.CoreML.Specification.PoolingLayerParams.decode(e,e.uint32());break;case 130:t.activation=$root.CoreML.Specification.ActivationParams.decode(e,e.uint32());break;case 140:t.innerProduct=$root.CoreML.Specification.InnerProductLayerParams.decode(e,e.uint32());break;case 150:t.embedding=$root.CoreML.Specification.EmbeddingLayerParams.decode(e,e.uint32());break;case 160:t.batchnorm=$root.CoreML.Specification.BatchnormLayerParams.decode(e,e.uint32());break;case 165:t.mvn=$root.CoreML.Specification.MeanVarianceNormalizeLayerParams.decode(e,e.uint32());break;case 170:t.l2normalize=$root.CoreML.Specification.L2NormalizeLayerParams.decode(e,e.uint32());break;case 175:t.softmax=$root.CoreML.Specification.SoftmaxLayerParams.decode(e,e.uint32());break;case 180:t.lrn=$root.CoreML.Specification.LRNLayerParams.decode(e,e.uint32());break;case 190:t.crop=$root.CoreML.Specification.CropLayerParams.decode(e,e.uint32());break;case 200:t.padding=$root.CoreML.Specification.PaddingLayerParams.decode(e,e.uint32());break;case 210:t.upsample=$root.CoreML.Specification.UpsampleLayerParams.decode(e,e.uint32());break;case 211:t.resizeBilinear=$root.CoreML.Specification.ResizeBilinearLayerParams.decode(e,e.uint32());break;case 212:t.cropResize=$root.CoreML.Specification.CropResizeLayerParams.decode(e,e.uint32());break;case 220:t.unary=$root.CoreML.Specification.UnaryFunctionLayerParams.decode(e,e.uint32());break;case 230:t.add=$root.CoreML.Specification.AddLayerParams.decode(e,e.uint32());break;case 231:t.multiply=$root.CoreML.Specification.MultiplyLayerParams.decode(e,e.uint32());break;case 240:t.average=$root.CoreML.Specification.AverageLayerParams.decode(e,e.uint32());break;case 245:t.scale=$root.CoreML.Specification.ScaleLayerParams.decode(e,e.uint32());break;case 250:t.bias=$root.CoreML.Specification.BiasLayerParams.decode(e,e.uint32());break;case 260:t.max=$root.CoreML.Specification.MaxLayerParams.decode(e,e.uint32());break;case 261:t.min=$root.CoreML.Specification.MinLayerParams.decode(e,e.uint32());break;case 270:t.dot=$root.CoreML.Specification.DotProductLayerParams.decode(e,e.uint32());break;case 280:t.reduce=$root.CoreML.Specification.ReduceLayerParams.decode(e,e.uint32());break;case 290:t.loadConstant=$root.CoreML.Specification.LoadConstantLayerParams.decode(e,e.uint32());break;case 300:t.reshape=$root.CoreML.Specification.ReshapeLayerParams.decode(e,e.uint32());break;case 301:t.flatten=$root.CoreML.Specification.FlattenLayerParams.decode(e,e.uint32());break;case 310:t.permute=$root.CoreML.Specification.PermuteLayerParams.decode(e,e.uint32());break;case 320:t.concat=$root.CoreML.Specification.ConcatLayerParams.decode(e,e.uint32());break;case 330:t.split=$root.CoreML.Specification.SplitLayerParams.decode(e,e.uint32());break;case 340:t.sequenceRepeat=$root.CoreML.Specification.SequenceRepeatLayerParams.decode(e,e.uint32());break;case 345:t.reorganizeData=$root.CoreML.Specification.ReorganizeDataLayerParams.decode(e,e.uint32());break;case 350:t.slice=$root.CoreML.Specification.SliceLayerParams.decode(e,e.uint32());break;case 400:t.simpleRecurrent=$root.CoreML.Specification.SimpleRecurrentLayerParams.decode(e,e.uint32());break;case 410:t.gru=$root.CoreML.Specification.GRULayerParams.decode(e,e.uint32());break;case 420:t.uniDirectionalLSTM=$root.CoreML.Specification.UniDirectionalLSTMLayerParams.decode(e,e.uint32());break;case 430:t.biDirectionalLSTM=$root.CoreML.Specification.BiDirectionalLSTMLayerParams.decode(e,e.uint32());break;case 500:t.custom=$root.CoreML.Specification.CustomLayerParams.decode(e,e.uint32());break;case 600:t.copy=$root.CoreML.Specification.CopyLayerParams.decode(e,e.uint32());break;case 605:t.branch=$root.CoreML.Specification.BranchLayerParams.decode(e,e.uint32());break;case 615:t.loop=$root.CoreML.Specification.LoopLayerParams.decode(e,e.uint32());break;case 620:t.loopBreak=$root.CoreML.Specification.LoopBreakLayerParams.decode(e,e.uint32());break;case 625:t.loopContinue=$root.CoreML.Specification.LoopContinueLayerParams.decode(e,e.uint32());break;case 635:t.rangeStatic=$root.CoreML.Specification.RangeStaticLayerParams.decode(e,e.uint32());break;case 640:t.rangeDynamic=$root.CoreML.Specification.RangeDynamicLayerParams.decode(e,e.uint32());break;case 660:t.clip=$root.CoreML.Specification.ClipLayerParams.decode(e,e.uint32());break;case 665:t.ceil=$root.CoreML.Specification.CeilLayerParams.decode(e,e.uint32());break;case 670:t.floor=$root.CoreML.Specification.FloorLayerParams.decode(e,e.uint32());break;case 680:t.sign=$root.CoreML.Specification.SignLayerParams.decode(e,e.uint32());break;case 685:t.round=$root.CoreML.Specification.RoundLayerParams.decode(e,e.uint32());break;case 700:t.exp2=$root.CoreML.Specification.Exp2LayerParams.decode(e,e.uint32());break;case 710:t.sin=$root.CoreML.Specification.SinLayerParams.decode(e,e.uint32());break;case 715:t.cos=$root.CoreML.Specification.CosLayerParams.decode(e,e.uint32());break;case 720:t.tan=$root.CoreML.Specification.TanLayerParams.decode(e,e.uint32());break;case 730:t.asin=$root.CoreML.Specification.AsinLayerParams.decode(e,e.uint32());break;case 735:t.acos=$root.CoreML.Specification.AcosLayerParams.decode(e,e.uint32());break;case 740:t.atan=$root.CoreML.Specification.AtanLayerParams.decode(e,e.uint32());break;case 750:t.sinh=$root.CoreML.Specification.SinhLayerParams.decode(e,e.uint32());break;case 755:t.cosh=$root.CoreML.Specification.CoshLayerParams.decode(e,e.uint32());break;case 760:t.tanh=$root.CoreML.Specification.TanhLayerParams.decode(e,e.uint32());break;case 770:t.asinh=$root.CoreML.Specification.AsinhLayerParams.decode(e,e.uint32());break;case 775:t.acosh=$root.CoreML.Specification.AcoshLayerParams.decode(e,e.uint32());break;case 780:t.atanh=$root.CoreML.Specification.AtanhLayerParams.decode(e,e.uint32());break;case 790:t.erf=$root.CoreML.Specification.ErfLayerParams.decode(e,e.uint32());break;case 795:t.gelu=$root.CoreML.Specification.GeluLayerParams.decode(e,e.uint32());break;case 815:t.equal=$root.CoreML.Specification.EqualLayerParams.decode(e,e.uint32());break;case 820:t.notEqual=$root.CoreML.Specification.NotEqualLayerParams.decode(e,e.uint32());break;case 825:t.lessThan=$root.CoreML.Specification.LessThanLayerParams.decode(e,e.uint32());break;case 827:t.lessEqual=$root.CoreML.Specification.LessEqualLayerParams.decode(e,e.uint32());break;case 830:t.greaterThan=$root.CoreML.Specification.GreaterThanLayerParams.decode(e,e.uint32());break;case 832:t.greaterEqual=$root.CoreML.Specification.GreaterEqualLayerParams.decode(e,e.uint32());break;case 840:t.logicalOr=$root.CoreML.Specification.LogicalOrLayerParams.decode(e,e.uint32());break;case 845:t.logicalXor=$root.CoreML.Specification.LogicalXorLayerParams.decode(e,e.uint32());break;case 850:t.logicalNot=$root.CoreML.Specification.LogicalNotLayerParams.decode(e,e.uint32());break;case 855:t.logicalAnd=$root.CoreML.Specification.LogicalAndLayerParams.decode(e,e.uint32());break;case 865:t.modBroadcastable=$root.CoreML.Specification.ModBroadcastableLayerParams.decode(e,e.uint32());break;case 870:t.minBroadcastable=$root.CoreML.Specification.MinBroadcastableLayerParams.decode(e,e.uint32());break;case 875:t.maxBroadcastable=$root.CoreML.Specification.MaxBroadcastableLayerParams.decode(e,e.uint32());break;case 880:t.addBroadcastable=$root.CoreML.Specification.AddBroadcastableLayerParams.decode(e,e.uint32());break;case 885:t.powBroadcastable=$root.CoreML.Specification.PowBroadcastableLayerParams.decode(e,e.uint32());break;case 890:t.divideBroadcastable=$root.CoreML.Specification.DivideBroadcastableLayerParams.decode(e,e.uint32());break;case 895:t.floorDivBroadcastable=$root.CoreML.Specification.FloorDivBroadcastableLayerParams.decode(e,e.uint32());break;case 900:t.multiplyBroadcastable=$root.CoreML.Specification.MultiplyBroadcastableLayerParams.decode(e,e.uint32());break;case 905:t.subtractBroadcastable=$root.CoreML.Specification.SubtractBroadcastableLayerParams.decode(e,e.uint32());break;case 920:t.tile=$root.CoreML.Specification.TileLayerParams.decode(e,e.uint32());break;case 925:t.stack=$root.CoreML.Specification.StackLayerParams.decode(e,e.uint32());break;case 930:t.gather=$root.CoreML.Specification.GatherLayerParams.decode(e,e.uint32());break;case 935:t.scatter=$root.CoreML.Specification.ScatterLayerParams.decode(e,e.uint32());break;case 940:t.gatherND=$root.CoreML.Specification.GatherNDLayerParams.decode(e,e.uint32());break;case 945:t.scatterND=$root.CoreML.Specification.ScatterNDLayerParams.decode(e,e.uint32());break;case 950:t.softmaxND=$root.CoreML.Specification.SoftmaxNDLayerParams.decode(e,e.uint32());break;case 952:t.gatherAlongAxis=$root.CoreML.Specification.GatherAlongAxisLayerParams.decode(e,e.uint32());break;case 954:t.scatterAlongAxis=$root.CoreML.Specification.ScatterAlongAxisLayerParams.decode(e,e.uint32());break;case 960:t.reverse=$root.CoreML.Specification.ReverseLayerParams.decode(e,e.uint32());break;case 965:t.reverseSeq=$root.CoreML.Specification.ReverseSeqLayerParams.decode(e,e.uint32());break;case 975:t.splitND=$root.CoreML.Specification.SplitNDLayerParams.decode(e,e.uint32());break;case 980:t.concatND=$root.CoreML.Specification.ConcatNDLayerParams.decode(e,e.uint32());break;case 985:t.transpose=$root.CoreML.Specification.TransposeLayerParams.decode(e,e.uint32());break;case 995:t.sliceStatic=$root.CoreML.Specification.SliceStaticLayerParams.decode(e,e.uint32());break;case 1e3:t.sliceDynamic=$root.CoreML.Specification.SliceDynamicLayerParams.decode(e,e.uint32());break;case 1005:t.slidingWindows=$root.CoreML.Specification.SlidingWindowsLayerParams.decode(e,e.uint32());break;case 1015:t.topK=$root.CoreML.Specification.TopKLayerParams.decode(e,e.uint32());break;case 1020:t.argMin=$root.CoreML.Specification.ArgMinLayerParams.decode(e,e.uint32());break;case 1025:t.argMax=$root.CoreML.Specification.ArgMaxLayerParams.decode(e,e.uint32());break;case 1040:t.embeddingND=$root.CoreML.Specification.EmbeddingNDLayerParams.decode(e,e.uint32());break;case 1045:t.batchedMatmul=$root.CoreML.Specification.BatchedMatMulLayerParams.decode(e,e.uint32());break;case 1065:t.getShape=$root.CoreML.Specification.GetShapeLayerParams.decode(e,e.uint32());break;case 1070:t.loadConstantND=$root.CoreML.Specification.LoadConstantNDLayerParams.decode(e,e.uint32());break;case 1080:t.fillLike=$root.CoreML.Specification.FillLikeLayerParams.decode(e,e.uint32());break;case 1085:t.fillStatic=$root.CoreML.Specification.FillStaticLayerParams.decode(e,e.uint32());break;case 1090:t.fillDynamic=$root.CoreML.Specification.FillDynamicLayerParams.decode(e,e.uint32());break;case 1100:t.broadcastToLike=$root.CoreML.Specification.BroadcastToLikeLayerParams.decode(e,e.uint32());break;case 1105:t.broadcastToStatic=$root.CoreML.Specification.BroadcastToStaticLayerParams.decode(e,e.uint32());break;case 1110:t.broadcastToDynamic=$root.CoreML.Specification.BroadcastToDynamicLayerParams.decode(e,e.uint32());break;case 1120:t.squeeze=$root.CoreML.Specification.SqueezeLayerParams.decode(e,e.uint32());break;case 1125:t.expandDims=$root.CoreML.Specification.ExpandDimsLayerParams.decode(e,e.uint32());break;case 1130:t.flattenTo2D=$root.CoreML.Specification.FlattenTo2DLayerParams.decode(e,e.uint32());break;case 1135:t.reshapeLike=$root.CoreML.Specification.ReshapeLikeLayerParams.decode(e,e.uint32());break;case 1140:t.reshapeStatic=$root.CoreML.Specification.ReshapeStaticLayerParams.decode(e,e.uint32());break;case 1145:t.reshapeDynamic=$root.CoreML.Specification.ReshapeDynamicLayerParams.decode(e,e.uint32());break;case 1150:t.rankPreservingReshape=$root.CoreML.Specification.RankPreservingReshapeLayerParams.decode(e,e.uint32());break;case 1155:t.constantPad=$root.CoreML.Specification.ConstantPaddingLayerParams.decode(e,e.uint32());break;case 1170:t.randomNormalLike=$root.CoreML.Specification.RandomNormalLikeLayerParams.decode(e,e.uint32());break;case 1175:t.randomNormalStatic=$root.CoreML.Specification.RandomNormalStaticLayerParams.decode(e,e.uint32());break;case 1180:t.randomNormalDynamic=$root.CoreML.Specification.RandomNormalDynamicLayerParams.decode(e,e.uint32());break;case 1190:t.randomUniformLike=$root.CoreML.Specification.RandomUniformLikeLayerParams.decode(e,e.uint32());break;case 1195:t.randomUniformStatic=$root.CoreML.Specification.RandomUniformStaticLayerParams.decode(e,e.uint32());break;case 1200:t.randomUniformDynamic=$root.CoreML.Specification.RandomUniformDynamicLayerParams.decode(e,e.uint32());break;case 1210:t.randomBernoulliLike=$root.CoreML.Specification.RandomBernoulliLikeLayerParams.decode(e,e.uint32());break;case 1215:t.randomBernoulliStatic=$root.CoreML.Specification.RandomBernoulliStaticLayerParams.decode(e,e.uint32());break;case 1220:t.randomBernoulliDynamic=$root.CoreML.Specification.RandomBernoulliDynamicLayerParams.decode(e,e.uint32());break;case 1230:t.categoricalDistribution=$root.CoreML.Specification.CategoricalDistributionLayerParams.decode(e,e.uint32());break;case 1250:t.reduceL1=$root.CoreML.Specification.ReduceL1LayerParams.decode(e,e.uint32());break;case 1255:t.reduceL2=$root.CoreML.Specification.ReduceL2LayerParams.decode(e,e.uint32());break;case 1260:t.reduceMax=$root.CoreML.Specification.ReduceMaxLayerParams.decode(e,e.uint32());break;case 1265:t.reduceMin=$root.CoreML.Specification.ReduceMinLayerParams.decode(e,e.uint32());break;case 1270:t.reduceSum=$root.CoreML.Specification.ReduceSumLayerParams.decode(e,e.uint32());break;case 1275:t.reduceProd=$root.CoreML.Specification.ReduceProdLayerParams.decode(e,e.uint32());break;case 1280:t.reduceMean=$root.CoreML.Specification.ReduceMeanLayerParams.decode(e,e.uint32());break;case 1285:t.reduceLogSum=$root.CoreML.Specification.ReduceLogSumLayerParams.decode(e,e.uint32());break;case 1290:t.reduceSumSquare=$root.CoreML.Specification.ReduceSumSquareLayerParams.decode(e,e.uint32());break;case 1295:t.reduceLogSumExp=$root.CoreML.Specification.ReduceLogSumExpLayerParams.decode(e,e.uint32());break;case 1313:t.whereNonZero=$root.CoreML.Specification.WhereNonZeroLayerParams.decode(e,e.uint32());break;case 1315:t.matrixBandPart=$root.CoreML.Specification.MatrixBandPartLayerParams.decode(e,e.uint32());break;case 1320:t.lowerTriangular=$root.CoreML.Specification.LowerTriangularLayerParams.decode(e,e.uint32());break;case 1325:t.upperTriangular=$root.CoreML.Specification.UpperTriangularLayerParams.decode(e,e.uint32());break;case 1330:t.whereBroadcastable=$root.CoreML.Specification.WhereBroadcastableLayerParams.decode(e,e.uint32());break;case 1350:t.layerNormalization=$root.CoreML.Specification.LayerNormalizationLayerParams.decode(e,e.uint32());break;case 1400:t.NonMaximumSuppression=$root.CoreML.Specification.NonMaximumSuppressionLayerParams.decode(e,e.uint32());break;case 1450:t.oneHot=$root.CoreML.Specification.OneHotLayerParams.decode(e,e.uint32());break;case 1455:t.cumSum=$root.CoreML.Specification.CumSumLayerParams.decode(e,e.uint32());break;case 1460:t.clampedReLU=$root.CoreML.Specification.ClampedReLULayerParams.decode(e,e.uint32());break;case 1461:t.argSort=$root.CoreML.Specification.ArgSortLayerParams.decode(e,e.uint32());break;case 1465:t.pooling3d=$root.CoreML.Specification.Pooling3DLayerParams.decode(e,e.uint32());break;case 1466:t.globalPooling3d=$root.CoreML.Specification.GlobalPooling3DLayerParams.decode(e,e.uint32());break;case 1470:t.sliceBySize=$root.CoreML.Specification.SliceBySizeLayerParams.decode(e,e.uint32());break;case 1471:t.convolution3d=$root.CoreML.Specification.Convolution3DLayerParams.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NeuralNetworkLayer.prototype.name="",$root.CoreML.Specification.NeuralNetworkLayer.prototype.isUpdatable=!1,$root.CoreML.Specification.BranchLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.BranchLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.ifBranch=$root.CoreML.Specification.NeuralNetwork.decode(e,e.uint32());break;case 2:t.elseBranch=$root.CoreML.Specification.NeuralNetwork.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BranchLayerParams.prototype.ifBranch=null,$root.CoreML.Specification.BranchLayerParams.prototype.elseBranch=null,$root.CoreML.Specification.LoopLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LoopLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.maxLoopIterations=e.uint64();break;case 2:t.conditionVar=e.string();break;case 3:t.conditionNetwork=$root.CoreML.Specification.NeuralNetwork.decode(e,e.uint32());break;case 4:t.bodyNetwork=$root.CoreML.Specification.NeuralNetwork.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.LoopLayerParams.prototype.maxLoopIterations=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.LoopLayerParams.prototype.conditionVar="",$root.CoreML.Specification.LoopLayerParams.prototype.conditionNetwork=null,$root.CoreML.Specification.LoopLayerParams.prototype.bodyNetwork=null,$root.CoreML.Specification.LoopBreakLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LoopBreakLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.LoopContinueLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LoopContinueLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.CopyLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.CopyLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.GreaterThanLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.GreaterThanLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 2:t.alpha=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.GreaterThanLayerParams.prototype.alpha=0,$root.CoreML.Specification.GreaterEqualLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.GreaterEqualLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 2:t.alpha=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.GreaterEqualLayerParams.prototype.alpha=0,$root.CoreML.Specification.LessThanLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LessThanLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 2:t.alpha=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.LessThanLayerParams.prototype.alpha=0,$root.CoreML.Specification.LessEqualLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LessEqualLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 2:t.alpha=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.LessEqualLayerParams.prototype.alpha=0,$root.CoreML.Specification.EqualLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.EqualLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.EqualLayerParams.prototype.alpha=0,$root.CoreML.Specification.NotEqualLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.NotEqualLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NotEqualLayerParams.prototype.alpha=0,$root.CoreML.Specification.LogicalAndLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LogicalAndLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.LogicalOrLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LogicalOrLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.LogicalXorLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LogicalXorLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.LogicalNotLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LogicalNotLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.BorderAmounts=class{constructor(){this.borderAmounts=[]}static decode(e,o){const t=new $root.CoreML.Specification.BorderAmounts,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 10:t.borderAmounts.push($root.CoreML.Specification.BorderAmounts.EdgeSizes.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BorderAmounts.EdgeSizes=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.BorderAmounts.EdgeSizes,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.startEdgeSize=e.uint64();break;case 2:t.endEdgeSize=e.uint64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BorderAmounts.EdgeSizes.prototype.startEdgeSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.BorderAmounts.EdgeSizes.prototype.endEdgeSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ValidPadding=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ValidPadding,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.paddingAmounts=$root.CoreML.Specification.BorderAmounts.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ValidPadding.prototype.paddingAmounts=null,$root.CoreML.Specification.SamePadding=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SamePadding,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.asymmetryMode=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SamePadding.prototype.asymmetryMode=0,$root.CoreML.Specification.SamePadding.SamePaddingMode={BOTTOM_RIGHT_HEAVY:0,TOP_LEFT_HEAVY:1},$root.CoreML.Specification.SamplingMode=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SamplingMode,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.samplingMethod=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SamplingMode.prototype.samplingMethod=0,$root.CoreML.Specification.SamplingMode.Method={STRICT_ALIGN_ENDPOINTS_MODE:0,ALIGN_ENDPOINTS_MODE:1,UPSAMPLE_MODE:2,ROI_ALIGN_MODE:3},$root.CoreML.Specification.BoxCoordinatesMode=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.BoxCoordinatesMode,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.boxMode=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BoxCoordinatesMode.prototype.boxMode=0,$root.CoreML.Specification.BoxCoordinatesMode.Coordinates={CORNERS_HEIGHT_FIRST:0,CORNERS_WIDTH_FIRST:1,CENTER_SIZE_HEIGHT_FIRST:2,CENTER_SIZE_WIDTH_FIRST:3},$root.CoreML.Specification.WeightParams=class{constructor(){this.floatValue=[]}static decode(e,o){const t=new $root.CoreML.Specification.WeightParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.floatValue=e.floats(t.floatValue,o);break;case 2:t.float16Value=e.bytes();break;case 30:t.rawValue=e.bytes();break;case 31:t.int8RawValue=e.bytes();break;case 40:t.quantization=$root.CoreML.Specification.QuantizationParams.decode(e,e.uint32());break;case 50:t.isUpdatable=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.WeightParams.prototype.float16Value=new Uint8Array([]),$root.CoreML.Specification.WeightParams.prototype.rawValue=new Uint8Array([]),$root.CoreML.Specification.WeightParams.prototype.int8RawValue=new Uint8Array([]),$root.CoreML.Specification.WeightParams.prototype.quantization=null,$root.CoreML.Specification.WeightParams.prototype.isUpdatable=!1,$root.CoreML.Specification.QuantizationParams=class{constructor(){}get QuantizationType(){return $root.CoreML.Specification.QuantizationParams.QuantizationTypeSet=$root.CoreML.Specification.QuantizationParams.QuantizationTypeSet||new Set(["linearQuantization","lookupTableQuantization"]),Object.keys(this).find((e=>$root.CoreML.Specification.QuantizationParams.QuantizationTypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.QuantizationParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.numberOfBits=e.uint64();break;case 101:t.linearQuantization=$root.CoreML.Specification.LinearQuantizationParams.decode(e,e.uint32());break;case 102:t.lookupTableQuantization=$root.CoreML.Specification.LookUpTableQuantizationParams.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.QuantizationParams.prototype.numberOfBits=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.LinearQuantizationParams=class{constructor(){this.scale=[],this.bias=[]}static decode(e,o){const t=new $root.CoreML.Specification.LinearQuantizationParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.scale=e.floats(t.scale,o);break;case 2:t.bias=e.floats(t.bias,o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.LookUpTableQuantizationParams=class{constructor(){this.floatValue=[]}static decode(e,o){const t=new $root.CoreML.Specification.LookUpTableQuantizationParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.floatValue=e.floats(t.floatValue,o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ConvolutionLayerParams=class{constructor(){this.kernelSize=[],this.stride=[],this.dilationFactor=[],this.outputShape=[]}get ConvolutionPaddingType(){return $root.CoreML.Specification.ConvolutionLayerParams.ConvolutionPaddingTypeSet=$root.CoreML.Specification.ConvolutionLayerParams.ConvolutionPaddingTypeSet||new Set(["valid","same"]),Object.keys(this).find((e=>$root.CoreML.Specification.ConvolutionLayerParams.ConvolutionPaddingTypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.ConvolutionLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.outputChannels=e.uint64();break;case 2:t.kernelChannels=e.uint64();break;case 10:t.nGroups=e.uint64();break;case 20:t.kernelSize=e.array(t.kernelSize,(()=>e.uint64()),o);break;case 30:t.stride=e.array(t.stride,(()=>e.uint64()),o);break;case 40:t.dilationFactor=e.array(t.dilationFactor,(()=>e.uint64()),o);break;case 50:t.valid=$root.CoreML.Specification.ValidPadding.decode(e,e.uint32());break;case 51:t.same=$root.CoreML.Specification.SamePadding.decode(e,e.uint32());break;case 60:t.isDeconvolution=e.bool();break;case 70:t.hasBias=e.bool();break;case 90:t.weights=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 91:t.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 100:t.outputShape=e.array(t.outputShape,(()=>e.uint64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ConvolutionLayerParams.prototype.outputChannels=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ConvolutionLayerParams.prototype.kernelChannels=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ConvolutionLayerParams.prototype.nGroups=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ConvolutionLayerParams.prototype.isDeconvolution=!1,$root.CoreML.Specification.ConvolutionLayerParams.prototype.hasBias=!1,$root.CoreML.Specification.ConvolutionLayerParams.prototype.weights=null,$root.CoreML.Specification.ConvolutionLayerParams.prototype.bias=null,$root.CoreML.Specification.Convolution3DLayerParams=class{constructor(){this.outputShape=[]}static decode(e,o){const t=new $root.CoreML.Specification.Convolution3DLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.outputChannels=e.int32();break;case 2:t.inputChannels=e.int32();break;case 10:t.nGroups=e.int32();break;case 20:t.kernelDepth=e.int32();break;case 21:t.kernelHeight=e.int32();break;case 22:t.kernelWidth=e.int32();break;case 31:t.strideDepth=e.int32();break;case 32:t.strideHeight=e.int32();break;case 33:t.strideWidth=e.int32();break;case 40:t.dilationDepth=e.int32();break;case 41:t.dilationHeight=e.int32();break;case 42:t.dilationWidth=e.int32();break;case 50:t.hasBias=e.bool();break;case 60:t.weights=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 61:t.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 70:t.paddingType=e.int32();break;case 80:t.customPaddingFront=e.int32();break;case 81:t.customPaddingBack=e.int32();break;case 82:t.customPaddingTop=e.int32();break;case 83:t.customPaddingBottom=e.int32();break;case 84:t.customPaddingLeft=e.int32();break;case 85:t.customPaddingRight=e.int32();break;case 86:t.isDeconvolution=e.bool();break;case 87:t.outputShape=e.array(t.outputShape,(()=>e.uint64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Convolution3DLayerParams.prototype.outputChannels=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.inputChannels=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.nGroups=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.kernelDepth=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.kernelHeight=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.kernelWidth=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.strideDepth=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.strideHeight=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.strideWidth=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.dilationDepth=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.dilationHeight=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.dilationWidth=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.hasBias=!1,$root.CoreML.Specification.Convolution3DLayerParams.prototype.weights=null,$root.CoreML.Specification.Convolution3DLayerParams.prototype.bias=null,$root.CoreML.Specification.Convolution3DLayerParams.prototype.paddingType=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.customPaddingFront=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.customPaddingBack=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.customPaddingTop=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.customPaddingBottom=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.customPaddingLeft=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.customPaddingRight=0,$root.CoreML.Specification.Convolution3DLayerParams.prototype.isDeconvolution=!1,$root.CoreML.Specification.Convolution3DLayerParams.PaddingType={CUSTOM:0,VALID:1,SAME:2},$root.CoreML.Specification.InnerProductLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.InnerProductLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.inputChannels=e.uint64();break;case 2:t.outputChannels=e.uint64();break;case 10:t.hasBias=e.bool();break;case 20:t.weights=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 21:t.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 22:t.int8DynamicQuantize=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.InnerProductLayerParams.prototype.inputChannels=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.InnerProductLayerParams.prototype.outputChannels=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.InnerProductLayerParams.prototype.hasBias=!1,$root.CoreML.Specification.InnerProductLayerParams.prototype.weights=null,$root.CoreML.Specification.InnerProductLayerParams.prototype.bias=null,$root.CoreML.Specification.InnerProductLayerParams.prototype.int8DynamicQuantize=!1,$root.CoreML.Specification.EmbeddingLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.EmbeddingLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.inputDim=e.uint64();break;case 2:t.outputChannels=e.uint64();break;case 10:t.hasBias=e.bool();break;case 20:t.weights=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 21:t.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.EmbeddingLayerParams.prototype.inputDim=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.EmbeddingLayerParams.prototype.outputChannels=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.EmbeddingLayerParams.prototype.hasBias=!1,$root.CoreML.Specification.EmbeddingLayerParams.prototype.weights=null,$root.CoreML.Specification.EmbeddingLayerParams.prototype.bias=null,$root.CoreML.Specification.EmbeddingNDLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.EmbeddingNDLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.vocabSize=e.uint64();break;case 2:t.embeddingSize=e.uint64();break;case 3:t.hasBias=e.bool();break;case 20:t.weights=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 21:t.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.EmbeddingNDLayerParams.prototype.vocabSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.EmbeddingNDLayerParams.prototype.embeddingSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.EmbeddingNDLayerParams.prototype.hasBias=!1,$root.CoreML.Specification.EmbeddingNDLayerParams.prototype.weights=null,$root.CoreML.Specification.EmbeddingNDLayerParams.prototype.bias=null,$root.CoreML.Specification.BatchnormLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.BatchnormLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.channels=e.uint64();break;case 5:t.computeMeanVar=e.bool();break;case 6:t.instanceNormalization=e.bool();break;case 10:t.epsilon=e.float();break;case 15:t.gamma=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 16:t.beta=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 17:t.mean=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 18:t.variance=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BatchnormLayerParams.prototype.channels=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.BatchnormLayerParams.prototype.computeMeanVar=!1,$root.CoreML.Specification.BatchnormLayerParams.prototype.instanceNormalization=!1,$root.CoreML.Specification.BatchnormLayerParams.prototype.epsilon=0,$root.CoreML.Specification.BatchnormLayerParams.prototype.gamma=null,$root.CoreML.Specification.BatchnormLayerParams.prototype.beta=null,$root.CoreML.Specification.BatchnormLayerParams.prototype.mean=null,$root.CoreML.Specification.BatchnormLayerParams.prototype.variance=null,$root.CoreML.Specification.PoolingLayerParams=class{constructor(){this.kernelSize=[],this.stride=[]}get PoolingPaddingType(){return $root.CoreML.Specification.PoolingLayerParams.PoolingPaddingTypeSet=$root.CoreML.Specification.PoolingLayerParams.PoolingPaddingTypeSet||new Set(["valid","same","includeLastPixel"]),Object.keys(this).find((e=>$root.CoreML.Specification.PoolingLayerParams.PoolingPaddingTypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.PoolingLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.type=e.int32();break;case 10:t.kernelSize=e.array(t.kernelSize,(()=>e.uint64()),o);break;case 20:t.stride=e.array(t.stride,(()=>e.uint64()),o);break;case 30:t.valid=$root.CoreML.Specification.ValidPadding.decode(e,e.uint32());break;case 31:t.same=$root.CoreML.Specification.SamePadding.decode(e,e.uint32());break;case 32:t.includeLastPixel=$root.CoreML.Specification.PoolingLayerParams.ValidCompletePadding.decode(e,e.uint32());break;case 50:t.avgPoolExcludePadding=e.bool();break;case 60:t.globalPooling=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.PoolingLayerParams.prototype.type=0,$root.CoreML.Specification.PoolingLayerParams.prototype.avgPoolExcludePadding=!1,$root.CoreML.Specification.PoolingLayerParams.prototype.globalPooling=!1,$root.CoreML.Specification.PoolingLayerParams.PoolingType={MAX:0,AVERAGE:1,L2:2},$root.CoreML.Specification.PoolingLayerParams.ValidCompletePadding=class{constructor(){this.paddingAmounts=[]}static decode(e,o){const t=new $root.CoreML.Specification.PoolingLayerParams.ValidCompletePadding,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 10:t.paddingAmounts=e.array(t.paddingAmounts,(()=>e.uint64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Pooling3DLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.Pooling3DLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.type=e.int32();break;case 2:t.kernelDepth=e.int32();break;case 3:t.kernelHeight=e.int32();break;case 4:t.kernelWidth=e.int32();break;case 5:t.strideDepth=e.int32();break;case 6:t.strideHeight=e.int32();break;case 7:t.strideWidth=e.int32();break;case 15:t.paddingType=e.int32();break;case 8:t.customPaddingFront=e.int32();break;case 9:t.customPaddingBack=e.int32();break;case 10:t.customPaddingTop=e.int32();break;case 11:t.customPaddingBottom=e.int32();break;case 12:t.customPaddingLeft=e.int32();break;case 13:t.customPaddingRight=e.int32();break;case 14:t.countExcludePadding=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Pooling3DLayerParams.prototype.type=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.kernelDepth=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.kernelHeight=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.kernelWidth=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.strideDepth=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.strideHeight=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.strideWidth=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.paddingType=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.customPaddingFront=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.customPaddingBack=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.customPaddingTop=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.customPaddingBottom=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.customPaddingLeft=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.customPaddingRight=0,$root.CoreML.Specification.Pooling3DLayerParams.prototype.countExcludePadding=!1,$root.CoreML.Specification.Pooling3DLayerParams.PoolingType3D={MAX:0,AVERAGE:1},$root.CoreML.Specification.Pooling3DLayerParams.Pooling3DPaddingType={CUSTOM:0,VALID:1,SAME:2},$root.CoreML.Specification.GlobalPooling3DLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.GlobalPooling3DLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.type=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.GlobalPooling3DLayerParams.prototype.type=0,$root.CoreML.Specification.GlobalPooling3DLayerParams.GlobalPoolingType3D={MAX:0,AVERAGE:1},$root.CoreML.Specification.PaddingLayerParams=class{constructor(){}get PaddingType(){return $root.CoreML.Specification.PaddingLayerParams.PaddingTypeSet=$root.CoreML.Specification.PaddingLayerParams.PaddingTypeSet||new Set(["constant","reflection","replication"]),Object.keys(this).find((e=>$root.CoreML.Specification.PaddingLayerParams.PaddingTypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.PaddingLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.constant=$root.CoreML.Specification.PaddingLayerParams.PaddingConstant.decode(e,e.uint32());break;case 2:t.reflection=$root.CoreML.Specification.PaddingLayerParams.PaddingReflection.decode(e,e.uint32());break;case 3:t.replication=$root.CoreML.Specification.PaddingLayerParams.PaddingReplication.decode(e,e.uint32());break;case 10:t.paddingAmounts=$root.CoreML.Specification.BorderAmounts.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.PaddingLayerParams.prototype.paddingAmounts=null,$root.CoreML.Specification.PaddingLayerParams.PaddingConstant=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.PaddingLayerParams.PaddingConstant,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.value=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.PaddingLayerParams.PaddingConstant.prototype.value=0,$root.CoreML.Specification.PaddingLayerParams.PaddingReflection=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.PaddingLayerParams.PaddingReflection,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.PaddingLayerParams.PaddingReplication=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.PaddingLayerParams.PaddingReplication,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.ConcatLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ConcatLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 100:t.sequenceConcat=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ConcatLayerParams.prototype.sequenceConcat=!1,$root.CoreML.Specification.LRNLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LRNLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=e.float();break;case 2:t.beta=e.float();break;case 3:t.localSize=e.uint64();break;case 4:t.k=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.LRNLayerParams.prototype.alpha=0,$root.CoreML.Specification.LRNLayerParams.prototype.beta=0,$root.CoreML.Specification.LRNLayerParams.prototype.localSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.LRNLayerParams.prototype.k=0,$root.CoreML.Specification.SoftmaxLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SoftmaxLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.SplitLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SplitLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.nOutputs=e.uint64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SplitLayerParams.prototype.nOutputs=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.AddLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.AddLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.AddLayerParams.prototype.alpha=0,$root.CoreML.Specification.MultiplyLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.MultiplyLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.MultiplyLayerParams.prototype.alpha=0,$root.CoreML.Specification.UnaryFunctionLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.UnaryFunctionLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.type=e.int32();break;case 2:t.alpha=e.float();break;case 3:t.epsilon=e.float();break;case 4:t.shift=e.float();break;case 5:t.scale=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.UnaryFunctionLayerParams.prototype.type=0,$root.CoreML.Specification.UnaryFunctionLayerParams.prototype.alpha=0,$root.CoreML.Specification.UnaryFunctionLayerParams.prototype.epsilon=0,$root.CoreML.Specification.UnaryFunctionLayerParams.prototype.shift=0,$root.CoreML.Specification.UnaryFunctionLayerParams.prototype.scale=0,$root.CoreML.Specification.UnaryFunctionLayerParams.Operation={SQRT:0,RSQRT:1,INVERSE:2,POWER:3,EXP:4,LOG:5,ABS:6,THRESHOLD:7},$root.CoreML.Specification.UpsampleLayerParams=class{constructor(){this.scalingFactor=[],this.fractionalScalingFactor=[]}static decode(e,o){const t=new $root.CoreML.Specification.UpsampleLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.scalingFactor=e.array(t.scalingFactor,(()=>e.uint64()),o);break;case 7:t.fractionalScalingFactor=e.floats(t.fractionalScalingFactor,o);break;case 5:t.mode=e.int32();break;case 6:t.linearUpsampleMode=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.UpsampleLayerParams.prototype.mode=0,$root.CoreML.Specification.UpsampleLayerParams.prototype.linearUpsampleMode=0,$root.CoreML.Specification.UpsampleLayerParams.InterpolationMode={NN:0,BILINEAR:1},$root.CoreML.Specification.UpsampleLayerParams.LinearUpsampleMode={DEFAULT:0,ALIGN_CORNERS_TRUE:1,ALIGN_CORNERS_FALSE:2},$root.CoreML.Specification.ResizeBilinearLayerParams=class{constructor(){this.targetSize=[]}static decode(e,o){const t=new $root.CoreML.Specification.ResizeBilinearLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.targetSize=e.array(t.targetSize,(()=>e.uint64()),o);break;case 2:t.mode=$root.CoreML.Specification.SamplingMode.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ResizeBilinearLayerParams.prototype.mode=null,$root.CoreML.Specification.CropResizeLayerParams=class{constructor(){this.targetSize=[]}static decode(e,o){const t=new $root.CoreML.Specification.CropResizeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.targetSize=e.array(t.targetSize,(()=>e.uint64()),o);break;case 2:t.normalizedCoordinates=e.bool();break;case 3:t.mode=$root.CoreML.Specification.SamplingMode.decode(e,e.uint32());break;case 4:t.boxIndicesMode=$root.CoreML.Specification.BoxCoordinatesMode.decode(e,e.uint32());break;case 5:t.spatialScale=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CropResizeLayerParams.prototype.normalizedCoordinates=!1,$root.CoreML.Specification.CropResizeLayerParams.prototype.mode=null,$root.CoreML.Specification.CropResizeLayerParams.prototype.boxIndicesMode=null,$root.CoreML.Specification.CropResizeLayerParams.prototype.spatialScale=0,$root.CoreML.Specification.BiasLayerParams=class{constructor(){this.shape=[]}static decode(e,o){const t=new $root.CoreML.Specification.BiasLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.shape=e.array(t.shape,(()=>e.uint64()),o);break;case 2:t.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BiasLayerParams.prototype.bias=null,$root.CoreML.Specification.ScaleLayerParams=class{constructor(){this.shapeScale=[],this.shapeBias=[]}static decode(e,o){const t=new $root.CoreML.Specification.ScaleLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.shapeScale=e.array(t.shapeScale,(()=>e.uint64()),o);break;case 2:t.scale=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 3:t.hasBias=e.bool();break;case 4:t.shapeBias=e.array(t.shapeBias,(()=>e.uint64()),o);break;case 5:t.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ScaleLayerParams.prototype.scale=null,$root.CoreML.Specification.ScaleLayerParams.prototype.hasBias=!1,$root.CoreML.Specification.ScaleLayerParams.prototype.bias=null,$root.CoreML.Specification.LoadConstantLayerParams=class{constructor(){this.shape=[]}static decode(e,o){const t=new $root.CoreML.Specification.LoadConstantLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.shape=e.array(t.shape,(()=>e.uint64()),o);break;case 2:t.data=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.LoadConstantLayerParams.prototype.data=null,$root.CoreML.Specification.L2NormalizeLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.L2NormalizeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.epsilon=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.L2NormalizeLayerParams.prototype.epsilon=0,$root.CoreML.Specification.FlattenLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.FlattenLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.mode=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.FlattenLayerParams.prototype.mode=0,$root.CoreML.Specification.FlattenLayerParams.FlattenOrder={CHANNEL_FIRST:0,CHANNEL_LAST:1},$root.CoreML.Specification.ReshapeLayerParams=class{constructor(){this.targetShape=[]}static decode(e,o){const t=new $root.CoreML.Specification.ReshapeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.targetShape=e.array(t.targetShape,(()=>e.int64()),o);break;case 2:t.mode=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReshapeLayerParams.prototype.mode=0,$root.CoreML.Specification.ReshapeLayerParams.ReshapeOrder={CHANNEL_FIRST:0,CHANNEL_LAST:1},$root.CoreML.Specification.PermuteLayerParams=class{constructor(){this.axis=[]}static decode(e,o){const t=new $root.CoreML.Specification.PermuteLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.array(t.axis,(()=>e.uint64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReorganizeDataLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ReorganizeDataLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.mode=e.int32();break;case 2:t.blockSize=e.uint64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReorganizeDataLayerParams.prototype.mode=0,$root.CoreML.Specification.ReorganizeDataLayerParams.prototype.blockSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ReorganizeDataLayerParams.ReorganizationType={SPACE_TO_DEPTH:0,DEPTH_TO_SPACE:1,PIXEL_SHUFFLE:2},$root.CoreML.Specification.SliceLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SliceLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.startIndex=e.int64();break;case 2:t.endIndex=e.int64();break;case 3:t.stride=e.uint64();break;case 4:t.axis=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SliceLayerParams.prototype.startIndex=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.SliceLayerParams.prototype.endIndex=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.SliceLayerParams.prototype.stride=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.SliceLayerParams.prototype.axis=0,$root.CoreML.Specification.SliceLayerParams.SliceAxis={CHANNEL_AXIS:0,HEIGHT_AXIS:1,WIDTH_AXIS:2},$root.CoreML.Specification.ReduceLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ReduceLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.mode=e.int32();break;case 2:t.epsilon=e.float();break;case 3:t.axis=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReduceLayerParams.prototype.mode=0,$root.CoreML.Specification.ReduceLayerParams.prototype.epsilon=0,$root.CoreML.Specification.ReduceLayerParams.prototype.axis=0,$root.CoreML.Specification.ReduceLayerParams.ReduceOperation={SUM:0,AVG:1,PROD:2,LOGSUM:3,SUMSQUARE:4,L1:5,L2:6,MAX:7,MIN:8,ARGMAX:9},$root.CoreML.Specification.ReduceLayerParams.ReduceAxis={CHW:0,HW:1,C:2,H:3,W:4},$root.CoreML.Specification.CropLayerParams=class{constructor(){this.offset=[]}static decode(e,o){const t=new $root.CoreML.Specification.CropLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.cropAmounts=$root.CoreML.Specification.BorderAmounts.decode(e,e.uint32());break;case 5:t.offset=e.array(t.offset,(()=>e.uint64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CropLayerParams.prototype.cropAmounts=null,$root.CoreML.Specification.AverageLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.AverageLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.MaxLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.MaxLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.MinLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.MinLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.DotProductLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.DotProductLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.cosineSimilarity=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.DotProductLayerParams.prototype.cosineSimilarity=!1,$root.CoreML.Specification.MeanVarianceNormalizeLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.MeanVarianceNormalizeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.acrossChannels=e.bool();break;case 2:t.normalizeVariance=e.bool();break;case 3:t.epsilon=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.MeanVarianceNormalizeLayerParams.prototype.acrossChannels=!1,$root.CoreML.Specification.MeanVarianceNormalizeLayerParams.prototype.normalizeVariance=!1,$root.CoreML.Specification.MeanVarianceNormalizeLayerParams.prototype.epsilon=0,$root.CoreML.Specification.SequenceRepeatLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SequenceRepeatLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.nRepetitions=e.uint64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SequenceRepeatLayerParams.prototype.nRepetitions=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.SimpleRecurrentLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SimpleRecurrentLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.inputVectorSize=e.uint64();break;case 2:t.outputVectorSize=e.uint64();break;case 10:t.activation=$root.CoreML.Specification.ActivationParams.decode(e,e.uint32());break;case 15:t.sequenceOutput=e.bool();break;case 20:t.hasBiasVector=e.bool();break;case 30:t.weightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 31:t.recursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 32:t.biasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 100:t.reverseInput=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.inputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.outputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.activation=null,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.sequenceOutput=!1,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.hasBiasVector=!1,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.weightMatrix=null,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.recursionMatrix=null,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.biasVector=null,$root.CoreML.Specification.SimpleRecurrentLayerParams.prototype.reverseInput=!1,$root.CoreML.Specification.GRULayerParams=class{constructor(){this.activations=[]}static decode(e,o){const t=new $root.CoreML.Specification.GRULayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.inputVectorSize=e.uint64();break;case 2:t.outputVectorSize=e.uint64();break;case 10:t.activations.push($root.CoreML.Specification.ActivationParams.decode(e,e.uint32()));break;case 15:t.sequenceOutput=e.bool();break;case 20:t.hasBiasVectors=e.bool();break;case 30:t.updateGateWeightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 31:t.resetGateWeightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 32:t.outputGateWeightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 50:t.updateGateRecursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 51:t.resetGateRecursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 52:t.outputGateRecursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 70:t.updateGateBiasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 71:t.resetGateBiasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 72:t.outputGateBiasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 100:t.reverseInput=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.GRULayerParams.prototype.inputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.GRULayerParams.prototype.outputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.GRULayerParams.prototype.sequenceOutput=!1,$root.CoreML.Specification.GRULayerParams.prototype.hasBiasVectors=!1,$root.CoreML.Specification.GRULayerParams.prototype.updateGateWeightMatrix=null,$root.CoreML.Specification.GRULayerParams.prototype.resetGateWeightMatrix=null,$root.CoreML.Specification.GRULayerParams.prototype.outputGateWeightMatrix=null,$root.CoreML.Specification.GRULayerParams.prototype.updateGateRecursionMatrix=null,$root.CoreML.Specification.GRULayerParams.prototype.resetGateRecursionMatrix=null,$root.CoreML.Specification.GRULayerParams.prototype.outputGateRecursionMatrix=null,$root.CoreML.Specification.GRULayerParams.prototype.updateGateBiasVector=null,$root.CoreML.Specification.GRULayerParams.prototype.resetGateBiasVector=null,$root.CoreML.Specification.GRULayerParams.prototype.outputGateBiasVector=null,$root.CoreML.Specification.GRULayerParams.prototype.reverseInput=!1,$root.CoreML.Specification.LSTMParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LSTMParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 10:t.sequenceOutput=e.bool();break;case 20:t.hasBiasVectors=e.bool();break;case 30:t.forgetBias=e.bool();break;case 40:t.hasPeepholeVectors=e.bool();break;case 50:t.coupledInputAndForgetGate=e.bool();break;case 60:t.cellClipThreshold=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.LSTMParams.prototype.sequenceOutput=!1,$root.CoreML.Specification.LSTMParams.prototype.hasBiasVectors=!1,$root.CoreML.Specification.LSTMParams.prototype.forgetBias=!1,$root.CoreML.Specification.LSTMParams.prototype.hasPeepholeVectors=!1,$root.CoreML.Specification.LSTMParams.prototype.coupledInputAndForgetGate=!1,$root.CoreML.Specification.LSTMParams.prototype.cellClipThreshold=0,$root.CoreML.Specification.LSTMWeightParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LSTMWeightParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.inputGateWeightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 2:t.forgetGateWeightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 3:t.blockInputWeightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 4:t.outputGateWeightMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 20:t.inputGateRecursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 21:t.forgetGateRecursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 22:t.blockInputRecursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 23:t.outputGateRecursionMatrix=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 40:t.inputGateBiasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 41:t.forgetGateBiasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 42:t.blockInputBiasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 43:t.outputGateBiasVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 60:t.inputGatePeepholeVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 61:t.forgetGatePeepholeVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 62:t.outputGatePeepholeVector=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.LSTMWeightParams.prototype.inputGateWeightMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.forgetGateWeightMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.blockInputWeightMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.outputGateWeightMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.inputGateRecursionMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.forgetGateRecursionMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.blockInputRecursionMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.outputGateRecursionMatrix=null,$root.CoreML.Specification.LSTMWeightParams.prototype.inputGateBiasVector=null,$root.CoreML.Specification.LSTMWeightParams.prototype.forgetGateBiasVector=null,$root.CoreML.Specification.LSTMWeightParams.prototype.blockInputBiasVector=null,$root.CoreML.Specification.LSTMWeightParams.prototype.outputGateBiasVector=null,$root.CoreML.Specification.LSTMWeightParams.prototype.inputGatePeepholeVector=null,$root.CoreML.Specification.LSTMWeightParams.prototype.forgetGatePeepholeVector=null,$root.CoreML.Specification.LSTMWeightParams.prototype.outputGatePeepholeVector=null,$root.CoreML.Specification.UniDirectionalLSTMLayerParams=class{constructor(){this.activations=[]}static decode(e,o){const t=new $root.CoreML.Specification.UniDirectionalLSTMLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.inputVectorSize=e.uint64();break;case 2:t.outputVectorSize=e.uint64();break;case 10:t.activations.push($root.CoreML.Specification.ActivationParams.decode(e,e.uint32()));break;case 15:t.params=$root.CoreML.Specification.LSTMParams.decode(e,e.uint32());break;case 20:t.weightParams=$root.CoreML.Specification.LSTMWeightParams.decode(e,e.uint32());break;case 100:t.reverseInput=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.UniDirectionalLSTMLayerParams.prototype.inputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.UniDirectionalLSTMLayerParams.prototype.outputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.UniDirectionalLSTMLayerParams.prototype.params=null,$root.CoreML.Specification.UniDirectionalLSTMLayerParams.prototype.weightParams=null,$root.CoreML.Specification.UniDirectionalLSTMLayerParams.prototype.reverseInput=!1,$root.CoreML.Specification.BiDirectionalLSTMLayerParams=class{constructor(){this.activationsForwardLSTM=[],this.activationsBackwardLSTM=[],this.weightParams=[]}static decode(e,o){const t=new $root.CoreML.Specification.BiDirectionalLSTMLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.inputVectorSize=e.uint64();break;case 2:t.outputVectorSize=e.uint64();break;case 10:t.activationsForwardLSTM.push($root.CoreML.Specification.ActivationParams.decode(e,e.uint32()));break;case 11:t.activationsBackwardLSTM.push($root.CoreML.Specification.ActivationParams.decode(e,e.uint32()));break;case 15:t.params=$root.CoreML.Specification.LSTMParams.decode(e,e.uint32());break;case 20:t.weightParams.push($root.CoreML.Specification.LSTMWeightParams.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BiDirectionalLSTMLayerParams.prototype.inputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.BiDirectionalLSTMLayerParams.prototype.outputVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.BiDirectionalLSTMLayerParams.prototype.params=null,$root.CoreML.Specification.CustomLayerParams=class{constructor(){this.weights=[],this.parameters={}}static decode(e,o){const t=new $root.CoreML.Specification.CustomLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 10:t.className=e.string();break;case 20:t.weights.push($root.CoreML.Specification.WeightParams.decode(e,e.uint32()));break;case 30:e.pair(t.parameters,(()=>e.string()),(()=>$root.CoreML.Specification.CustomLayerParams.CustomLayerParamValue.decode(e,e.uint32())));break;case 40:t.description=e.string();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CustomLayerParams.prototype.className="",$root.CoreML.Specification.CustomLayerParams.prototype.description="",$root.CoreML.Specification.CustomLayerParams.CustomLayerParamValue=class{constructor(){}get value(){return $root.CoreML.Specification.CustomLayerParams.CustomLayerParamValue.valueSet=$root.CoreML.Specification.CustomLayerParams.CustomLayerParamValue.valueSet||new Set(["doubleValue","stringValue","intValue","longValue","boolValue"]),Object.keys(this).find((e=>$root.CoreML.Specification.CustomLayerParams.CustomLayerParamValue.valueSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.CustomLayerParams.CustomLayerParamValue,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 10:t.doubleValue=e.double();break;case 20:t.stringValue=e.string();break;case 30:t.intValue=e.int32();break;case 40:t.longValue=e.int64();break;case 50:t.boolValue=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.TransposeLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const t=new $root.CoreML.Specification.TransposeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axes=e.array(t.axes,(()=>e.uint64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BatchedMatMulLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.BatchedMatMulLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.transposeA=e.bool();break;case 2:t.transposeB=e.bool();break;case 5:t.weightMatrixFirstDimension=e.uint64();break;case 6:t.weightMatrixSecondDimension=e.uint64();break;case 7:t.hasBias=e.bool();break;case 8:t.weights=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 9:t.bias=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 10:t.int8DynamicQuantize=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.transposeA=!1,$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.transposeB=!1,$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.weightMatrixFirstDimension=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.weightMatrixSecondDimension=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.hasBias=!1,$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.weights=null,$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.bias=null,$root.CoreML.Specification.BatchedMatMulLayerParams.prototype.int8DynamicQuantize=!1,$root.CoreML.Specification.ConcatNDLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ConcatNDLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ConcatNDLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.SoftmaxNDLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SoftmaxNDLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SoftmaxNDLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ReverseLayerParams=class{constructor(){this.reverseDim=[]}static decode(e,o){const t=new $root.CoreML.Specification.ReverseLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.reverseDim=e.array(t.reverseDim,(()=>e.bool()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReverseSeqLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ReverseSeqLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.batchAxis=e.int64();break;case 2:t.sequenceAxis=e.int64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReverseSeqLayerParams.prototype.batchAxis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ReverseSeqLayerParams.prototype.sequenceAxis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.LoadConstantNDLayerParams=class{constructor(){this.shape=[]}static decode(e,o){const t=new $root.CoreML.Specification.LoadConstantNDLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.shape=e.array(t.shape,(()=>e.uint64()),o);break;case 2:t.data=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.LoadConstantNDLayerParams.prototype.data=null,$root.CoreML.Specification.FillLikeLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.FillLikeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.value=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.FillLikeLayerParams.prototype.value=0,$root.CoreML.Specification.FillStaticLayerParams=class{constructor(){this.targetShape=[]}static decode(e,o){const t=new $root.CoreML.Specification.FillStaticLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.value=e.float();break;case 2:t.targetShape=e.array(t.targetShape,(()=>e.uint64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.FillStaticLayerParams.prototype.value=0,$root.CoreML.Specification.FillDynamicLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.FillDynamicLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.value=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.FillDynamicLayerParams.prototype.value=0,$root.CoreML.Specification.WhereBroadcastableLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.WhereBroadcastableLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.SinLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SinLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.CosLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.CosLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.TanLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.TanLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.AsinLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.AsinLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.AcosLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.AcosLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.AtanLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.AtanLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.SinhLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SinhLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.CoshLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.CoshLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.TanhLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.TanhLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.AsinhLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.AsinhLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.AcoshLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.AcoshLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.AtanhLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.AtanhLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.PowBroadcastableLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.PowBroadcastableLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.Exp2LayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.Exp2LayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.WhereNonZeroLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.WhereNonZeroLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.MatrixBandPartLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.MatrixBandPartLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.numLower=e.int64();break;case 2:t.numUpper=e.int64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.MatrixBandPartLayerParams.prototype.numLower=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.MatrixBandPartLayerParams.prototype.numUpper=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.UpperTriangularLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.UpperTriangularLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.k=e.int64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.UpperTriangularLayerParams.prototype.k=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.LowerTriangularLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LowerTriangularLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.k=e.int64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.LowerTriangularLayerParams.prototype.k=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.BroadcastToLikeLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.BroadcastToLikeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.BroadcastToStaticLayerParams=class{constructor(){this.targetShape=[]}static decode(e,o){const t=new $root.CoreML.Specification.BroadcastToStaticLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.targetShape=e.array(t.targetShape,(()=>e.uint64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.BroadcastToDynamicLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.BroadcastToDynamicLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.AddBroadcastableLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.AddBroadcastableLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.MaxBroadcastableLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.MaxBroadcastableLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.MinBroadcastableLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.MinBroadcastableLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.ModBroadcastableLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ModBroadcastableLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.FloorDivBroadcastableLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.FloorDivBroadcastableLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.SubtractBroadcastableLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SubtractBroadcastableLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.MultiplyBroadcastableLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.MultiplyBroadcastableLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.DivideBroadcastableLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.DivideBroadcastableLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.GatherLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.GatherLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.GatherLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ScatterMode={SCATTER_UPDATE:0,SCATTER_ADD:1,SCATTER_SUB:2,SCATTER_MUL:3,SCATTER_DIV:4,SCATTER_MAX:5,SCATTER_MIN:6},$root.CoreML.Specification.ScatterLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ScatterLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;case 2:t.mode=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ScatterLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ScatterLayerParams.prototype.mode=0,$root.CoreML.Specification.GatherNDLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.GatherNDLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.ScatterNDLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ScatterNDLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.mode=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ScatterNDLayerParams.prototype.mode=0,$root.CoreML.Specification.GatherAlongAxisLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.GatherAlongAxisLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.GatherAlongAxisLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ScatterAlongAxisLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ScatterAlongAxisLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;case 2:t.mode=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ScatterAlongAxisLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ScatterAlongAxisLayerParams.prototype.mode=0,$root.CoreML.Specification.StackLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.StackLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.StackLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RankPreservingReshapeLayerParams=class{constructor(){this.targetShape=[]}static decode(e,o){const t=new $root.CoreML.Specification.RankPreservingReshapeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.targetShape=e.array(t.targetShape,(()=>e.int64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ConstantPaddingLayerParams=class{constructor(){this.padAmounts=[]}static decode(e,o){const t=new $root.CoreML.Specification.ConstantPaddingLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.value=e.float();break;case 2:t.padAmounts=e.array(t.padAmounts,(()=>e.uint64()),o);break;case 3:t.padToGivenOutputSizeMode=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ConstantPaddingLayerParams.prototype.value=0,$root.CoreML.Specification.ConstantPaddingLayerParams.prototype.padToGivenOutputSizeMode=!1,$root.CoreML.Specification.RandomNormalLikeLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.RandomNormalLikeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.seed=e.int64();break;case 2:t.mean=e.float();break;case 3:t.stdDev=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.RandomNormalLikeLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomNormalLikeLayerParams.prototype.mean=0,$root.CoreML.Specification.RandomNormalLikeLayerParams.prototype.stdDev=0,$root.CoreML.Specification.RandomNormalStaticLayerParams=class{constructor(){this.outputShape=[]}static decode(e,o){const t=new $root.CoreML.Specification.RandomNormalStaticLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.seed=e.int64();break;case 2:t.mean=e.float();break;case 3:t.stdDev=e.float();break;case 4:t.outputShape=e.array(t.outputShape,(()=>e.uint64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.RandomNormalStaticLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomNormalStaticLayerParams.prototype.mean=0,$root.CoreML.Specification.RandomNormalStaticLayerParams.prototype.stdDev=0,$root.CoreML.Specification.RandomNormalDynamicLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.RandomNormalDynamicLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.seed=e.int64();break;case 2:t.mean=e.float();break;case 3:t.stdDev=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.RandomNormalDynamicLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomNormalDynamicLayerParams.prototype.mean=0,$root.CoreML.Specification.RandomNormalDynamicLayerParams.prototype.stdDev=0,$root.CoreML.Specification.RandomUniformLikeLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.RandomUniformLikeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.seed=e.int64();break;case 2:t.minVal=e.float();break;case 3:t.maxVal=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.RandomUniformLikeLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomUniformLikeLayerParams.prototype.minVal=0,$root.CoreML.Specification.RandomUniformLikeLayerParams.prototype.maxVal=0,$root.CoreML.Specification.RandomUniformStaticLayerParams=class{constructor(){this.outputShape=[]}static decode(e,o){const t=new $root.CoreML.Specification.RandomUniformStaticLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.seed=e.int64();break;case 2:t.minVal=e.float();break;case 3:t.maxVal=e.float();break;case 4:t.outputShape=e.array(t.outputShape,(()=>e.uint64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.RandomUniformStaticLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomUniformStaticLayerParams.prototype.minVal=0,$root.CoreML.Specification.RandomUniformStaticLayerParams.prototype.maxVal=0,$root.CoreML.Specification.RandomUniformDynamicLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.RandomUniformDynamicLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.seed=e.int64();break;case 2:t.minVal=e.float();break;case 3:t.maxVal=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.RandomUniformDynamicLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomUniformDynamicLayerParams.prototype.minVal=0,$root.CoreML.Specification.RandomUniformDynamicLayerParams.prototype.maxVal=0,$root.CoreML.Specification.RandomBernoulliLikeLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.RandomBernoulliLikeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.seed=e.int64();break;case 2:t.prob=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.RandomBernoulliLikeLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomBernoulliLikeLayerParams.prototype.prob=0,$root.CoreML.Specification.RandomBernoulliStaticLayerParams=class{constructor(){this.outputShape=[]}static decode(e,o){const t=new $root.CoreML.Specification.RandomBernoulliStaticLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.seed=e.int64();break;case 2:t.prob=e.float();break;case 3:t.outputShape=e.array(t.outputShape,(()=>e.uint64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.RandomBernoulliStaticLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomBernoulliStaticLayerParams.prototype.prob=0,$root.CoreML.Specification.RandomBernoulliDynamicLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.RandomBernoulliDynamicLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.seed=e.int64();break;case 2:t.prob=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.RandomBernoulliDynamicLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.RandomBernoulliDynamicLayerParams.prototype.prob=0,$root.CoreML.Specification.CategoricalDistributionLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.CategoricalDistributionLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.seed=e.int64();break;case 2:t.numSamples=e.int64();break;case 3:t.isLogits=e.bool();break;case 4:t.eps=e.float();break;case 5:t.temperature=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CategoricalDistributionLayerParams.prototype.seed=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.CategoricalDistributionLayerParams.prototype.numSamples=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.CategoricalDistributionLayerParams.prototype.isLogits=!1,$root.CoreML.Specification.CategoricalDistributionLayerParams.prototype.eps=0,$root.CoreML.Specification.CategoricalDistributionLayerParams.prototype.temperature=0,$root.CoreML.Specification.ReduceL1LayerParams=class{constructor(){this.axes=[]}static decode(e,o){const t=new $root.CoreML.Specification.ReduceL1LayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axes=e.array(t.axes,(()=>e.int64()),o);break;case 2:t.keepDims=e.bool();break;case 3:t.reduceAll=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReduceL1LayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceL1LayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceL2LayerParams=class{constructor(){this.axes=[]}static decode(e,o){const t=new $root.CoreML.Specification.ReduceL2LayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axes=e.array(t.axes,(()=>e.int64()),o);break;case 2:t.keepDims=e.bool();break;case 3:t.reduceAll=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReduceL2LayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceL2LayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceMaxLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const t=new $root.CoreML.Specification.ReduceMaxLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axes=e.array(t.axes,(()=>e.int64()),o);break;case 2:t.keepDims=e.bool();break;case 3:t.reduceAll=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReduceMaxLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceMaxLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceMinLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const t=new $root.CoreML.Specification.ReduceMinLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axes=e.array(t.axes,(()=>e.int64()),o);break;case 2:t.keepDims=e.bool();break;case 3:t.reduceAll=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReduceMinLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceMinLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceSumLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const t=new $root.CoreML.Specification.ReduceSumLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axes=e.array(t.axes,(()=>e.int64()),o);break;case 2:t.keepDims=e.bool();break;case 3:t.reduceAll=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReduceSumLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceSumLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceProdLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const t=new $root.CoreML.Specification.ReduceProdLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axes=e.array(t.axes,(()=>e.int64()),o);break;case 2:t.keepDims=e.bool();break;case 3:t.reduceAll=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReduceProdLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceProdLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceMeanLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const t=new $root.CoreML.Specification.ReduceMeanLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axes=e.array(t.axes,(()=>e.int64()),o);break;case 2:t.keepDims=e.bool();break;case 3:t.reduceAll=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReduceMeanLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceMeanLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceLogSumLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const t=new $root.CoreML.Specification.ReduceLogSumLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axes=e.array(t.axes,(()=>e.int64()),o);break;case 2:t.keepDims=e.bool();break;case 3:t.reduceAll=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReduceLogSumLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceLogSumLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceSumSquareLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const t=new $root.CoreML.Specification.ReduceSumSquareLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axes=e.array(t.axes,(()=>e.int64()),o);break;case 2:t.keepDims=e.bool();break;case 3:t.reduceAll=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReduceSumSquareLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceSumSquareLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ReduceLogSumExpLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const t=new $root.CoreML.Specification.ReduceLogSumExpLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axes=e.array(t.axes,(()=>e.int64()),o);break;case 2:t.keepDims=e.bool();break;case 3:t.reduceAll=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReduceLogSumExpLayerParams.prototype.keepDims=!1,$root.CoreML.Specification.ReduceLogSumExpLayerParams.prototype.reduceAll=!1,$root.CoreML.Specification.ExpandDimsLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const t=new $root.CoreML.Specification.ExpandDimsLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axes=e.array(t.axes,(()=>e.int64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.FlattenTo2DLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.FlattenTo2DLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.FlattenTo2DLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ReshapeStaticLayerParams=class{constructor(){this.targetShape=[]}static decode(e,o){const t=new $root.CoreML.Specification.ReshapeStaticLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.targetShape=e.array(t.targetShape,(()=>e.int64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ReshapeLikeLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ReshapeLikeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.ReshapeDynamicLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ReshapeDynamicLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.SqueezeLayerParams=class{constructor(){this.axes=[]}static decode(e,o){const t=new $root.CoreML.Specification.SqueezeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axes=e.array(t.axes,(()=>e.int64()),o);break;case 2:t.squeezeAll=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SqueezeLayerParams.prototype.squeezeAll=!1,$root.CoreML.Specification.TopKLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.TopKLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;case 2:t.K=e.uint64();break;case 3:t.useBottomK=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.TopKLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.TopKLayerParams.prototype.K=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TopKLayerParams.prototype.useBottomK=!1,$root.CoreML.Specification.ArgMaxLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ArgMaxLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;case 2:t.removeDim=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ArgMaxLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ArgMaxLayerParams.prototype.removeDim=!1,$root.CoreML.Specification.ArgMinLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ArgMinLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;case 2:t.removeDim=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ArgMinLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ArgMinLayerParams.prototype.removeDim=!1,$root.CoreML.Specification.SplitNDLayerParams=class{constructor(){this.splitSizes=[]}static decode(e,o){const t=new $root.CoreML.Specification.SplitNDLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;case 2:t.numSplits=e.uint64();break;case 3:t.splitSizes=e.array(t.splitSizes,(()=>e.uint64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SplitNDLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.SplitNDLayerParams.prototype.numSplits=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.CeilLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.CeilLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.RoundLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.RoundLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.FloorLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.FloorLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.SignLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SignLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.ClipLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ClipLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.minVal=e.float();break;case 2:t.maxVal=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ClipLayerParams.prototype.minVal=0,$root.CoreML.Specification.ClipLayerParams.prototype.maxVal=0,$root.CoreML.Specification.SliceStaticLayerParams=class{constructor(){this.beginIds=[],this.beginMasks=[],this.endIds=[],this.endMasks=[],this.strides=[],this.squeezeMasks=[]}static decode(e,o){const t=new $root.CoreML.Specification.SliceStaticLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.beginIds=e.array(t.beginIds,(()=>e.int64()),o);break;case 2:t.beginMasks=e.array(t.beginMasks,(()=>e.bool()),o);break;case 3:t.endIds=e.array(t.endIds,(()=>e.int64()),o);break;case 4:t.endMasks=e.array(t.endMasks,(()=>e.bool()),o);break;case 5:t.strides=e.array(t.strides,(()=>e.int64()),o);break;case 6:t.squeezeMasks=e.array(t.squeezeMasks,(()=>e.bool()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SliceDynamicLayerParams=class{constructor(){this.beginMasks=[],this.endIds=[],this.endMasks=[],this.strides=[],this.squeezeMasks=[]}static decode(e,o){const t=new $root.CoreML.Specification.SliceDynamicLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 2:t.beginMasks=e.array(t.beginMasks,(()=>e.bool()),o);break;case 3:t.endIds=e.array(t.endIds,(()=>e.int64()),o);break;case 4:t.endMasks=e.array(t.endMasks,(()=>e.bool()),o);break;case 5:t.strides=e.array(t.strides,(()=>e.int64()),o);break;case 6:t.squeezeMasks=e.array(t.squeezeMasks,(()=>e.bool()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.TileLayerParams=class{constructor(){this.reps=[]}static decode(e,o){const t=new $root.CoreML.Specification.TileLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.reps=e.array(t.reps,(()=>e.uint64()),o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.GetShapeLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.GetShapeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.ErfLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ErfLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.GeluLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.GeluLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.mode=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.GeluLayerParams.prototype.mode=0,$root.CoreML.Specification.GeluLayerParams.GeluMode={EXACT:0,TANH_APPROXIMATION:1,SIGMOID_APPROXIMATION:2},$root.CoreML.Specification.RangeStaticLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.RangeStaticLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.endValue=e.float();break;case 2:t.startValue=e.float();break;case 3:t.stepSizeValue=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.RangeStaticLayerParams.prototype.endValue=0,$root.CoreML.Specification.RangeStaticLayerParams.prototype.startValue=0,$root.CoreML.Specification.RangeStaticLayerParams.prototype.stepSizeValue=0,$root.CoreML.Specification.RangeDynamicLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.RangeDynamicLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 2:t.startValue=e.float();break;case 3:t.stepSizeValue=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.RangeDynamicLayerParams.prototype.startValue=0,$root.CoreML.Specification.RangeDynamicLayerParams.prototype.stepSizeValue=0,$root.CoreML.Specification.SlidingWindowsLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SlidingWindowsLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;case 2:t.windowSize=e.uint64();break;case 3:t.step=e.uint64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SlidingWindowsLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.SlidingWindowsLayerParams.prototype.windowSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.SlidingWindowsLayerParams.prototype.step=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.LayerNormalizationLayerParams=class{constructor(){this.normalizedShape=[]}static decode(e,o){const t=new $root.CoreML.Specification.LayerNormalizationLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.normalizedShape=e.array(t.normalizedShape,(()=>e.int64()),o);break;case 2:t.eps=e.float();break;case 3:t.gamma=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;case 4:t.beta=$root.CoreML.Specification.WeightParams.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.LayerNormalizationLayerParams.prototype.eps=0,$root.CoreML.Specification.LayerNormalizationLayerParams.prototype.gamma=null,$root.CoreML.Specification.LayerNormalizationLayerParams.prototype.beta=null,$root.CoreML.Specification.NonMaximumSuppressionLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.NonMaximumSuppressionLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.iouThreshold=e.float();break;case 2:t.scoreThreshold=e.float();break;case 3:t.maxBoxes=e.uint64();break;case 4:t.perClassSuppression=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NonMaximumSuppressionLayerParams.prototype.iouThreshold=0,$root.CoreML.Specification.NonMaximumSuppressionLayerParams.prototype.scoreThreshold=0,$root.CoreML.Specification.NonMaximumSuppressionLayerParams.prototype.maxBoxes=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.NonMaximumSuppressionLayerParams.prototype.perClassSuppression=!1,$root.CoreML.Specification.ClampedReLULayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ClampedReLULayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=e.float();break;case 2:t.beta=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ClampedReLULayerParams.prototype.alpha=0,$root.CoreML.Specification.ClampedReLULayerParams.prototype.beta=0,$root.CoreML.Specification.ArgSortLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ArgSortLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;case 2:t.descending=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ArgSortLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.ArgSortLayerParams.prototype.descending=!1,$root.CoreML.Specification.SliceBySizeLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SliceBySizeLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 2:t.size=e.int64();break;case 3:t.axis=e.int64();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SliceBySizeLayerParams.prototype.size=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.SliceBySizeLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.NeuralNetworkClassifier=class{constructor(){this.layers=[],this.preprocessing=[]}get ClassLabels(){return $root.CoreML.Specification.NeuralNetworkClassifier.ClassLabelsSet=$root.CoreML.Specification.NeuralNetworkClassifier.ClassLabelsSet||new Set(["stringClassLabels","int64ClassLabels"]),Object.keys(this).find((e=>$root.CoreML.Specification.NeuralNetworkClassifier.ClassLabelsSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.NeuralNetworkClassifier,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.layers.push($root.CoreML.Specification.NeuralNetworkLayer.decode(e,e.uint32()));break;case 2:t.preprocessing.push($root.CoreML.Specification.NeuralNetworkPreprocessing.decode(e,e.uint32()));break;case 5:t.arrayInputShapeMapping=e.int32();break;case 6:t.imageInputShapeMapping=e.int32();break;case 10:t.updateParams=$root.CoreML.Specification.NetworkUpdateParameters.decode(e,e.uint32());break;case 100:t.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 101:t.int64ClassLabels=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;case 200:t.labelProbabilityLayerName=e.string();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NeuralNetworkClassifier.prototype.arrayInputShapeMapping=0,$root.CoreML.Specification.NeuralNetworkClassifier.prototype.imageInputShapeMapping=0,$root.CoreML.Specification.NeuralNetworkClassifier.prototype.updateParams=null,$root.CoreML.Specification.NeuralNetworkClassifier.prototype.labelProbabilityLayerName="",$root.CoreML.Specification.OneHotLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.OneHotLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.oneHotVectorSize=e.uint64();break;case 2:t.axis=e.int64();break;case 3:t.onValue=e.float();break;case 4:t.offValue=e.float();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.OneHotLayerParams.prototype.oneHotVectorSize=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.OneHotLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.OneHotLayerParams.prototype.onValue=0,$root.CoreML.Specification.OneHotLayerParams.prototype.offValue=0,$root.CoreML.Specification.CumSumLayerParams=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.CumSumLayerParams,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.axis=e.int64();break;case 2:t.excludeFinalSum=e.bool();break;case 3:t.reverse=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CumSumLayerParams.prototype.axis=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.CoreML.Specification.CumSumLayerParams.prototype.excludeFinalSum=!1,$root.CoreML.Specification.CumSumLayerParams.prototype.reverse=!1,$root.CoreML.Specification.NeuralNetworkRegressor=class{constructor(){this.layers=[],this.preprocessing=[]}static decode(e,o){const t=new $root.CoreML.Specification.NeuralNetworkRegressor,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.layers.push($root.CoreML.Specification.NeuralNetworkLayer.decode(e,e.uint32()));break;case 2:t.preprocessing.push($root.CoreML.Specification.NeuralNetworkPreprocessing.decode(e,e.uint32()));break;case 5:t.arrayInputShapeMapping=e.int32();break;case 6:t.imageInputShapeMapping=e.int32();break;case 10:t.updateParams=$root.CoreML.Specification.NetworkUpdateParameters.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NeuralNetworkRegressor.prototype.arrayInputShapeMapping=0,$root.CoreML.Specification.NeuralNetworkRegressor.prototype.imageInputShapeMapping=0,$root.CoreML.Specification.NeuralNetworkRegressor.prototype.updateParams=null,$root.CoreML.Specification.NetworkUpdateParameters=class{constructor(){this.lossLayers=[]}static decode(e,o){const t=new $root.CoreML.Specification.NetworkUpdateParameters,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.lossLayers.push($root.CoreML.Specification.LossLayer.decode(e,e.uint32()));break;case 2:t.optimizer=$root.CoreML.Specification.Optimizer.decode(e,e.uint32());break;case 3:t.epochs=$root.CoreML.Specification.Int64Parameter.decode(e,e.uint32());break;case 10:t.shuffle=$root.CoreML.Specification.BoolParameter.decode(e,e.uint32());break;case 20:t.seed=$root.CoreML.Specification.Int64Parameter.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NetworkUpdateParameters.prototype.optimizer=null,$root.CoreML.Specification.NetworkUpdateParameters.prototype.epochs=null,$root.CoreML.Specification.NetworkUpdateParameters.prototype.shuffle=null,$root.CoreML.Specification.NetworkUpdateParameters.prototype.seed=null,$root.CoreML.Specification.LossLayer=class{constructor(){}get LossLayerType(){return $root.CoreML.Specification.LossLayer.LossLayerTypeSet=$root.CoreML.Specification.LossLayer.LossLayerTypeSet||new Set(["categoricalCrossEntropyLossLayer","meanSquaredErrorLossLayer"]),Object.keys(this).find((e=>$root.CoreML.Specification.LossLayer.LossLayerTypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.LossLayer,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.name=e.string();break;case 10:t.categoricalCrossEntropyLossLayer=$root.CoreML.Specification.CategoricalCrossEntropyLossLayer.decode(e,e.uint32());break;case 11:t.meanSquaredErrorLossLayer=$root.CoreML.Specification.MeanSquaredErrorLossLayer.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.LossLayer.prototype.name="",$root.CoreML.Specification.CategoricalCrossEntropyLossLayer=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.CategoricalCrossEntropyLossLayer,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.input=e.string();break;case 2:t.target=e.string();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.CategoricalCrossEntropyLossLayer.prototype.input="",$root.CoreML.Specification.CategoricalCrossEntropyLossLayer.prototype.target="",$root.CoreML.Specification.MeanSquaredErrorLossLayer=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.MeanSquaredErrorLossLayer,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.input=e.string();break;case 2:t.target=e.string();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.MeanSquaredErrorLossLayer.prototype.input="",$root.CoreML.Specification.MeanSquaredErrorLossLayer.prototype.target="",$root.CoreML.Specification.Optimizer=class{constructor(){}get OptimizerType(){return $root.CoreML.Specification.Optimizer.OptimizerTypeSet=$root.CoreML.Specification.Optimizer.OptimizerTypeSet||new Set(["sgdOptimizer","adamOptimizer"]),Object.keys(this).find((e=>$root.CoreML.Specification.Optimizer.OptimizerTypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.Optimizer,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 10:t.sgdOptimizer=$root.CoreML.Specification.SGDOptimizer.decode(e,e.uint32());break;case 11:t.adamOptimizer=$root.CoreML.Specification.AdamOptimizer.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SGDOptimizer=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SGDOptimizer,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.learningRate=$root.CoreML.Specification.DoubleParameter.decode(e,e.uint32());break;case 2:t.miniBatchSize=$root.CoreML.Specification.Int64Parameter.decode(e,e.uint32());break;case 3:t.momentum=$root.CoreML.Specification.DoubleParameter.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SGDOptimizer.prototype.learningRate=null,$root.CoreML.Specification.SGDOptimizer.prototype.miniBatchSize=null,$root.CoreML.Specification.SGDOptimizer.prototype.momentum=null,$root.CoreML.Specification.AdamOptimizer=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.AdamOptimizer,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.learningRate=$root.CoreML.Specification.DoubleParameter.decode(e,e.uint32());break;case 2:t.miniBatchSize=$root.CoreML.Specification.Int64Parameter.decode(e,e.uint32());break;case 3:t.beta1=$root.CoreML.Specification.DoubleParameter.decode(e,e.uint32());break;case 4:t.beta2=$root.CoreML.Specification.DoubleParameter.decode(e,e.uint32());break;case 5:t.eps=$root.CoreML.Specification.DoubleParameter.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.AdamOptimizer.prototype.learningRate=null,$root.CoreML.Specification.AdamOptimizer.prototype.miniBatchSize=null,$root.CoreML.Specification.AdamOptimizer.prototype.beta1=null,$root.CoreML.Specification.AdamOptimizer.prototype.beta2=null,$root.CoreML.Specification.AdamOptimizer.prototype.eps=null,$root.CoreML.Specification.Normalizer=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.Normalizer,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.normType=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Normalizer.prototype.normType=0,$root.CoreML.Specification.Normalizer.NormType={LMax:0,L1:1,L2:2},$root.CoreML.Specification.OneHotEncoder=class{constructor(){}get CategoryType(){return $root.CoreML.Specification.OneHotEncoder.CategoryTypeSet=$root.CoreML.Specification.OneHotEncoder.CategoryTypeSet||new Set(["stringCategories","int64Categories"]),Object.keys(this).find((e=>$root.CoreML.Specification.OneHotEncoder.CategoryTypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.OneHotEncoder,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.stringCategories=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 2:t.int64Categories=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;case 10:t.outputSparse=e.bool();break;case 11:t.handleUnknown=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.OneHotEncoder.prototype.outputSparse=!1,$root.CoreML.Specification.OneHotEncoder.prototype.handleUnknown=0,$root.CoreML.Specification.OneHotEncoder.HandleUnknown={ErrorOnUnknown:0,IgnoreUnknown:1},$root.CoreML.Specification.Scaler=class{constructor(){this.shiftValue=[],this.scaleValue=[]}static decode(e,o){const t=new $root.CoreML.Specification.Scaler,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.shiftValue=e.doubles(t.shiftValue,o);break;case 2:t.scaleValue=e.doubles(t.scaleValue,o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NonMaximumSuppression=class{constructor(){}get SuppressionMethod(){return $root.CoreML.Specification.NonMaximumSuppression.SuppressionMethodSet=$root.CoreML.Specification.NonMaximumSuppression.SuppressionMethodSet||new Set(["pickTop"]),Object.keys(this).find((e=>$root.CoreML.Specification.NonMaximumSuppression.SuppressionMethodSet.has(e)&&null!=this[e]))}get ClassLabels(){return $root.CoreML.Specification.NonMaximumSuppression.ClassLabelsSet=$root.CoreML.Specification.NonMaximumSuppression.ClassLabelsSet||new Set(["stringClassLabels","int64ClassLabels"]),Object.keys(this).find((e=>$root.CoreML.Specification.NonMaximumSuppression.ClassLabelsSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.NonMaximumSuppression,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.pickTop=$root.CoreML.Specification.NonMaximumSuppression.PickTop.decode(e,e.uint32());break;case 100:t.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 101:t.int64ClassLabels=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;case 110:t.iouThreshold=e.double();break;case 111:t.confidenceThreshold=e.double();break;case 200:t.confidenceInputFeatureName=e.string();break;case 201:t.coordinatesInputFeatureName=e.string();break;case 202:t.iouThresholdInputFeatureName=e.string();break;case 203:t.confidenceThresholdInputFeatureName=e.string();break;case 210:t.confidenceOutputFeatureName=e.string();break;case 211:t.coordinatesOutputFeatureName=e.string();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NonMaximumSuppression.prototype.iouThreshold=0,$root.CoreML.Specification.NonMaximumSuppression.prototype.confidenceThreshold=0,$root.CoreML.Specification.NonMaximumSuppression.prototype.confidenceInputFeatureName="",$root.CoreML.Specification.NonMaximumSuppression.prototype.coordinatesInputFeatureName="",$root.CoreML.Specification.NonMaximumSuppression.prototype.iouThresholdInputFeatureName="",$root.CoreML.Specification.NonMaximumSuppression.prototype.confidenceThresholdInputFeatureName="",$root.CoreML.Specification.NonMaximumSuppression.prototype.confidenceOutputFeatureName="",$root.CoreML.Specification.NonMaximumSuppression.prototype.coordinatesOutputFeatureName="",$root.CoreML.Specification.NonMaximumSuppression.PickTop=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.NonMaximumSuppression.PickTop,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.perClass=e.bool();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.NonMaximumSuppression.PickTop.prototype.perClass=!1,$root.CoreML.Specification.LinearKernel=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LinearKernel,r=e.next(o);for(;e.end(r);){const o=e.uint32();e.skipType(7&o)}return t}},$root.CoreML.Specification.RBFKernel=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.RBFKernel,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.gamma=e.double();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.RBFKernel.prototype.gamma=0,$root.CoreML.Specification.PolyKernel=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.PolyKernel,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.degree=e.int32();break;case 2:t.c=e.double();break;case 3:t.gamma=e.double();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.PolyKernel.prototype.degree=0,$root.CoreML.Specification.PolyKernel.prototype.c=0,$root.CoreML.Specification.PolyKernel.prototype.gamma=0,$root.CoreML.Specification.SigmoidKernel=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SigmoidKernel,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.gamma=e.double();break;case 2:t.c=e.double();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SigmoidKernel.prototype.gamma=0,$root.CoreML.Specification.SigmoidKernel.prototype.c=0,$root.CoreML.Specification.Kernel=class{constructor(){}get kernel(){return $root.CoreML.Specification.Kernel.kernelSet=$root.CoreML.Specification.Kernel.kernelSet||new Set(["linearKernel","rbfKernel","polyKernel","sigmoidKernel"]),Object.keys(this).find((e=>$root.CoreML.Specification.Kernel.kernelSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.Kernel,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.linearKernel=$root.CoreML.Specification.LinearKernel.decode(e,e.uint32());break;case 2:t.rbfKernel=$root.CoreML.Specification.RBFKernel.decode(e,e.uint32());break;case 3:t.polyKernel=$root.CoreML.Specification.PolyKernel.decode(e,e.uint32());break;case 4:t.sigmoidKernel=$root.CoreML.Specification.SigmoidKernel.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SparseNode=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.SparseNode,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.index=e.int32();break;case 2:t.value=e.double();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SparseNode.prototype.index=0,$root.CoreML.Specification.SparseNode.prototype.value=0,$root.CoreML.Specification.SparseVector=class{constructor(){this.nodes=[]}static decode(e,o){const t=new $root.CoreML.Specification.SparseVector,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.nodes.push($root.CoreML.Specification.SparseNode.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SparseSupportVectors=class{constructor(){this.vectors=[]}static decode(e,o){const t=new $root.CoreML.Specification.SparseSupportVectors,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.vectors.push($root.CoreML.Specification.SparseVector.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.DenseVector=class{constructor(){this.values=[]}static decode(e,o){const t=new $root.CoreML.Specification.DenseVector,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.values=e.doubles(t.values,o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.DenseSupportVectors=class{constructor(){this.vectors=[]}static decode(e,o){const t=new $root.CoreML.Specification.DenseSupportVectors,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.vectors.push($root.CoreML.Specification.DenseVector.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.Coefficients=class{constructor(){this.alpha=[]}static decode(e,o){const t=new $root.CoreML.Specification.Coefficients,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.alpha=e.doubles(t.alpha,o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SupportVectorRegressor=class{constructor(){}get supportVectors(){return $root.CoreML.Specification.SupportVectorRegressor.supportVectorsSet=$root.CoreML.Specification.SupportVectorRegressor.supportVectorsSet||new Set(["sparseSupportVectors","denseSupportVectors"]),Object.keys(this).find((e=>$root.CoreML.Specification.SupportVectorRegressor.supportVectorsSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.SupportVectorRegressor,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.kernel=$root.CoreML.Specification.Kernel.decode(e,e.uint32());break;case 2:t.sparseSupportVectors=$root.CoreML.Specification.SparseSupportVectors.decode(e,e.uint32());break;case 3:t.denseSupportVectors=$root.CoreML.Specification.DenseSupportVectors.decode(e,e.uint32());break;case 4:t.coefficients=$root.CoreML.Specification.Coefficients.decode(e,e.uint32());break;case 5:t.rho=e.double();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SupportVectorRegressor.prototype.kernel=null,$root.CoreML.Specification.SupportVectorRegressor.prototype.coefficients=null,$root.CoreML.Specification.SupportVectorRegressor.prototype.rho=0,$root.CoreML.Specification.SupportVectorClassifier=class{constructor(){this.numberOfSupportVectorsPerClass=[],this.coefficients=[],this.rho=[],this.probA=[],this.probB=[]}get supportVectors(){return $root.CoreML.Specification.SupportVectorClassifier.supportVectorsSet=$root.CoreML.Specification.SupportVectorClassifier.supportVectorsSet||new Set(["sparseSupportVectors","denseSupportVectors"]),Object.keys(this).find((e=>$root.CoreML.Specification.SupportVectorClassifier.supportVectorsSet.has(e)&&null!=this[e]))}get ClassLabels(){return $root.CoreML.Specification.SupportVectorClassifier.ClassLabelsSet=$root.CoreML.Specification.SupportVectorClassifier.ClassLabelsSet||new Set(["stringClassLabels","int64ClassLabels"]),Object.keys(this).find((e=>$root.CoreML.Specification.SupportVectorClassifier.ClassLabelsSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.SupportVectorClassifier,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.kernel=$root.CoreML.Specification.Kernel.decode(e,e.uint32());break;case 2:t.numberOfSupportVectorsPerClass=e.array(t.numberOfSupportVectorsPerClass,(()=>e.int32()),o);break;case 3:t.sparseSupportVectors=$root.CoreML.Specification.SparseSupportVectors.decode(e,e.uint32());break;case 4:t.denseSupportVectors=$root.CoreML.Specification.DenseSupportVectors.decode(e,e.uint32());break;case 5:t.coefficients.push($root.CoreML.Specification.Coefficients.decode(e,e.uint32()));break;case 6:t.rho=e.doubles(t.rho,o);break;case 7:t.probA=e.doubles(t.probA,o);break;case 8:t.probB=e.doubles(t.probB,o);break;case 100:t.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 101:t.int64ClassLabels=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.SupportVectorClassifier.prototype.kernel=null,$root.CoreML.Specification.TreeEnsemblePostEvaluationTransform={NoTransform:0,Classification_SoftMax:1,Regression_Logistic:2,Classification_SoftMaxWithZeroClassReference:3},$root.CoreML.Specification.TreeEnsembleParameters=class{constructor(){this.nodes=[],this.basePredictionValue=[]}static decode(e,o){const t=new $root.CoreML.Specification.TreeEnsembleParameters,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.nodes.push($root.CoreML.Specification.TreeEnsembleParameters.TreeNode.decode(e,e.uint32()));break;case 2:t.numPredictionDimensions=e.uint64();break;case 3:t.basePredictionValue=e.doubles(t.basePredictionValue,o);break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.TreeEnsembleParameters.prototype.numPredictionDimensions=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode=class{constructor(){this.evaluationInfo=[]}static decode(e,o){const t=new $root.CoreML.Specification.TreeEnsembleParameters.TreeNode,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.treeId=e.uint64();break;case 2:t.nodeId=e.uint64();break;case 3:t.nodeBehavior=e.int32();break;case 10:t.branchFeatureIndex=e.uint64();break;case 11:t.branchFeatureValue=e.double();break;case 12:t.trueChildNodeId=e.uint64();break;case 13:t.falseChildNodeId=e.uint64();break;case 14:t.missingValueTracksTrueChild=e.bool();break;case 20:t.evaluationInfo.push($root.CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo.decode(e,e.uint32()));break;case 30:t.relativeHitRate=e.double();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.treeId=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0;$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.nodeId=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.nodeBehavior=0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.branchFeatureIndex=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.branchFeatureValue=0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.trueChildNodeId=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.falseChildNodeId=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.missingValueTracksTrueChild=!1,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.prototype.relativeHitRate=0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.TreeNodeBehavior={BranchOnValueLessThanEqual:0,BranchOnValueLessThan:1,BranchOnValueGreaterThanEqual:2,BranchOnValueGreaterThan:3,BranchOnValueEqual:4,BranchOnValueNotEqual:5,LeafNode:6},$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.evaluationIndex=e.uint64();break;case 2:t.evaluationValue=e.double();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo.prototype.evaluationIndex=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo.prototype.evaluationValue=0,$root.CoreML.Specification.TreeEnsembleClassifier=class{constructor(){}get ClassLabels(){return $root.CoreML.Specification.TreeEnsembleClassifier.ClassLabelsSet=$root.CoreML.Specification.TreeEnsembleClassifier.ClassLabelsSet||new Set(["stringClassLabels","int64ClassLabels"]),Object.keys(this).find((e=>$root.CoreML.Specification.TreeEnsembleClassifier.ClassLabelsSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.TreeEnsembleClassifier,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.treeEnsemble=$root.CoreML.Specification.TreeEnsembleParameters.decode(e,e.uint32());break;case 2:t.postEvaluationTransform=e.int32();break;case 100:t.stringClassLabels=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 101:t.int64ClassLabels=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.TreeEnsembleClassifier.prototype.treeEnsemble=null,$root.CoreML.Specification.TreeEnsembleClassifier.prototype.postEvaluationTransform=0,$root.CoreML.Specification.TreeEnsembleRegressor=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.TreeEnsembleRegressor,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.treeEnsemble=$root.CoreML.Specification.TreeEnsembleParameters.decode(e,e.uint32());break;case 2:t.postEvaluationTransform=e.int32();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.TreeEnsembleRegressor.prototype.treeEnsemble=null,$root.CoreML.Specification.TreeEnsembleRegressor.prototype.postEvaluationTransform=0,$root.CoreML.Specification.ItemSimilarityRecommender=class{constructor(){this.itemItemSimilarities=[]}static decode(e,o){const t=new $root.CoreML.Specification.ItemSimilarityRecommender,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.itemItemSimilarities.push($root.CoreML.Specification.ItemSimilarityRecommender.SimilarItems.decode(e,e.uint32()));break;case 2:t.itemStringIds=$root.CoreML.Specification.StringVector.decode(e,e.uint32());break;case 3:t.itemInt64Ids=$root.CoreML.Specification.Int64Vector.decode(e,e.uint32());break;case 10:t.itemInputFeatureName=e.string();break;case 11:t.numRecommendationsInputFeatureName=e.string();break;case 12:t.itemRestrictionInputFeatureName=e.string();break;case 13:t.itemExclusionInputFeatureName=e.string();break;case 20:t.recommendedItemListOutputFeatureName=e.string();break;case 21:t.recommendedItemScoreOutputFeatureName=e.string();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ItemSimilarityRecommender.prototype.itemStringIds=null,$root.CoreML.Specification.ItemSimilarityRecommender.prototype.itemInt64Ids=null,$root.CoreML.Specification.ItemSimilarityRecommender.prototype.itemInputFeatureName="",$root.CoreML.Specification.ItemSimilarityRecommender.prototype.numRecommendationsInputFeatureName="",$root.CoreML.Specification.ItemSimilarityRecommender.prototype.itemRestrictionInputFeatureName="",$root.CoreML.Specification.ItemSimilarityRecommender.prototype.itemExclusionInputFeatureName="",$root.CoreML.Specification.ItemSimilarityRecommender.prototype.recommendedItemListOutputFeatureName="",$root.CoreML.Specification.ItemSimilarityRecommender.prototype.recommendedItemScoreOutputFeatureName="",$root.CoreML.Specification.ItemSimilarityRecommender.ConnectedItem=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.ItemSimilarityRecommender.ConnectedItem,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.itemId=e.uint64();break;case 2:t.similarityScore=e.double();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ItemSimilarityRecommender.ConnectedItem.prototype.itemId=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ItemSimilarityRecommender.ConnectedItem.prototype.similarityScore=0,$root.CoreML.Specification.ItemSimilarityRecommender.SimilarItems=class{constructor(){this.similarItemList=[]}static decode(e,o){const t=new $root.CoreML.Specification.ItemSimilarityRecommender.SimilarItems,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.itemId=e.uint64();break;case 2:t.similarItemList.push($root.CoreML.Specification.ItemSimilarityRecommender.ConnectedItem.decode(e,e.uint32()));break;case 3:t.itemScoreAdjustment=e.double();break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.ItemSimilarityRecommender.SimilarItems.prototype.itemId=protobuf.Long?protobuf.Long.fromBits(0,0,!0):0,$root.CoreML.Specification.ItemSimilarityRecommender.SimilarItems.prototype.itemScoreAdjustment=0,$root.CoreML.Specification.LinkedModel=class{constructor(){}get LinkType(){return $root.CoreML.Specification.LinkedModel.LinkTypeSet=$root.CoreML.Specification.LinkedModel.LinkTypeSet||new Set(["linkedModelFile"]),Object.keys(this).find((e=>$root.CoreML.Specification.LinkedModel.LinkTypeSet.has(e)&&null!=this[e]))}static decode(e,o){const t=new $root.CoreML.Specification.LinkedModel,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.linkedModelFile=$root.CoreML.Specification.LinkedModelFile.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.LinkedModelFile=class{constructor(){}static decode(e,o){const t=new $root.CoreML.Specification.LinkedModelFile,r=e.next(o);for(;e.end(r);){const o=e.uint32();switch(o>>>3){case 1:t.linkedModelFileName=$root.CoreML.Specification.StringParameter.decode(e,e.uint32());break;case 2:t.linkedModelSearchPath=$root.CoreML.Specification.StringParameter.decode(e,e.uint32());break;default:e.skipType(7&o)}}return t}},$root.CoreML.Specification.LinkedModelFile.prototype.linkedModelFileName=null,$root.CoreML.Specification.LinkedModelFile.prototype.linkedModelSearchPath=null;