var caffe2=caffe2||{},protobuf=protobuf||require("./protobuf");caffe2.ModelFactory=class{match(t){const e=t.identifier.toLowerCase(),n=e.split(".").pop().toLowerCase();if("pb"==n){if(e.endsWith("predict_net.pb")||e.endsWith("init_net.pb")||e.startsWith("predict_net")||e.startsWith("init_net"))return!0;const n=t.tags("pb");if(n.size>0&&n.has(1)&&0==n.get(1)&&n.has(2)&&0==n.get(2)&&n.has(9)&&2==n.get(9))return!1;if(n.size>0&&Array.from(n.values()).some((t=>5===t)))return!1;if(!(!(n.size>0)||n.has(1)&&2!==n.get(1)||n.has(2)&&2!==n.get(2)||n.has(7)&&2!==n.get(7)||n.has(8)&&2!==n.get(8))){const e=t.buffer;if(e.length>3&&10==e[0]){const t=e[1];if(t<64&&e.length>2+t+1&&e.slice(2,2+t).every((t=>t>=32&&t<=127))&&18==e[2+t])return!0}if(e.length>3&&18==e[0])return!0}}if("pbtxt"==n||"prototxt"==n){if(e.endsWith("predict_net"))return!0;if(t.tags("pbtxt").has("op"))return"ops.pbtxt"!==t.identifier||-1===t.text.indexOf("  attr {")}return!1}open(t,e){return e.require("./caffe2-proto").then((()=>caffe2.Metadata.open(e).then((n=>{const a=t.identifier,i=a.split("."),s=i.pop().toLowerCase(),r=i.join(".");if("pbtxt"==s||"prototxt"==s){const i=(t,i)=>{let s=null,r=null;try{caffe2.proto=protobuf.get("caffe2").caffe2;const e=protobuf.TextReader.create(t);e.field=function(t,e){if(!(e instanceof caffe2.proto.DeviceOption))throw new Error("Unknown field '"+t+"'"+this.location());e[t]=this.skip()},s=caffe2.proto.NetDef.decodeText(e)}catch(t){throw new caffe2.Error("File text format is not caffe2.NetDef ("+t.message+") in '"+a+"'.")}try{caffe2.proto=protobuf.get("caffe2").caffe2,r="string"==typeof i?caffe2.proto.NetDef.decodeText(protobuf.TextReader.create(i)):caffe2.proto.NetDef.decode(protobuf.Reader.create(i))}catch(t){}try{return new caffe2.Model(n,s,r)}catch(t){e.exception(t,!1);const n=t&&t.message?t.message:t.toString();throw new caffe2.Error(n.replace(/\.$/,"")+" in '"+a+"'.")}};return r.toLowerCase().endsWith("init_net")||r.toLowerCase().startsWith("init_net")?t.request(a.replace("init_net","predict_net"),"utf-8").then((e=>i(e,t.text))).catch((()=>i(t.text,null))):r.toLowerCase().endsWith("predict_net")||r.toLowerCase().startsWith("predict_net")?t.request(a.replace("predict_net","init_net").replace(/\.pbtxt/,".pb"),null).then((e=>i(t.text,e))).catch((()=>t.request(a.replace("predict_net","init_net"),"utf-8").then((e=>i(t.text,e))).catch((()=>i(t.text,null))))):t.request(r+"_init.pb",null).then((e=>i(t.text,e))).catch((()=>i(t.text,null)))}{const i=(t,i)=>{let s=null,r=null;try{caffe2.proto=protobuf.get("caffe2").caffe2;const e=protobuf.Reader.create(t);s=caffe2.proto.NetDef.decode(e)}catch(t){throw new caffe2.Error("File format is not caffe2.NetDef ("+t.message+") in '"+a+"'.")}try{if(i){caffe2.proto=protobuf.get("caffe2").caffe2;const t=protobuf.Reader.create(i);r=caffe2.proto.NetDef.decode(t)}}catch(t){}try{return new caffe2.Model(n,s,r)}catch(t){e.exception(t,!1);const n=t&&t.message?t.message:t.toString();throw new caffe2.Error(n.replace(/\.$/,"")+" in '"+a+"'.")}};return r.toLowerCase().endsWith("init_net")?t.request(r.replace(/init_net$/,"")+"predict_net."+s,null).then((e=>i(e,t.buffer))).catch((()=>i(t.buffer,null))):r.toLowerCase().endsWith("_init")?t.request(r.replace(/_init$/,"")+"."+s,null).then((e=>i(e,t.buffer))).catch((()=>i(t.buffer,null))):r.toLowerCase().endsWith("predict_net")||r.toLowerCase().startsWith("predict_net")?t.request(a.replace("predict_net","init_net"),null).then((e=>i(t.buffer,e))).catch((()=>i(t.buffer,null))):t.request(r+"_init."+s,null).then((e=>i(t.buffer,e))).catch((()=>i(t.buffer,null)))}}))))}},caffe2.Model=class{constructor(t,e,n){this._domain=e.domain||null;const a=new caffe2.Graph(t,e,n);this._graphs=[a]}get format(){return"Caffe2"}get domain(){return this._domain}get graphs(){return this._graphs}},caffe2.Graph=class{constructor(t,e,n){this._name=e.name||"",this._type=e.type||"",this._nodes=[];const a=new Map;for(const t of e.external_input)a.set(t,{});if(n)for(const t of n.op)if(t.output&&1==t.output.length){const e=t.output[0];a.has(e)||a.set(e,{});const n=a.get(e);for(const e of t.arg)n[e.name]=e;switch(t.type){case"GivenTensorFill":n.dataType="float32";break;case"GivenTensorDoubleFill":n.dataType="float64";break;case"GivenTensorBoolFill":n.dataType="boolean";break;case"GivenTensorByteStringToUInt8Fill":n.dataType="uint8";break;case"GivenTensorInt16Fill":case"GivenTensorSInt16Fill":n.dataType="int16";break;case"GivenTensorIntFill":n.dataType="int32";break;case"GivenTensorInt64Fill":n.dataType="int64";break;case"GivenTensorStringFill":n.dataType="string";break;case"Int8GivenIntTensorFill":n.dataType="int32";break;case"Int8GivenTensorFill":n.dataType="int8";break;case"XavierFill":case"ConstantFill":break;default:throw new caffe2.Error("Unknown init op '"+t.type+"'.")}n.values&&n.values.floats&&(1!==n.values.floats.length||0!==n.values.floats[0])&&(n.input=!1)}const i={};let s=0;for(const t of e.op)t.input=t.input.map((t=>i[t]?i[t]:t)),t.output=t.output.map((t=>{if(i[t]){const e=t+"\n"+s.toString();return i[t]=e,e}return i[t]=t,t})),s++;let r=null,o=null;for(const n of e.op){const e=new caffe2.Node(t,n,a);1==n.input.length&&n.output.length>=1&&n.input[0].split("\n").shift()==n.output[0].split("\n").shift()&&r&&o==n.input[0].split("\n").shift()?r.chain.push(e):(this._nodes.push(e),r=null,o=null,1==n.output.length&&(r=e,o=n.output[0].split("\n").shift()))}this._inputs=[];for(const t of e.external_input){if(e.external_input.length>1){const e=a.get(t);if(e&&!1===e.input)continue}this._inputs.push(new caffe2.Parameter(t,[new caffe2.Argument(t,null,null)]))}this._outputs=[];for(const t of e.external_output)this._outputs.push(new caffe2.Parameter(t,[new caffe2.Argument(t,null,null)]))}get name(){return this._name}get type(){return this._type}get inputs(){return this._inputs}get outputs(){return this._outputs}get nodes(){return this._nodes}toString(){return"graph("+this.name+")"}},caffe2.Parameter=class{constructor(t,e){this._name=t,this._arguments=e}get name(){return this._name}get visible(){return!0}get arguments(){return this._arguments}},caffe2.Argument=class{constructor(t,e,n){if("string"!=typeof t)throw new caffe2.Error("Invalid argument identifier '"+JSON.stringify(t)+"'.");this._name=t,this._type=e||null,this._initializer=n||null}get name(){return this._name}get type(){return this._initializer?this._initializer.type:this._type}get quantization(){return this._initializer?this._initializer.quantization:null}get initializer(){return this._initializer}},caffe2.Node=class{constructor(t,e,n){this._name=e.name||"",this._device=e.engine||"",this._metadata=t,this._type=e.type,this._chain=[],this._attributes=[];for(const n of e.arg)this._attributes.push(new caffe2.Attribute(t,t.attribute(this._type,n.name),n));const a=t.type(this._type),i=e.input,s=e.output,r={};let o=0;for(const t of i){if(o>0&&n.has(t)){const e=n.get(t);r[t]=new caffe2.Tensor(t,e),e.input=!1}o++}for(const t of s)n.has(t)&&(n.get(t).input=!1);this._inputs=[];let u=0;if(a&&a.inputs){for(const t of a.inputs)if(u<i.length||"optional"!=t.option){const e="variadic"==t.option?i.length-u:1,n=i.slice(u,u+e).filter((e=>""!=e||"optional"!=t.option)).map((t=>new caffe2.Argument(t,null,r[t])));this._inputs.push(new caffe2.Parameter(t.name,n)),u+=e}}else this._inputs=this._inputs.concat(i.slice(u).map(((t,e)=>{const n=u+e==0?"input":(u+e).toString();return new caffe2.Parameter(n,[new caffe2.Argument(t,null,r[t])])})));this._outputs=[];let f=0;if(a&&a.outputs){for(const t of a.outputs)if(f<s.length||"optional"!=t.option){const e="variadic"==t.option?s.length-f:1,n=s.slice(f,f+e).map((t=>new caffe2.Argument(t)));this._outputs.push(new caffe2.Parameter(t.name,n)),f+=e}}else this._outputs=this._outputs.concat(s.slice(f).map(((t,e)=>{const n=f+e==0?"output":(f+e).toString();return new caffe2.Parameter(n,[new caffe2.Argument(t,null,null)])})))}get name(){return this._name||""}get device(){return this._device||""}get type(){return this._type}get metadata(){return this._metadata.type(this._type)}get inputs(){return this._inputs}get outputs(){return this._outputs}get attributes(){return this._attributes}get chain(){return this._chain}},caffe2.Attribute=class{constructor(t,e,n){if(this._name=n.name,n.floats&&n.floats.length>0?this._value=n.floats:n.ints&&n.ints.length>0?this._value=n.ints:n.nets&&n.nets.length>0?(this._value=n.nets.map((e=>new caffe2.Graph(t,e,null))),this._type="graph[]"):n.n?(this._value=new caffe2.Graph(t,n.n,null),this._type="graph"):(n.i,this._value=n.i),e&&Object.prototype.hasOwnProperty.call(e,"type")&&(this._type=e.type,"boolean"==this._type))switch(this._value){case 1:this._value=!0;break;case 0:this._value=!1}e&&(Object.prototype.hasOwnProperty.call(e,"visible")&&!e.visible||Object.prototype.hasOwnProperty.call(e,"default")&&(this._value==e.default||this._value&&this._value.toString()==e.default.toString()))&&(this._visible=!1)}get name(){return this._name}get type(){return this._type||null}get value(){return this._value}get visible(){return 0!=this._visible}},caffe2.Tensor=class{constructor(t,e){this._name=t;const n=e.shape&&e.shape.ints?e.shape.ints:null;this._type=new caffe2.TensorType(e.dataType,new caffe2.TensorShape(n)),this._values=e.values||null,this._scale=e.Y_scale?e.Y_scale.f:0,this._zeroPoint=e.Y_zero_point?e.Y_zero_point.i:0}get name(){return this._name}get type(){return this._type}get kind(){return"Initializer"}get quantization(){return 0!=this._scale||0!=this._zeroPoint?this._scale.toString()+" * "+(0==this._zeroPoint?"q":"(q - "+this._zeroPoint.toString()+")"):null}get state(){return this._context().state}get value(){const t=this._context();return t.state?null:(t.limit=Number.MAX_SAFE_INTEGER,this._decode(t,0))}toString(){const t=this._context();if(t.state)return"";t.limit=1e4;const e=this._decode(t,0);return caffe2.Tensor._stringify(e,"","    ")}_context(){const t={state:null,index:0,count:0};if(!this._values)return t.state="Tensor data is empty.",t;if(void 0===this._values.floats)return t.state="Tensor data is too large to load in Chrome.",t;switch(this._type.dataType){case"float32":t.data=this._values.floats;break;case"boolean":t.data=this._values.ints;break;case"int8":t.data=new Int8Array(this._values.s);break;case"int32":t.data=this._values.ints;break;default:return t.state="Unknown data type.",t}return t.shape=this._type.shape.dimensions,t.dataType=this._type.dataType,t}_decode(t,e){const n=[],a=t.shape[e];if(e==t.shape.length-1)for(let e=0;e<a;e++){if(t.count>t.limit)return n.push("..."),n;switch(t.dataType){case"float32":n.push(t.data[t.index]);break;case"boolean":n.push(0!=t.data[t.index]);break;case"int8":case"int32":n.push(t.data[t.index]);break;default:t.state="Unknown data type."}t.index++,t.count++}else for(let i=0;i<a;i++){if(t.count>t.limit)return n.push("..."),n;n.push(this._decode(t,e+1))}return n}static _stringify(t,e,n){if(Array.isArray(t)){const a=[];a.push(e+"[");const i=t.map((t=>caffe2.Tensor._stringify(t,e+n,n)));return i.length>0&&a.push(i.join(",\n")),a.push(e+"]"),a.join("\n")}return"string"==typeof t?e+t:t==1/0?e+"Infinity":t==-1/0?e+"-Infinity":isNaN(t)?e+"NaN":e+t.toString()}},caffe2.TensorType=class{constructor(t,e){this._dataType=t,this._shape=e}get dataType(){return this._dataType||"?"}get shape(){return this._shape}toString(){return this.dataType+this._shape.toString()}},caffe2.TensorShape=class{constructor(t){this._dimensions=t}get dimensions(){return this._dimensions}toString(){return this._dimensions?"["+this._dimensions.map((t=>t.toString())).join(",")+"]":""}},caffe2.Metadata=class{static open(t){return caffe2.Metadata._metadata?Promise.resolve(caffe2.Metadata._metadata):t.request(null,"caffe2-metadata.json","utf-8").then((t=>(caffe2.Metadata._metadata=new caffe2.Metadata(t),caffe2.Metadata._metadata))).catch((()=>(caffe2.Metadata._metadata=new caffe2.Metadata(null),caffe2.Metadata._metadata)))}constructor(t){if(this._map={},this._attributeCache={},t){const e=JSON.parse(t);if(e)for(const t of e)t.name&&t.schema&&(t.schema.name=t.name,this._map[t.name]=t.schema)}}type(t){return this._map[t]||null}attribute(t,e){let n=this._attributeCache[t];if(!n){n={};const e=this.type(t);if(e&&e.attributes&&e.attributes.length>0)for(const t of e.attributes)n[t.name]=t;this._attributeCache[t]=n}return n[e]||null}},caffe2.Error=class extends Error{constructor(t){super(t),this.name="Error loading Caffe2 model."}},"undefined"!=typeof module&&"object"==typeof module.exports&&(module.exports.ModelFactory=caffe2.ModelFactory);