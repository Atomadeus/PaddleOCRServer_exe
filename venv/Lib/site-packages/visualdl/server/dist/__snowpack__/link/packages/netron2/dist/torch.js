var torch=torch||{},base=base||require("./base"),long=long||{Long:require("long")};torch.ModelFactory=class{match(t){if("t7"==t.identifier.split(".").pop().toLowerCase()){const n=t.buffer;return!(n.length>=1&&n[0]>58)}return!1}open(t,n){return torch.Metadata.open(n).then((i=>{const e=t.identifier;try{let s=new torch.T7Reader(t.buffer,(t=>(!t||"nn.JointTrainModule"==t||t.startsWith("nn.MSDNet_")||t.startsWith("onmt.")||n.exception(new torch.Error("Unknown type '"+t+"' in '"+e+"'."),!1),null))).read();return s&&Array.isArray(s)&&2==s.length&&s[0].__type__&&!s[1].__type__&&(s=s[0]),new torch.Model(i,s)}catch(t){const n=t&&t.message?t.message:t.toString();throw new torch.Error(n.replace(/\.$/,"")+" in '"+e+"'.")}}))}},torch.Model=class{constructor(t,n){this._graphs=[],this._graphs.push(new torch.Graph(t,n))}get graphs(){return this._graphs}get format(){return"Torch v7"}},torch.Graph=class{constructor(t,n){this._inputs=[],this._outputs=[],this._nodes=[],this._groups="false",Object.prototype.hasOwnProperty.call(n,"model")&&(n=n.model);const i=[],e=[];this._loadModule(t,n,[],"",i,e),this._inputs=this._inputs.concat(i.map(((t,n)=>new torch.Parameter("input"+(0!=n?(n+1).toString():""),!0,[t])))),this._outputs=this._outputs.concat(e.map(((t,n)=>new torch.Parameter("output"+(0!=n?(n+1).toString():""),!0,[t]))))}get inputs(){return this._inputs}get outputs(){return this._outputs}get nodes(){return this._nodes}get groups(){return this._groups}_loadModule(t,n,i,e,s,r){switch(i.length>0&&(this._groups=!0),n.__type__){case"nn.Sequential":{i.push(e);let o=s,a=[];const h=n.modules.length;let c=0;for(const e of n.modules)c==h-1&&(a=r),this._loadModule(t,e,i,c.toString(),o,a),o=a,a=[],c++;i.pop();break}case"nn.Parallel":case"nn.ParallelTable":case"nn.JointTrain":{i.push(e);let o=[],a=[],h=0;for(const e of n.modules){const n=[].concat(s),c=[].concat(r);this._loadModule(t,e,i,h.toString(),n,c),0==s.length&&(o=o.concat(n)),0==r.length&&(a=a.concat(c)),h++}s=s.concat(o);for(const t of a)r.push(t);i.pop();break}case"nn.Concat":case"nn.ConcatTable":{const o=e;0==s.length&&s.push(new torch.Argument(i.join("/")+":"+e+":in",null,null));let a=[],h=0;for(const e of n.modules){const n=s.map((t=>t)),r=[];this._loadModule(t,e,i,o+"."+h.toString(),n,r),a=a.concat(r),h++}delete n.modules,delete n.dimension,this._createNode(t,n,i,e,a,r);break}case"nn.Inception":delete n.modules,delete n.module,delete n.transfer,delete n.pool,this._createNode(t,n,i,e,s,r);break;default:this._createNode(t,n,i,e,s,r)}}_createNode(t,n,i,e,s,r){this._nodes.push(new torch.Node(t,n,i,e,s,r))}},torch.Parameter=class{constructor(t,n,i){this._name=t,this._visible=n,this._arguments=i}get name(){return this._name}get visible(){return this._visible}get arguments(){return this._arguments}},torch.Argument=class{constructor(t,n,i){if("string"!=typeof t)throw new torch.Error("Invalid argument identifier '"+JSON.stringify(t)+"'.");this._name=t,this._type=n,this._initializer=i}get name(){return this._name}get type(){return this._initializer?this._initializer.type:this._type}get initializer(){return this._initializer}},torch.Node=class{constructor(t,n,i,e,s,r){this._metadata=t,this._group=i.join("/"),n.name&&"string"==typeof n.name?(this._name=n.name,delete n.name):this._name=this._group?this._group+":"+e:e,this._type=n.__type__||"nn.Module";let o=[];for(const t of Object.keys(n)){const i=n[t];if(i&&i.__type__&&i.__type__.startsWith("torch.")&&i.__type__.endsWith("Storage")){const e=[];i.reset();for(let t=0;t<i.size;t++)e.push(i.read());n[t]=e}}switch(delete n.iSize,delete n.finput,delete n.fgradInput,delete n.output,delete n.gradInput,delete n.gradWeight,delete n.gradBias,delete n.grad_tmp,delete n.scaleT,delete n._input,delete n._output,delete n._gradInput,delete n._gradOutput,delete n.buffer,delete n.buffer2,delete n.tmp_in,delete n.tmp_out,delete n.accUpdateGradParameters,this._type){case"nn.Linear":delete n.addBuffer;break;case"nn.Normalize":case"nn.Normalize2":delete n.addBuffer,delete n.normp,delete n.norm;break;case"cudnn.SpatialConvolution":case"cudnn.SpatialFullConvolution":case"nn.SpatialConvolution":case"nn.SpatialConvolutionMM":case"nn.SpatialDilatedConvolution":case"nn.SpatialFullConvolution":delete n.ones,delete n.input_slice,delete n.output_slice,delete n.convDescData,this._updateSize(n,"adj"),this._updateSize(n,"d"),this._updateSize(n,"dilation"),this._updateSize(n,"k"),this._updateSize(n,"pad");break;case"cudnn.BatchNormalization":case"cudnn.SpatialBatchNormalization":case"nn.BatchNormalization":case"nn.SpatialBatchNormalization":case"nn.InstanceNormalization":delete n.save_mean,delete n.save_std,delete n.gradWeight,delete n.normalized,delete n.centered,delete n.bn;break;case"nn.SpatialCrossMapLRN":delete n.scale;break;case"cudnn.SpatialMaxPooling":case"cudnn.SpatialAveragePooling":case"inn.SpatialMaxPooling":case"nn.SpatialMaxPooling":case"nn.SpatialAveragePooling":delete n.indices,this._updateSize(n,"pad"),this._updateSize(n,"d"),this._updateSize(n,"k");break;case"nn.SpatialZeroPadding":case"nn.SpatialReflectionPadding":case"nn.SpatialReplicationPadding":this._updateBox(n,"pad");break;case"nn.Dropout":delete n.noise;break;case"nn.gModule":delete n.forwardnodes,delete n.backwardnodes;break;case"nn.StereoJoin":delete n.output_L}if(this._attributes=[],n.__type__)for(const t of Object.keys(n)){if("__type__"==t||"_type"==t)continue;const i=n[t];Array.isArray(i)&&i.every((t=>t&&t.__type__&&t.__type__.startsWith("nn.")))||(i.__type__&&i.__type__.startsWith("torch.")&&i.__type__.endsWith("Tensor")?o.push(new torch.Parameter(t,!0,[new torch.Argument(t,null,new torch.Tensor(i))])):"modules"==t||i.__type__&&"Function"!=i.__type__||this._attributes.push(new torch.Attribute(this._metadata,this._type,t,i)))}this._inputs=[],0==s.length&&this._name&&s.push(new torch.Argument(this._name+":in",null,null)),this._inputs.push(new torch.Parameter("input",!0,s)),0==r.length&&this._name&&r.push(new torch.Argument(this._name,null,null)),this._outputs=[],this._outputs.push(new torch.Parameter("output",!0,r)),o=o.filter((t=>"weight"!=t.name||(this._inputs.push(t),!1))),o=o.filter((t=>"bias"!=t.name||(this._inputs.push(t),!1))),this._inputs=this._inputs.concat(o)}get name(){return this._name}get type(){return this._type}get group(){return this._group}get metadata(){return this._metadata.type(this._type)}get attributes(){return this._attributes}get inputs(){return this._inputs}get outputs(){return this._outputs}_updateSize(t,n){Object.prototype.hasOwnProperty.call(t,n+"W")&&Object.prototype.hasOwnProperty.call(t,n+"H")&&(t[n]=[t[n+"W"],t[n+"H"]],delete t[n+"W"],delete t[n+"H"])}_updateBox(t,n){Object.prototype.hasOwnProperty.call(t,n+"_t")&&Object.prototype.hasOwnProperty.call(t,n+"_r")&&Object.prototype.hasOwnProperty.call(t,n+"_b")&&Object.prototype.hasOwnProperty.call(t,n+"_l")&&(t[n]=[t[n+"_t"],t[n+"_r"],t[n+"_b"],t[n+"_l"]],delete t[n+"_t"],delete t[n+"_r"],delete t[n+"_b"],delete t[n+"_l"])}},torch.Attribute=class{constructor(t,n,i,e){this._name=i,this._value=e,"train"==i&&(this._visible=!1);const s=t.attribute(n,i);s&&(Object.prototype.hasOwnProperty.call(s,"visible")?this._visible=s.visible:Object.prototype.hasOwnProperty.call(s,"default")&&JSON.stringify(s.default)==JSON.stringify(this._value)&&(this._visible=!1))}get name(){return this._name}get value(){return this._value}get visible(){return 0!=this._visible}},torch.Tensor=class{constructor(t){this._type=new torch.TensorType(t),this._storage=t.storage}get type(){return this._type}get state(){return this._context().state||null}get value(){const t=this._context();return t.state?null:(t.limit=Number.MAX_SAFE_INTEGER,this._decode(t,0))}toString(){const t=this._context();if(t.state)return"";t.limit=1e3;const n=this._decode(t,0);return JSON.stringify(n,null,4)}_context(){const t={state:null,index:0,count:0};if(!this._storage||!this._storage.reader)return t.state="Tensor data is empty.",t;switch(this._type.dataType){case"uint8":case"int8":case"int16":case"int32":case"int64":case"float32":case"float64":break;default:t.state="Tensor data type is not implemented."}return t.dimensions=this._type.shape.dimensions,t.dimensions||0!=t.dimensions.length?(t.storage=this._storage,t.storage.reset(),t):(t.state="Tensor has no dimensions.",t)}_decode(t,n){const i=[],e=t.dimensions[n];if(n==t.dimensions.length-1)for(let n=0;n<e;n++){if(t.count>t.limit)return i.push("..."),i;i.push(t.storage.read()),t.index++,t.count++}else for(let s=0;s<e;s++){if(t.count>t.limit)return i.push("..."),i;i.push(this._decode(t,n+1))}return i}},torch.TensorType=class{constructor(t){this._dataType=t.dataType,this._shape=new torch.TensorShape(t.size)}get dataType(){return this._dataType}get shape(){return this._shape}toString(){return(this.dataType||"?")+this._shape.toString()}},torch.TensorShape=class{constructor(t){this._dimensions=t}get dimensions(){return this._dimensions}toString(){return this._dimensions?0==this._dimensions.length?"":"["+this._dimensions.map((t=>t.toString())).join(",")+"]":""}},torch.Metadata=class{static open(t){return torch.Metadata._metadata?Promise.resolve(torch.Metadata._metadata):t.request(null,"torch-metadata.json","utf-8").then((t=>(torch.Metadata._metadata=new torch.Metadata(t),torch.Metadata._metadata))).catch((()=>(torch.Metadata._metadata=new torch.Metadata(null),torch.Metadata._metadata)))}constructor(t){if(this._map={},this._attributeCache={},t){const n=JSON.parse(t);if(n)for(const t of n)t.schema.name=t.name,this._map[t.name]=t.schema}}type(t){return this._map[t]||null}attribute(t,n){let i=this._attributeCache[t];if(!i){i={};const n=this.type(t);if(n&&n.attributes&&n.attributes.length>0)for(const t of n.attributes)i[t.name]=t;this._attributeCache[t]=i}return i[n]||null}},torch.Error=class extends Error{constructor(t){super(t),this.name="Error loading Torch model."}},torch.T7Reader=class{constructor(t,n){if(this._callback=n,this._memo=new Map,this._registry={},this._registry["bnn.Binary"]=function(t){t.nn(this)},this._registry["bnn.SpatialConvolution"]=function(t){t.nn(this)},this._registry["cudnn.BatchNormalization"]=function(t){t.nn(this)},this._registry["cudnn.ReLU"]=function(t){t.nn(this)},this._registry["cudnn.Sigmoid"]=function(t){t.nn(this)},this._registry["cudnn.SoftMax"]=function(t){t.nn(this)},this._registry["cudnn.LogSoftMax"]=function(t){t.nn(this)},this._registry["cudnn.SpatialAveragePooling"]=function(t){t.nn(this)},this._registry["cudnn.SpatialBatchNormalization"]=function(t){t.nn(this)},this._registry["cudnn.SpatialConvolution"]=function(t){t.nn(this)},this._registry["cudnn.SpatialFullConvolution"]=function(t){t.nn(this)},this._registry["cudnn.SpatialMaxPooling"]=function(t){t.nn(this)},this._registry["cudnn.SpatialSoftMax"]=function(t){t.nn(this)},this._registry["cudnn.Tanh"]=function(t){t.nn(this)},this._registry["cudnn.VolumetricAveragePooling"]=function(t){t.nn(this)},this._registry["cudnn.VolumetricBatchNormalization"]=function(t){t.nn(this)},this._registry["cudnn.VolumetricConvolution"]=function(t){t.nn(this)},this._registry["cudnn.VolumetricMaxPooling"]=function(t){t.nn(this)},this._registry.Dict=function(t){t.nn(this)},this._registry["inn.ConstAffine"]=function(t){t.nn(this)},this._registry["inn.SpatialMaxPooling"]=function(t){t.nn(this)},this._registry["nn.Abs"]=function(t){t.nn(this)},this._registry["nn.AddConstant"]=function(t){t.nn(this)},this._registry["nn.BatchNormalization"]=function(t){t.nn(this)},this._registry["nn.BilinearSamplerBHWD"]=function(t){t.nn(this)},this._registry["nn.BinActiveZ"]=function(t){t.nn(this)},this._registry["nn.BCECriterion"]=function(t){t.nn(this)},this._registry["nn.CMul"]=function(t){t.nn(this)},this._registry["nn.CAddTable"]=function(t){t.nn(this)},this._registry["nn.CDivTable"]=function(t){t.nn(this)},this._registry["nn.CMulTable"]=function(t){t.nn(this)},this._registry["nn.CSubTable"]=function(t){t.nn(this)},this._registry["nn.Concat"]=function(t){t.nn(this)},this._registry["nn.Copy"]=function(t){t.nn(this)},this._registry["nn.ConcatTable"]=function(t){t.nn(this)},this._registry["nn.Contiguous"]=function(t){t.nn(this)},this._registry["nn.Constant"]=function(t){t.nn(this)},this._registry["nn.CostVolMulti"]=function(t){t.nn(this)},this._registry["nn.DepthConcat"]=function(t){t.nn(this)},this._registry["nn.Dropout"]=function(t){t.nn(this)},this._registry["nn.Exp"]=function(t){t.nn(this)},this._registry["nn.ExpOut"]=function(t){t.nn(this)},this._registry["nn.FlattenTable"]=function(t){t.nn(this)},this._registry["nn.GenNoise"]=function(t){t.nn(this)},this._registry["nn.Identity"]=function(t){t.nn(this)},this._registry["nn.Index"]=function(t){t.nn(this)},this._registry["nn.Inception"]=function(t){t.nn(this)},this._registry["nn.InstanceNormalization"]=function(t){t.nn(this)},this._registry["nn.JoinTable"]=function(t){t.nn(this)},this._registry["nn.JointTrain"]=function(t){t.nn(this)},this._registry["nn.KeypointCoordinate"]=function(t){t.nn(this)},this._registry["nn.LeakyReLU"]=function(t){t.nn(this)},this._registry["nn.Linear"]=function(t){t.nn(this)},this._registry["nn.LinearNoBias"]=function(t){t.nn(this)},this._registry["nn.LogSoftMax"]=function(t){t.nn(this)},this._registry["nn.LookupTable"]=function(t){t.nn(this)},this._registry["nn.LSTM"]=function(t){t.nn(this)},this._registry["nn.MaskZero"]=function(t){t.nn(this)},this._registry["nn.MapTable"]=function(t){t.nn(this)},this._registry["nn.Max"]=function(t){t.nn(this)},this._registry["nn.Mean"]=function(t){t.nn(this)},this._registry["nn.Min"]=function(t){t.nn(this)},this._registry["nn.MulConstant"]=function(t){t.nn(this)},this._registry["nn.MM"]=function(t){t.nn(this)},this._registry["nn.MSECriterion"]=function(t){t.nn(this)},this._registry["nn.Narrow"]=function(t){t.nn(this)},this._registry["nn.NarrowTable"]=function(t){t.nn(this)},this._registry["nn.Normalize"]=function(t){t.nn(this)},this._registry["nn.Normalize2"]=function(t){t.nn(this)},this._registry["nn.NoiseFill"]=function(t){t.nn(this)},this._registry["nn.Padding"]=function(t){t.nn(this)},this._registry["nn.Parallel"]=function(t){t.nn(this)},this._registry["nn.ParallelCriterion"]=function(t){t.nn(this)},this._registry["nn.ParallelTable"]=function(t){t.nn(this)},this._registry["nn.PixelShuffle"]=function(t){t.nn(this)},this._registry["nn.Power"]=function(t){t.nn(this)},this._registry["nn.PReLU"]=function(t){t.nn(this)},this._registry["nn.Recursor"]=function(t){t.nn(this)},this._registry["nn.ReLU"]=function(t){t.nn(this)},this._registry["nn.Replicate"]=function(t){t.nn(this)},this._registry["nn.Reshape"]=function(t){t.nn(this)},this._registry["nn.ShaveImage"]=function(t){t.nn(this)},this._registry["nn.Select"]=function(t){t.nn(this)},this._registry["nn.SelectTable"]=function(t){t.nn(this)},this._registry["nn.Sequencer"]=function(t){t.nn(this)},this._registry["nn.Sequential"]=function(t){t.nn(this)},this._registry["nn.Sigmoid"]=function(t){t.nn(this)},this._registry["nn.Sum"]=function(t){t.nn(this)},this._registry["nn.SoftMax"]=function(t){t.nn(this)},this._registry["nn.SpatialAveragePooling"]=function(t){t.nn(this)},this._registry["nn.SpatialBatchNormalization"]=function(t){t.nn(this)},this._registry["nn.SpatialConvolution"]=function(t){t.nn(this)},this._registry["nn.SpatialConvolutionMM"]=function(t){t.nn(this)},this._registry["nn.SpatialCrossMapLRN"]=function(t){t.nn(this)},this._registry["nn.SpatialDilatedConvolution"]=function(t){t.nn(this)},this._registry["nn.SpatialDropout"]=function(t){t.nn(this)},this._registry["nn.SpatialFractionalMaxPooling"]=function(t){t.nn(this)},this._registry["nn.SpatialFullConvolution"]=function(t){t.nn(this)},this._registry["nn.SpatialLPPooling"]=function(t){t.nn(this)},this._registry["nn.SpatialMaxPooling"]=function(t){t.nn(this)},this._registry["nn.SpatialReflectionPadding"]=function(t){t.nn(this)},this._registry["nn.SpatialReplicationPadding"]=function(t){t.nn(this)},this._registry["nn.SpatialSoftMax"]=function(t){t.nn(this)},this._registry["nn.SpatialSubtractiveNormalization"]=function(t){t.nn(this)},this._registry["nn.SpatialUpSamplingBilinear"]=function(t){t.nn(this)},this._registry["nn.SpatialUpSamplingNearest"]=function(t){t.nn(this)},this._registry["nn.SpatialZeroPadding"]=function(t){t.nn(this)},this._registry["nn.SplitTable"]=function(t){t.nn(this)},this._registry["nn.Squeeze"]=function(t){t.nn(this)},this._registry["nn.Square"]=function(t){t.nn(this)},this._registry["nn.Sqrt"]=function(t){t.nn(this)},this._registry["nn.StereoJoin"]=function(t){t.nn(this)},this._registry["nn.Tanh"]=function(t){t.nn(this)},this._registry["nn.Transpose"]=function(t){t.nn(this)},this._registry["nn.TotalVariation"]=function(t){t.nn(this)},this._registry["nn.Unpool"]=function(t){t.nn(this)},this._registry["nn.View"]=function(t){t.nn(this)},this._registry["nn.gModule"]=function(t){t.nn(this)},this._registry["nngraph.Node"]=function(t){t.nn(this)},this._registry["graph.Edge"]=function(t){t.nn(this)},this._registry["graph.Graph"]=function(t){t.nn(this)},this._registry["torch.ByteTensor"]=function(t){t.tensor(this,"uint8")},this._registry["torch.CharTensor"]=function(t){t.tensor(this,"int8")},this._registry["torch.ShortTensor"]=function(t){t.tensor(this,"int16")},this._registry["torch.IntTensor"]=function(t){t.tensor(this,"int32")},this._registry["torch.LongTensor"]=function(t){t.tensor(this,"int64")},this._registry["torch.FloatTensor"]=function(t){t.tensor(this,"float32")},this._registry["torch.DoubleTensor"]=function(t){t.tensor(this,"float64")},this._registry["torch.CudaByteTensor"]=function(t){t.tensor(this,"uint8")},this._registry["torch.CudaCharTensor"]=function(t){t.tensor(this,"int8")},this._registry["torch.CudaShortTensor"]=function(t){t.tensor(this,"int16")},this._registry["torch.CudaIntTensor"]=function(t){t.tensor(this,"int32")},this._registry["torch.CudaLongTensor"]=function(t){t.tensor(this,"int64")},this._registry["torch.CudaTensor"]=function(t){t.tensor(this,"float32")},this._registry["torch.CudaDoubleTensor"]=function(t){t.tensor(this,"float64")},this._registry["torch.ByteStorage"]=function(t){t.storage(this,"uint8",1)},this._registry["torch.CharStorage"]=function(t){t.storage(this,"int8",1)},this._registry["torch.ShortStorage"]=function(t){t.storage(this,"int16",2)},this._registry["torch.IntStorage"]=function(t){t.storage(this,"int32",4)},this._registry["torch.LongStorage"]=function(t){t.storage(this,"int64",8)},this._registry["torch.FloatStorage"]=function(t){t.storage(this,"float32",4)},this._registry["torch.DoubleStorage"]=function(t){t.storage(this,"float64",8)},this._registry["torch.CudaByteStorage"]=function(t){t.storage(this,"uint8",1)},this._registry["torch.CudaCharStorage"]=function(t){t.storage(this,"int8",1)},this._registry["torch.CudaShortStorage"]=function(t){t.storage(this,"int16",2)},this._registry["torch.CudaIntStorage"]=function(t){t.storage(this,"int32",4)},this._registry["torch.CudaLongStorage"]=function(t){t.storage(this,"int64",8)},this._registry["torch.CudaIntStorage"]=function(t){t.storage(this,"int32",4)},this._registry["torch.CudaStorage"]=function(t){t.storage(this,"float32",4)},this._registry["torch.CudaFloatStorage"]=function(t){t.storage(this,"float64",8)},this._registry["w2nn.AuxiliaryLossTable"]=function(t){t.nn(this)},this._registry["w2nn.InplaceClip01"]=function(t){t.nn(this)},this._registry["w2nn.ScaleTable"]=function(t){t.nn(this)},0==t.length)throw new torch.Error("File is empty.");t[0]<=8?this._reader=new torch.BinaryReader(t):(this._reader=new torch.TextReader(t),this._reader.int32(),this._reader.reset())}read(){const t=this.int32();switch(t){case 0:return null;case 1:return this.float64();case 2:return this.string();case 3:return this.table();case 4:return this.object();case 5:return this.boolean();case 6:case 7:case 8:return this.function();default:throw new torch.Error("File format has invalid type '"+t+"'.")}}boolean(){return this._reader.boolean()}bytes(t){return this._reader.bytes(t)}int32(){return this._reader.int32()}int64(){return this._reader.int64()}int64s(t){return this._reader.int64s(t)}float64(){return this._reader.float64()}string(){return this._reader.string()}object(){const t=this.int32();if(this._memo.has(t))return this._memo.get(t);let n=this.string(),i=null;n.startsWith("V ")?(i=this.string(),n=Number(n.split(" ")[1])):(i=n,n=0);const e={__type__:i};this._memo.set(t,e);let s=this._registry[i];return s?s.apply(e,[this,n]):(s=this._callback(i),s&&s.apply(e,[this,n]),this.nn(e)),e}table(){const t=this.int32();if(this._memo.has(t))return this._memo.get(t);const n={};this._memo.set(t,n);const i=this.int32();let e=!0,s=0;for(let t=0;t<i;t++){const t=this.read(),i=this.read();n[t]=i,Number.isInteger(t)&&t>=0?s+=t:e=!1}const r=Object.keys(n).length;if(e&&r*(r+1)==2*s){const i=[];for(let t=0;t<r;t++){let e=n[t+1];e==n&&(e=i),i.push(e)}return this._memo.set(t,i),i}return n}function(){const t=this.int32();if(this._memo.has(t))return this._memo.get(t);const n=this.int32(),i={__type__:"Function",size:n,dumped:this.bytes(n),upvalues:this.read()};return this._memo.set(t,i),i}nn(t){const n=this.read();if(null!=n)for(const i of Object.keys(n))t[i]=n[i]}tensor(t,n){const i=this.int32();t.dataType=n,t.size=this.int64s(i),t.stride=this.int64s(i),t.storage_offset=this.int64()-1,t.storage=this.read()}storage(t,n,i){t.dataType=n,t.itemSize=i,t.size=this.int64(),t.reader=this._reader.storage(t.size,t.itemSize,n),t.reset=function(){this.reader.reset()},t.read=function(){switch(n){case"uint8":return this.reader.byte();case"int8":return this.reader.int8();case"int16":return this.reader.int16();case"int32":return this.reader.int32();case"int64":return this.reader.int64();case"float32":return this.reader.float32();case"float64":return this.reader.float64()}return null}}},torch.BinaryReader=class{constructor(t){this._buffer=t,this._dataView=new DataView(this._buffer.buffer,this._buffer.byteOffset,this._buffer.byteLength),this._position=0,this._textDecoder=new TextDecoder("ascii")}reset(){this._position=0}skip(t){if(this._position+=t,this._position>this._buffer.length)throw new torch.Error("Expected "+(this._position-this._buffer.length)+" more bytes. The file might be corrupted. Unexpected end of file.")}boolean(){return 1==this.int32()}bytes(t){const n=this._position;return this.skip(t),this._buffer.subarray(n,this._position)}int8(){const t=this._position;return this.skip(1),this._dataView.getInt8(t,!0)}int16(){const t=this._position;return this.skip(2),this._dataView.getInt16(t,!0)}int32(){const t=this._position;return this.skip(4),this._dataView.getInt32(t,!0)}int64(){const t=this._position;this.skip(8);const n=this._dataView.getUint32(t,!0),i=this._dataView.getUint32(t+4,!0);return new long.Long(n,i,!1).toNumber()}int64s(t){const n=[];for(let i=0;i<t;i++)n.push(this.int64());return n}float32(){const t=this._position;return this.skip(4),this._dataView.getFloat32(t,!0)}float64(){const t=this._position;return this.skip(8),this._dataView.getFloat64(t,!0)}string(){return this._textDecoder.decode(this.bytes(this.int32()))}storage(t,n){return new torch.BinaryReader(this.bytes(t*n))}},torch.TextReader=class{constructor(t,n){this._buffer=t,this._position=0,this._dataView=new DataView(this._buffer.buffer,this._buffer.byteOffset,this._buffer.byteLength),this._textDecoder=new TextDecoder("ascii"),this._separator=n||10}reset(){this._position=0}line(t){const n=this._position;for(;this._position<this._buffer.length&&t>-1;){if(this._buffer[this._position++]==this._separator)return this._buffer.slice(n,this._position-1);if(this._position==this._buffer.length)return this._buffer.slice(n,this._position);t--}throw new torch.Error("Line exceeded maximum length.")}boolean(){return 1==this.int32()}bytes(t){return this.line(t)}int8(){return this.int64()}int16(){return this.int64()}int32(){return this.int64()}int64(){const t=this._textDecoder.decode(this.line(20)),n=Number.parseInt(t,10);if(Number.isNaN(t-n))throw new torch.Error("Couldn't parse int64 '"+t+"'.");return n}int64s(t){const n=[];if(t>0){const t=this._textDecoder.decode(this.line(Number.MAX_SAFE_INTEGER));for(const i of t.split(" ")){const t=Number.parseInt(i,10);if(Number.isNaN(i-t))throw new torch.Error("Couldn't parse int64 '"+i+"'.");n.push(t)}}return n}float32(){return this.float64()}float64(){const t=this._textDecoder.decode(this.line(24));if(t.startsWith("-nan"))return NaN;if(t.startsWith("nan"))return NaN;if(t.startsWith("inf"))return 1/0;if(t.startsWith("-inf"))return-1/0;const n=Number.parseFloat(t);if(Number.isNaN(t-n))throw new torch.Error("Couldn't parse float '"+t+"'.");return n}string(){const t=this.int32();if(0==t)return"";const n=this.line(t),i=this._textDecoder.decode(n);if(t!=i.length)throw torch.Error("Invalid text length.");return i}storage(t,n,i){if(t<=0)throw new torch.Error("Unsupported storage size '"+t+"'.");if("uint8"===i){const n=this._position;this._position+=t;const i=this._buffer.slice(n,this._position);return this.line(0),new torch.BinaryReader(i)}const e=this.line(Number.MAX_SAFE_INTEGER);return new torch.TextReader(e,32)}},"undefined"!=typeof module&&"object"==typeof module.exports&&(module.exports.ModelFactory=torch.ModelFactory);