var $root=protobuf.get("bigdl");$root.com={},$root.com.intel={},$root.com.intel.analytics={},$root.com.intel.analytics.bigdl={},$root.com.intel.analytics.bigdl.serialization={},$root.com.intel.analytics.bigdl.serialization.BigDLModule=class{constructor(){this.subModules=[],this.preModules=[],this.nextModules=[],this.attr={},this.parameters=[],this.inputScales=[],this.outputScales=[],this.weightScales=[]}static decode(t,a){const e=new $root.com.intel.analytics.bigdl.serialization.BigDLModule,i=t.next(a);for(;t.end(i);){const a=t.uint32();switch(a>>>3){case 1:e.name=t.string();break;case 2:e.subModules.push($root.com.intel.analytics.bigdl.serialization.BigDLModule.decode(t,t.uint32()));break;case 3:e.weight=$root.com.intel.analytics.bigdl.serialization.BigDLTensor.decode(t,t.uint32());break;case 4:e.bias=$root.com.intel.analytics.bigdl.serialization.BigDLTensor.decode(t,t.uint32());break;case 5:e.preModules.push(t.string());break;case 6:e.nextModules.push(t.string());break;case 7:e.moduleType=t.string();break;case 8:t.pair(e.attr,(()=>t.string()),(()=>$root.com.intel.analytics.bigdl.serialization.AttrValue.decode(t,t.uint32())));break;case 9:e.version=t.string();break;case 10:e.train=t.bool();break;case 11:e.namePostfix=t.string();break;case 12:e.id=t.int32();break;case 13:e.inputShape=$root.com.intel.analytics.bigdl.serialization.Shape.decode(t,t.uint32());break;case 14:e.outputShape=$root.com.intel.analytics.bigdl.serialization.Shape.decode(t,t.uint32());break;case 15:e.hasParameters=t.bool();break;case 16:e.parameters.push($root.com.intel.analytics.bigdl.serialization.BigDLTensor.decode(t,t.uint32()));break;case 17:e.isMklInt8Enabled=t.bool();break;case 18:e.inputDimMasks=t.int32();break;case 19:e.inputScales.push($root.com.intel.analytics.bigdl.serialization.AttrValue.decode(t,t.uint32()));break;case 20:e.outputDimMasks=t.int32();break;case 21:e.outputScales.push($root.com.intel.analytics.bigdl.serialization.AttrValue.decode(t,t.uint32()));break;case 22:e.weightDimMasks=t.int32();break;case 23:e.weightScales.push($root.com.intel.analytics.bigdl.serialization.AttrValue.decode(t,t.uint32()));break;default:t.skipType(7&a)}}return e}},$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.name="",$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.weight=null,$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.bias=null,$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.moduleType="",$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.version="",$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.train=!1,$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.namePostfix="",$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.id=0,$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.inputShape=null,$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.outputShape=null,$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.hasParameters=!1,$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.isMklInt8Enabled=!1,$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.inputDimMasks=0,$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.outputDimMasks=0,$root.com.intel.analytics.bigdl.serialization.BigDLModule.prototype.weightDimMasks=0,$root.com.intel.analytics.bigdl.serialization.VarFormat={EMPTY_FORMAT:0,DEFAULT:1,ONE_D:2,IN_OUT:3,OUT_IN:4,IN_OUT_KW_KH:5,OUT_IN_KW_KH:6,GP_OUT_IN_KW_KH:7,GP_IN_OUT_KW_KH:8,OUT_IN_KT_KH_KW:9},$root.com.intel.analytics.bigdl.serialization.InitMethodType={EMPTY_INITIALIZATION:0,RANDOM_UNIFORM:1,RANDOM_UNIFORM_PARAM:2,RANDOM_NORMAL:3,ZEROS:4,ONES:5,CONST:6,XAVIER:7,BILINEARFILLER:8},$root.com.intel.analytics.bigdl.serialization.RegularizerType={L1L2Regularizer:0,L1Regularizer:1,L2Regularizer:2},$root.com.intel.analytics.bigdl.serialization.InputDataFormat={NCHW:0,NHWC:1},$root.com.intel.analytics.bigdl.serialization.TensorType={DENSE:0,QUANT:1},$root.com.intel.analytics.bigdl.serialization.InitMethod=class{constructor(){this.data=[]}static decode(t,a){const e=new $root.com.intel.analytics.bigdl.serialization.InitMethod,i=t.next(a);for(;t.end(i);){const a=t.uint32();switch(a>>>3){case 1:e.methodType=t.int32();break;case 2:e.data=t.doubles(e.data,a);break;default:t.skipType(7&a)}}return e}},$root.com.intel.analytics.bigdl.serialization.InitMethod.prototype.methodType=0,$root.com.intel.analytics.bigdl.serialization.BigDLTensor=class{constructor(){this.size=[],this.stride=[]}static decode(t,a){const e=new $root.com.intel.analytics.bigdl.serialization.BigDLTensor,i=t.next(a);for(;t.end(i);){const a=t.uint32();switch(a>>>3){case 1:e.datatype=t.int32();break;case 2:e.size=t.array(e.size,(()=>t.int32()),a);break;case 3:e.stride=t.array(e.stride,(()=>t.int32()),a);break;case 4:e.offset=t.int32();break;case 5:e.dimension=t.int32();break;case 6:e.nElements=t.int32();break;case 7:e.isScalar=t.bool();break;case 8:e.storage=$root.com.intel.analytics.bigdl.serialization.TensorStorage.decode(t,t.uint32());break;case 9:e.id=t.int32();break;case 10:e.tensorType=t.int32();break;default:t.skipType(7&a)}}return e}},$root.com.intel.analytics.bigdl.serialization.BigDLTensor.prototype.datatype=0,$root.com.intel.analytics.bigdl.serialization.BigDLTensor.prototype.offset=0,$root.com.intel.analytics.bigdl.serialization.BigDLTensor.prototype.dimension=0,$root.com.intel.analytics.bigdl.serialization.BigDLTensor.prototype.nElements=0,$root.com.intel.analytics.bigdl.serialization.BigDLTensor.prototype.isScalar=!1,$root.com.intel.analytics.bigdl.serialization.BigDLTensor.prototype.storage=null,$root.com.intel.analytics.bigdl.serialization.BigDLTensor.prototype.id=0,$root.com.intel.analytics.bigdl.serialization.BigDLTensor.prototype.tensorType=0,$root.com.intel.analytics.bigdl.serialization.TensorStorage=class{constructor(){this.float_data=[],this.double_data=[],this.bool_data=[],this.string_data=[],this.int_data=[],this.long_data=[],this.bytes_data=[]}static decode(t,a){const e=new $root.com.intel.analytics.bigdl.serialization.TensorStorage,i=t.next(a);for(;t.end(i);){const a=t.uint32();switch(a>>>3){case 1:e.datatype=t.int32();break;case 2:e.float_data=t.floats(e.float_data,a);break;case 3:e.double_data=t.doubles(e.double_data,a);break;case 4:e.bool_data=t.array(e.bool_data,(()=>t.bool()),a);break;case 5:e.string_data.push(t.string());break;case 6:e.int_data=t.array(e.int_data,(()=>t.int32()),a);break;case 7:e.long_data=t.array(e.long_data,(()=>t.int64()),a);break;case 8:e.bytes_data.push(t.bytes());break;case 9:e.id=t.int32();break;default:t.skipType(7&a)}}return e}},$root.com.intel.analytics.bigdl.serialization.TensorStorage.prototype.datatype=0,$root.com.intel.analytics.bigdl.serialization.TensorStorage.prototype.id=0,$root.com.intel.analytics.bigdl.serialization.Regularizer=class{constructor(){this.regularData=[]}static decode(t,a){const e=new $root.com.intel.analytics.bigdl.serialization.Regularizer,i=t.next(a);for(;t.end(i);){const a=t.uint32();switch(a>>>3){case 1:e.regularizerType=t.int32();break;case 2:e.regularData=t.doubles(e.regularData,a);break;default:t.skipType(7&a)}}return e}},$root.com.intel.analytics.bigdl.serialization.Regularizer.prototype.regularizerType=0,$root.com.intel.analytics.bigdl.serialization.DataType={INT32:0,INT64:1,FLOAT:2,DOUBLE:3,STRING:4,BOOL:5,CHAR:6,SHORT:7,BYTES:8,REGULARIZER:9,TENSOR:10,VARIABLE_FORMAT:11,INITMETHOD:12,MODULE:13,NAME_ATTR_LIST:14,ARRAY_VALUE:15,DATA_FORMAT:16,CUSTOM:17,SHAPE:18},$root.com.intel.analytics.bigdl.serialization.AttrValue=class{constructor(){}get value(){return $root.com.intel.analytics.bigdl.serialization.AttrValue.valueSet=$root.com.intel.analytics.bigdl.serialization.AttrValue.valueSet||new Set(["int32Value","int64Value","floatValue","doubleValue","stringValue","boolValue","regularizerValue","tensorValue","variableFormatValue","initMethodValue","bigDLModuleValue","nameAttrListValue","arrayValue","dataFormatValue","customValue","shape"]),Object.keys(this).find((t=>$root.com.intel.analytics.bigdl.serialization.AttrValue.valueSet.has(t)&&null!=this[t]))}static decode(t,a){const e=new $root.com.intel.analytics.bigdl.serialization.AttrValue,i=t.next(a);for(;t.end(i);){const a=t.uint32();switch(a>>>3){case 1:e.dataType=t.int32();break;case 2:e.subType=t.string();break;case 3:e.int32Value=t.int32();break;case 4:e.int64Value=t.int64();break;case 5:e.floatValue=t.float();break;case 6:e.doubleValue=t.double();break;case 7:e.stringValue=t.string();break;case 8:e.boolValue=t.bool();break;case 9:e.regularizerValue=$root.com.intel.analytics.bigdl.serialization.Regularizer.decode(t,t.uint32());break;case 10:e.tensorValue=$root.com.intel.analytics.bigdl.serialization.BigDLTensor.decode(t,t.uint32());break;case 11:e.variableFormatValue=t.int32();break;case 12:e.initMethodValue=$root.com.intel.analytics.bigdl.serialization.InitMethod.decode(t,t.uint32());break;case 13:e.bigDLModuleValue=$root.com.intel.analytics.bigdl.serialization.BigDLModule.decode(t,t.uint32());break;case 14:e.nameAttrListValue=$root.com.intel.analytics.bigdl.serialization.NameAttrList.decode(t,t.uint32());break;case 15:e.arrayValue=$root.com.intel.analytics.bigdl.serialization.AttrValue.ArrayValue.decode(t,t.uint32());break;case 16:e.dataFormatValue=t.int32();break;case 17:e.customValue=$root.google.protobuf.Any.decode(t,t.uint32());break;case 18:e.shape=$root.com.intel.analytics.bigdl.serialization.Shape.decode(t,t.uint32());break;default:t.skipType(7&a)}}return e}},$root.com.intel.analytics.bigdl.serialization.AttrValue.prototype.dataType=0,$root.com.intel.analytics.bigdl.serialization.AttrValue.prototype.subType="",$root.com.intel.analytics.bigdl.serialization.AttrValue.ArrayValue=class{constructor(){this.i32=[],this.i64=[],this.flt=[],this.dbl=[],this.str=[],this.boolean=[],this.Regularizer=[],this.tensor=[],this.variableFormat=[],this.initMethod=[],this.bigDLModule=[],this.nameAttrList=[],this.dataFormat=[],this.custom=[],this.shape=[]}static decode(t,a){const e=new $root.com.intel.analytics.bigdl.serialization.AttrValue.ArrayValue,i=t.next(a);for(;t.end(i);){const a=t.uint32();switch(a>>>3){case 1:e.size=t.int32();break;case 2:e.datatype=t.int32();break;case 3:e.i32=t.array(e.i32,(()=>t.int32()),a);break;case 4:e.i64=t.array(e.i64,(()=>t.int64()),a);break;case 5:e.flt=t.floats(e.flt,a);break;case 6:e.dbl=t.doubles(e.dbl,a);break;case 7:e.str.push(t.string());break;case 8:e.boolean=t.array(e.boolean,(()=>t.bool()),a);break;case 9:e.Regularizer.push($root.com.intel.analytics.bigdl.serialization.Regularizer.decode(t,t.uint32()));break;case 10:e.tensor.push($root.com.intel.analytics.bigdl.serialization.BigDLTensor.decode(t,t.uint32()));break;case 11:e.variableFormat=t.array(e.variableFormat,(()=>t.int32()),a);break;case 12:e.initMethod.push($root.com.intel.analytics.bigdl.serialization.InitMethod.decode(t,t.uint32()));break;case 13:e.bigDLModule.push($root.com.intel.analytics.bigdl.serialization.BigDLModule.decode(t,t.uint32()));break;case 14:e.nameAttrList.push($root.com.intel.analytics.bigdl.serialization.NameAttrList.decode(t,t.uint32()));break;case 15:e.dataFormat=t.array(e.dataFormat,(()=>t.int32()),a);break;case 16:e.custom.push($root.google.protobuf.Any.decode(t,t.uint32()));break;case 17:e.shape.push($root.com.intel.analytics.bigdl.serialization.Shape.decode(t,t.uint32()));break;default:t.skipType(7&a)}}return e}},$root.com.intel.analytics.bigdl.serialization.AttrValue.ArrayValue.prototype.size=0,$root.com.intel.analytics.bigdl.serialization.AttrValue.ArrayValue.prototype.datatype=0,$root.com.intel.analytics.bigdl.serialization.NameAttrList=class{constructor(){this.attr={}}static decode(t,a){const e=new $root.com.intel.analytics.bigdl.serialization.NameAttrList,i=t.next(a);for(;t.end(i);){const a=t.uint32();switch(a>>>3){case 1:e.name=t.string();break;case 2:t.pair(e.attr,(()=>t.string()),(()=>$root.com.intel.analytics.bigdl.serialization.AttrValue.decode(t,t.uint32())));break;default:t.skipType(7&a)}}return e}},$root.com.intel.analytics.bigdl.serialization.NameAttrList.prototype.name="",$root.com.intel.analytics.bigdl.serialization.Shape=class{constructor(){this.shapeValue=[],this.shape=[]}static decode(t,a){const e=new $root.com.intel.analytics.bigdl.serialization.Shape,i=t.next(a);for(;t.end(i);){const a=t.uint32();switch(a>>>3){case 1:e.shapeType=t.int32();break;case 2:e.ssize=t.int32();break;case 3:e.shapeValue=t.array(e.shapeValue,(()=>t.int32()),a);break;case 4:e.shape.push($root.com.intel.analytics.bigdl.serialization.Shape.decode(t,t.uint32()));break;default:t.skipType(7&a)}}return e}},$root.com.intel.analytics.bigdl.serialization.Shape.prototype.shapeType=0,$root.com.intel.analytics.bigdl.serialization.Shape.prototype.ssize=0,$root.com.intel.analytics.bigdl.serialization.Shape.ShapeType={SINGLE:0,MULTI:1},$root.google={},$root.google.protobuf={},$root.google.protobuf.Any=class{constructor(){}static decode(t,a){const e=new $root.google.protobuf.Any,i=t.next(a);for(;t.end(i);){const a=t.uint32();switch(a>>>3){case 1:e.type_url=t.string();break;case 2:e.value=t.bytes();break;default:t.skipType(7&a)}}return e}},$root.google.protobuf.Any.prototype.type_url="",$root.google.protobuf.Any.prototype.value=new Uint8Array([]);