var bigdl=bigdl||{},long=long||{Long:require("long")},protobuf=protobuf||require("./protobuf");bigdl.ModelFactory=class{match(t){const e=t.identifier.split(".").pop().toLowerCase();if("model"==e||"bigdl"==e){const e=t.tags("pb");if(e.has(2)&&e.has(7)&&e.has(8)&&e.has(9)&&e.has(10)&&e.has(11)&&e.has(12))return!0}}open(t,e){return e.require("./bigdl-proto").then((()=>bigdl.Metadata.open(e).then((a=>{const i=t.identifier;try{bigdl.proto=protobuf.get("bigdl").com.intel.analytics.bigdl.serialization;const e=protobuf.Reader.create(t.buffer),i=bigdl.proto.BigDLModule.decode(e);return new bigdl.Model(a,i)}catch(t){e.exception(t,!1);const a=t&&t.message?t.message:t.toString();throw new bigdl.Error(a.replace(/\.$/,"")+" in '"+i+"'.")}}))))}},bigdl.Model=class{constructor(t,e){this._version=e&&e.version?e.version:"",this._graphs=[new bigdl.Graph(t,e)]}get format(){return"BigDL"+(this._version?" v"+this._version:"")}get graphs(){return this._graphs}},bigdl.Graph=class{constructor(t,e){this._type=e.moduleType,this._inputs=[],this._outputs=[],this._nodes=[],this._loadModule(t,"",e)}_loadModule(t,e,a){switch(a.moduleType){case"com.intel.analytics.bigdl.nn.StaticGraph":this._loadStaticGraph(t,e,a);break;case"com.intel.analytics.bigdl.nn.Sequential":this._loadSequential(t,e,a);break;case"com.intel.analytics.bigdl.nn.Input":this._inputs.push(new bigdl.Parameter(a.name,[new bigdl.Argument(a.name)]));break;default:this._nodes.push(new bigdl.Node(t,e,a))}}_loadSequential(t,e,a){e=e.length>0?e+"."+a.namePostfix:a.namePostfix;for(const i of a.subModules)this._loadModule(t,e,i)}_loadStaticGraph(t,e,a){e=e.length>0?e+"."+a.namePostfix:a.namePostfix;for(const i of a.subModules)this._loadModule(t,e,i)}get groups(){return this._groups||!1}get type(){return this._type}get inputs(){return this._inputs}get outputs(){return this._outputs}get nodes(){return this._nodes}},bigdl.Parameter=class{constructor(t,e){this._name=t,this._arguments=e}get name(){return this._name}get visible(){return!0}get arguments(){return this._arguments}},bigdl.Argument=class{constructor(t,e,a){if("string"!=typeof t)throw new bigdl.Error("Invalid argument identifier '"+JSON.stringify(t)+"'.");this._name=t,this._type=e||null,this._initializer=a||null}get name(){return this._name}get type(){return this._initializer?this._initializer.type:this._type}get initializer(){return this._initializer}},bigdl.Node=class{constructor(t,e,a){this._metadata=t,this._group=e,this._type=a.moduleType.split(".").pop(),this._name=a.name,this._attributes=[],this._inputs=[],this._outputs=[],this._inputs.push(new bigdl.Parameter("input",a.preModules.map((t=>new bigdl.Argument(t,null,null)))));const i=t.type(this.type),r=i&&i.inputs?i.inputs.slice():[];if(r.shift(),a.weight&&(r.shift(),this._inputs.push(new bigdl.Parameter("weight",[new bigdl.Argument("",null,new bigdl.Tensor(a.weight))]))),a.bias&&(r.shift(),this._inputs.push(new bigdl.Parameter("bias",[new bigdl.Argument("",null,new bigdl.Tensor(a.bias))]))),a.parameters&&a.parameters.length>0)for(const t of a.parameters){const e=r.shift(),a=e?e.name:this._inputs.length.toString();this._inputs.push(new bigdl.Parameter(a,[new bigdl.Argument("",null,new bigdl.Tensor(t))]))}for(const e of Object.keys(a.attr)){const i=a.attr[e];"module_numerics"!==e&&"module_tags"!==e&&(i.dataType!==bigdl.proto.DataType.TENSOR?i.dataType===bigdl.proto.DataType.REGULARIZER&&void 0===i.value||(i.dataType!==bigdl.proto.DataType.ARRAY_VALUE||i.arrayValue.datatype!==bigdl.proto.DataType.TENSOR?this._attributes.push(new bigdl.Attribute(t.attribute(this._type,e),e,i)):this._inputs.push(new bigdl.Parameter(e,i.arrayValue.tensor.map((t=>new bigdl.Argument("",null,new bigdl.Tensor(t))))))):i.value&&this._inputs.push(new bigdl.Parameter(e,[new bigdl.Argument("",null,new bigdl.Tensor(i.tensorValue))])))}const s=this._name||this._type+a.namePostfix;this._outputs.push(new bigdl.Parameter("output",[new bigdl.Argument(s,null,null)]))}get group(){return this._group}get type(){return this._type}get metadata(){return this._metadata.type(this._type)}get name(){return this._name}get inputs(){return this._inputs}get outputs(){return this._outputs}get attributes(){return this._attributes}},bigdl.Attribute=class{constructor(t,e,a){switch(this._name=e,a.dataType){case bigdl.proto.DataType.INT32:this._type="int32",this._value=a.int32Value;break;case bigdl.proto.DataType.FLOAT:this._type="float32",this._value=a.floatValue;break;case bigdl.proto.DataType.DOUBLE:this._type="float64",this._value=a.doubleValue;break;case bigdl.proto.DataType.BOOL:this._type="boolean",this._value=a.boolValue;break;case bigdl.proto.DataType.REGULARIZER:this._value=a.value;break;case bigdl.proto.DataType.MODULE:this._value=a.bigDLModule;break;case bigdl.proto.DataType.NAME_ATTR_LIST:this._value=a.nameAttrListValue;break;case bigdl.proto.DataType.ARRAY_VALUE:switch(a.arrayValue.datatype){case bigdl.proto.DataType.INT32:this._type="int32[]",this._value=a.arrayValue.i32;break;case bigdl.proto.DataType.FLOAT:this._type="float32[]",this._value=a.arrayValue.flt;break;case bigdl.proto.DataType.STRING:this._type="string[]",this._value=a.arrayValue.str;break;case bigdl.proto.DataType.TENSOR:this._type="tensor[]",this._value=a.arrayValue.tensor;break;default:throw new bigdl.Error("Unsupported attribute array data type '"+a.arrayValue.datatype+"'.")}break;case bigdl.proto.DataType.DATA_FORMAT:switch(this._dataType="InputDataFormat",a.dataFormatValue){case 0:this._value="NCHW";break;case 1:this._value="NHWC"}break;default:throw new bigdl.Error("Unsupported attribute data type '"+a.dataType+"'.")}}get type(){return""}get name(){return this._name}get value(){return this._value}get visible(){return!0}},bigdl.Tensor=class{constructor(t){this._type=new bigdl.TensorType(t.datatype,new bigdl.TensorShape(t.size))}get kind(){return"Parameter"}get type(){return this._type}get state(){return"Not supported."}get value(){return null}toString(){return""}},bigdl.TensorType=class{constructor(t,e){switch(t){case bigdl.proto.DataType.FLOAT:this._dataType="float32";break;case bigdl.proto.DataType.DOUBLE:this._dataType="float64";break;default:throw new bigdl.Error("Unsupported tensor type '"+t+"'.")}this._shape=e}get dataType(){return this._dataType}get shape(){return this._shape}toString(){return(this.dataType||"?")+this._shape.toString()}},bigdl.TensorShape=class{constructor(t){this._dimensions=t.map((t=>t&&long.Long.isLong(t)?t.toNumber():t))}get dimensions(){return this._dimensions}toString(){return this._dimensions?"["+this._dimensions.map((t=>t.toString())).join(",")+"]":""}},bigdl.Metadata=class{static open(t){return bigdl.Metadata._metadata?Promise.resolve(bigdl.Metadata._metadata):t.request(null,"bigdl-metadata.json","utf-8").then((t=>(bigdl.Metadata._metadata=new bigdl.Metadata(t),bigdl.Metadata._metadata))).catch((()=>(bigdl.Metadata._metadata=new bigdl.Metadata(null),bigdl.Metadata._metadata)))}constructor(t){if(this._map={},this._attributeCache={},t){const e=JSON.parse(t);if(e)for(const t of e)t.name&&t.schema&&(t.schema.name=t.name,this._map[t.name]=t.schema)}}type(t){return this._map[t]||null}attribute(t,e){let a=this._attributeCache[t];if(!a){a={};const e=this.type(t);if(e&&e.attributes&&e.attributes.length>0)for(const t of e.attributes)a[t.name]=t;this._attributeCache[t]=a}return a[e]||null}},bigdl.Error=class extends Error{constructor(t){super(t),this.name="Error loading BigDL model."}},"undefined"!=typeof module&&"object"==typeof module.exports&&(module.exports.ModelFactory=bigdl.ModelFactory);