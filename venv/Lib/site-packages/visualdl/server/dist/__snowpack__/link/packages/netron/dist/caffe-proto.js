var $root=protobuf.get("caffe");$root.caffe={},$root.caffe.BlobShape=class{constructor(){this.dim=[]}static decode(e,a){const r=new $root.caffe.BlobShape,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.dim=e.array(r.dim,(()=>e.int64()),a);break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.BlobShape;for(e.start();!e.end();){const r=e.tag();switch(r){case"dim":e.array(a.dim,(()=>e.integer()));break;default:e.field(r,a)}}return a}},$root.caffe.BlobProto=class{constructor(){this.data=[],this.diff=[],this.double_data=[],this.double_diff=[]}static decode(e,a){const r=new $root.caffe.BlobProto,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 7:r.shape=$root.caffe.BlobShape.decode(e,e.uint32());break;case 5:r.data=e.floats(r.data,a);break;case 6:r.diff=e.floats(r.diff,a);break;case 8:r.double_data=e.doubles(r.double_data,a);break;case 9:r.double_diff=e.doubles(r.double_diff,a);break;case 1:r.num=e.int32();break;case 2:r.channels=e.int32();break;case 3:r.height=e.int32();break;case 4:r.width=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.BlobProto;for(e.start();!e.end();){const r=e.tag();switch(r){case"shape":a.shape=$root.caffe.BlobShape.decodeText(e,!0);break;case"data":e.array(a.data,(()=>e.float()));break;case"diff":e.array(a.diff,(()=>e.float()));break;case"double_data":e.array(a.double_data,(()=>e.float()));break;case"double_diff":e.array(a.double_diff,(()=>e.float()));break;case"num":a.num=e.integer();break;case"channels":a.channels=e.integer();break;case"height":a.height=e.integer();break;case"width":a.width=e.integer();break;default:e.field(r,a)}}return a}},$root.caffe.BlobProto.prototype.shape=null,$root.caffe.BlobProto.prototype.num=0,$root.caffe.BlobProto.prototype.channels=0,$root.caffe.BlobProto.prototype.height=0,$root.caffe.BlobProto.prototype.width=0,$root.caffe.BlobProtoVector=class{constructor(){this.blobs=[]}static decode(e,a){const r=new $root.caffe.BlobProtoVector,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.blobs.push($root.caffe.BlobProto.decode(e,e.uint32()));break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.BlobProtoVector;for(e.start();!e.end();){const r=e.tag();switch(r){case"blobs":a.blobs.push($root.caffe.BlobProto.decodeText(e,!0));break;default:e.field(r,a)}}return a}},$root.caffe.Datum=class{constructor(){this.float_data=[]}static decode(e,a){const r=new $root.caffe.Datum,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.channels=e.int32();break;case 2:r.height=e.int32();break;case 3:r.width=e.int32();break;case 4:r.data=e.bytes();break;case 5:r.label=e.int32();break;case 6:r.float_data=e.floats(r.float_data,a);break;case 7:r.encoded=e.bool();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.Datum;for(e.start();!e.end();){const r=e.tag();switch(r){case"channels":a.channels=e.integer();break;case"height":a.height=e.integer();break;case"width":a.width=e.integer();break;case"data":a.data=e.bytes();break;case"label":a.label=e.integer();break;case"float_data":e.array(a.float_data,(()=>e.float()));break;case"encoded":a.encoded=e.boolean();break;default:e.field(r,a)}}return a}},$root.caffe.Datum.prototype.channels=0,$root.caffe.Datum.prototype.height=0,$root.caffe.Datum.prototype.width=0,$root.caffe.Datum.prototype.data=new Uint8Array([]),$root.caffe.Datum.prototype.label=0,$root.caffe.Datum.prototype.encoded=!1,$root.caffe.FillerParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.FillerParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.type=e.string();break;case 2:r.value=e.float();break;case 3:r.min=e.float();break;case 4:r.max=e.float();break;case 5:r.mean=e.float();break;case 6:r.std=e.float();break;case 7:r.sparse=e.int32();break;case 8:r.variance_norm=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.FillerParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"type":a.type=e.string();break;case"value":a.value=e.float();break;case"min":a.min=e.float();break;case"max":a.max=e.float();break;case"mean":a.mean=e.float();break;case"std":a.std=e.float();break;case"sparse":a.sparse=e.integer();break;case"variance_norm":a.variance_norm=e.enum($root.caffe.FillerParameter.VarianceNorm);break;default:e.field(r,a)}}return a}},$root.caffe.FillerParameter.prototype.type="constant",$root.caffe.FillerParameter.prototype.value=0,$root.caffe.FillerParameter.prototype.min=0,$root.caffe.FillerParameter.prototype.max=1,$root.caffe.FillerParameter.prototype.mean=0,$root.caffe.FillerParameter.prototype.std=1,$root.caffe.FillerParameter.prototype.sparse=-1,$root.caffe.FillerParameter.prototype.variance_norm=0,$root.caffe.FillerParameter.VarianceNorm={FAN_IN:0,FAN_OUT:1,AVERAGE:2},$root.caffe.NetParameter=class{constructor(){this.input=[],this.input_shape=[],this.input_dim=[],this.layer=[],this.layers=[]}static decode(e,a){const r=new $root.caffe.NetParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.name=e.string();break;case 3:r.input.push(e.string());break;case 8:r.input_shape.push($root.caffe.BlobShape.decode(e,e.uint32()));break;case 4:r.input_dim=e.array(r.input_dim,(()=>e.int32()),a);break;case 5:r.force_backward=e.bool();break;case 6:r.state=$root.caffe.NetState.decode(e,e.uint32());break;case 7:r.debug_info=e.bool();break;case 100:r.layer.push($root.caffe.LayerParameter.decode(e,e.uint32()));break;case 2:r.layers.push($root.caffe.V1LayerParameter.decode(e,e.uint32()));break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.NetParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"name":a.name=e.string();break;case"input":e.array(a.input,(()=>e.string()));break;case"input_shape":a.input_shape.push($root.caffe.BlobShape.decodeText(e,!0));break;case"input_dim":e.array(a.input_dim,(()=>e.integer()));break;case"force_backward":a.force_backward=e.boolean();break;case"state":a.state=$root.caffe.NetState.decodeText(e,!0);break;case"debug_info":a.debug_info=e.boolean();break;case"layer":a.layer.push($root.caffe.LayerParameter.decodeText(e,!0));break;case"layers":a.layers.push($root.caffe.V1LayerParameter.decodeText(e,!0));break;default:e.field(r,a)}}return a}},$root.caffe.NetParameter.prototype.name="",$root.caffe.NetParameter.prototype.force_backward=!1,$root.caffe.NetParameter.prototype.state=null,$root.caffe.NetParameter.prototype.debug_info=!1,$root.caffe.SolverParameter=class{constructor(){this.test_net=[],this.test_net_param=[],this.test_state=[],this.test_iter=[],this.stepvalue=[],this.weights=[]}static decode(e,a){const r=new $root.caffe.SolverParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 24:r.net=e.string();break;case 25:r.net_param=$root.caffe.NetParameter.decode(e,e.uint32());break;case 1:r.train_net=e.string();break;case 2:r.test_net.push(e.string());break;case 21:r.train_net_param=$root.caffe.NetParameter.decode(e,e.uint32());break;case 22:r.test_net_param.push($root.caffe.NetParameter.decode(e,e.uint32()));break;case 26:r.train_state=$root.caffe.NetState.decode(e,e.uint32());break;case 27:r.test_state.push($root.caffe.NetState.decode(e,e.uint32()));break;case 3:r.test_iter=e.array(r.test_iter,(()=>e.int32()),a);break;case 4:r.test_interval=e.int32();break;case 19:r.test_compute_loss=e.bool();break;case 32:r.test_initialization=e.bool();break;case 5:r.base_lr=e.float();break;case 6:r.display=e.int32();break;case 33:r.average_loss=e.int32();break;case 7:r.max_iter=e.int32();break;case 36:r.iter_size=e.int32();break;case 8:r.lr_policy=e.string();break;case 9:r.gamma=e.float();break;case 10:r.power=e.float();break;case 11:r.momentum=e.float();break;case 12:r.weight_decay=e.float();break;case 29:r.regularization_type=e.string();break;case 13:r.stepsize=e.int32();break;case 34:r.stepvalue=e.array(r.stepvalue,(()=>e.int32()),a);break;case 35:r.clip_gradients=e.float();break;case 14:r.snapshot=e.int32();break;case 15:r.snapshot_prefix=e.string();break;case 16:r.snapshot_diff=e.bool();break;case 37:r.snapshot_format=e.int32();break;case 17:r.solver_mode=e.int32();break;case 18:r.device_id=e.int32();break;case 20:r.random_seed=e.int64();break;case 40:r.type=e.string();break;case 31:r.delta=e.float();break;case 39:r.momentum2=e.float();break;case 38:r.rms_decay=e.float();break;case 23:r.debug_info=e.bool();break;case 28:r.snapshot_after_train=e.bool();break;case 30:r.solver_type=e.int32();break;case 41:r.layer_wise_reduce=e.bool();break;case 42:r.weights.push(e.string());break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.SolverParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"net":a.net=e.string();break;case"net_param":a.net_param=$root.caffe.NetParameter.decodeText(e,!0);break;case"train_net":a.train_net=e.string();break;case"test_net":e.array(a.test_net,(()=>e.string()));break;case"train_net_param":a.train_net_param=$root.caffe.NetParameter.decodeText(e,!0);break;case"test_net_param":a.test_net_param.push($root.caffe.NetParameter.decodeText(e,!0));break;case"train_state":a.train_state=$root.caffe.NetState.decodeText(e,!0);break;case"test_state":a.test_state.push($root.caffe.NetState.decodeText(e,!0));break;case"test_iter":e.array(a.test_iter,(()=>e.integer()));break;case"test_interval":a.test_interval=e.integer();break;case"test_compute_loss":a.test_compute_loss=e.boolean();break;case"test_initialization":a.test_initialization=e.boolean();break;case"base_lr":a.base_lr=e.float();break;case"display":a.display=e.integer();break;case"average_loss":a.average_loss=e.integer();break;case"max_iter":a.max_iter=e.integer();break;case"iter_size":a.iter_size=e.integer();break;case"lr_policy":a.lr_policy=e.string();break;case"gamma":a.gamma=e.float();break;case"power":a.power=e.float();break;case"momentum":a.momentum=e.float();break;case"weight_decay":a.weight_decay=e.float();break;case"regularization_type":a.regularization_type=e.string();break;case"stepsize":a.stepsize=e.integer();break;case"stepvalue":e.array(a.stepvalue,(()=>e.integer()));break;case"clip_gradients":a.clip_gradients=e.float();break;case"snapshot":a.snapshot=e.integer();break;case"snapshot_prefix":a.snapshot_prefix=e.string();break;case"snapshot_diff":a.snapshot_diff=e.boolean();break;case"snapshot_format":a.snapshot_format=e.enum($root.caffe.SolverParameter.SnapshotFormat);break;case"solver_mode":a.solver_mode=e.enum($root.caffe.SolverParameter.SolverMode);break;case"device_id":a.device_id=e.integer();break;case"random_seed":a.random_seed=e.integer();break;case"type":a.type=e.string();break;case"delta":a.delta=e.float();break;case"momentum2":a.momentum2=e.float();break;case"rms_decay":a.rms_decay=e.float();break;case"debug_info":a.debug_info=e.boolean();break;case"snapshot_after_train":a.snapshot_after_train=e.boolean();break;case"solver_type":a.solver_type=e.enum($root.caffe.SolverParameter.SolverType);break;case"layer_wise_reduce":a.layer_wise_reduce=e.boolean();break;case"weights":e.array(a.weights,(()=>e.string()));break;default:e.field(r,a)}}return a}},$root.caffe.SolverParameter.prototype.net="",$root.caffe.SolverParameter.prototype.net_param=null,$root.caffe.SolverParameter.prototype.train_net="",$root.caffe.SolverParameter.prototype.train_net_param=null,$root.caffe.SolverParameter.prototype.train_state=null,$root.caffe.SolverParameter.prototype.test_interval=0,$root.caffe.SolverParameter.prototype.test_compute_loss=!1,$root.caffe.SolverParameter.prototype.test_initialization=!0,$root.caffe.SolverParameter.prototype.base_lr=0,$root.caffe.SolverParameter.prototype.display=0,$root.caffe.SolverParameter.prototype.average_loss=1,$root.caffe.SolverParameter.prototype.max_iter=0,$root.caffe.SolverParameter.prototype.iter_size=1,$root.caffe.SolverParameter.prototype.lr_policy="",$root.caffe.SolverParameter.prototype.gamma=0,$root.caffe.SolverParameter.prototype.power=0,$root.caffe.SolverParameter.prototype.momentum=0,$root.caffe.SolverParameter.prototype.weight_decay=0,$root.caffe.SolverParameter.prototype.regularization_type="L2",$root.caffe.SolverParameter.prototype.stepsize=0,$root.caffe.SolverParameter.prototype.clip_gradients=-1,$root.caffe.SolverParameter.prototype.snapshot=0,$root.caffe.SolverParameter.prototype.snapshot_prefix="",$root.caffe.SolverParameter.prototype.snapshot_diff=!1,$root.caffe.SolverParameter.prototype.snapshot_format=1,$root.caffe.SolverParameter.prototype.solver_mode=1,$root.caffe.SolverParameter.prototype.device_id=0,$root.caffe.SolverParameter.prototype.random_seed=protobuf.Long?protobuf.Long.fromBits(-1,-1,!1):-1,$root.caffe.SolverParameter.prototype.type="SGD",$root.caffe.SolverParameter.prototype.delta=1e-8,$root.caffe.SolverParameter.prototype.momentum2=.999,$root.caffe.SolverParameter.prototype.rms_decay=.99,$root.caffe.SolverParameter.prototype.debug_info=!1,$root.caffe.SolverParameter.prototype.snapshot_after_train=!0,$root.caffe.SolverParameter.prototype.solver_type=0,$root.caffe.SolverParameter.prototype.layer_wise_reduce=!0,$root.caffe.SolverParameter.SnapshotFormat={HDF5:0,BINARYPROTO:1},$root.caffe.SolverParameter.SolverMode={CPU:0,GPU:1},$root.caffe.SolverParameter.SolverType={SGD:0,NESTEROV:1,ADAGRAD:2,RMSPROP:3,ADADELTA:4,ADAM:5},$root.caffe.SolverState=class{constructor(){this.history=[]}static decode(e,a){const r=new $root.caffe.SolverState,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.iter=e.int32();break;case 2:r.learned_net=e.string();break;case 3:r.history.push($root.caffe.BlobProto.decode(e,e.uint32()));break;case 4:r.current_step=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.SolverState;for(e.start();!e.end();){const r=e.tag();switch(r){case"iter":a.iter=e.integer();break;case"learned_net":a.learned_net=e.string();break;case"history":a.history.push($root.caffe.BlobProto.decodeText(e,!0));break;case"current_step":a.current_step=e.integer();break;default:e.field(r,a)}}return a}},$root.caffe.SolverState.prototype.iter=0,$root.caffe.SolverState.prototype.learned_net="",$root.caffe.SolverState.prototype.current_step=0,$root.caffe.Phase={TRAIN:0,TEST:1},$root.caffe.NetState=class{constructor(){this.stage=[]}static decode(e,a){const r=new $root.caffe.NetState,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.phase=e.int32();break;case 2:r.level=e.int32();break;case 3:r.stage.push(e.string());break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.NetState;for(e.start();!e.end();){const r=e.tag();switch(r){case"phase":a.phase=e.enum($root.caffe.Phase);break;case"level":a.level=e.integer();break;case"stage":e.array(a.stage,(()=>e.string()));break;default:e.field(r,a)}}return a}},$root.caffe.NetState.prototype.phase=1,$root.caffe.NetState.prototype.level=0,$root.caffe.NetStateRule=class{constructor(){this.stage=[],this.not_stage=[]}static decode(e,a){const r=new $root.caffe.NetStateRule,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.phase=e.int32();break;case 2:r.min_level=e.int32();break;case 3:r.max_level=e.int32();break;case 4:r.stage.push(e.string());break;case 5:r.not_stage.push(e.string());break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.NetStateRule;for(e.start();!e.end();){const r=e.tag();switch(r){case"phase":a.phase=e.enum($root.caffe.Phase);break;case"min_level":a.min_level=e.integer();break;case"max_level":a.max_level=e.integer();break;case"stage":e.array(a.stage,(()=>e.string()));break;case"not_stage":e.array(a.not_stage,(()=>e.string()));break;default:e.field(r,a)}}return a}},$root.caffe.NetStateRule.prototype.phase=0,$root.caffe.NetStateRule.prototype.min_level=0,$root.caffe.NetStateRule.prototype.max_level=0,$root.caffe.ParamSpec=class{constructor(){}static decode(e,a){const r=new $root.caffe.ParamSpec,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.name=e.string();break;case 2:r.share_mode=e.int32();break;case 3:r.lr_mult=e.float();break;case 4:r.decay_mult=e.float();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ParamSpec;for(e.start();!e.end();){const r=e.tag();switch(r){case"name":a.name=e.string();break;case"share_mode":a.share_mode=e.enum($root.caffe.ParamSpec.DimCheckMode);break;case"lr_mult":a.lr_mult=e.float();break;case"decay_mult":a.decay_mult=e.float();break;default:e.field(r,a)}}return a}},$root.caffe.ParamSpec.prototype.name="",$root.caffe.ParamSpec.prototype.share_mode=0,$root.caffe.ParamSpec.prototype.lr_mult=1,$root.caffe.ParamSpec.prototype.decay_mult=1,$root.caffe.ParamSpec.DimCheckMode={STRICT:0,PERMISSIVE:1},$root.caffe.LayerParameter=class{constructor(){this.bottom=[],this.top=[],this.loss_weight=[],this.param=[],this.blobs=[],this.propagate_down=[],this.include=[],this.exclude=[]}static decode(e,a){const r=new $root.caffe.LayerParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.name=e.string();break;case 2:r.type=e.string();break;case 3:r.bottom.push(e.string());break;case 4:r.top.push(e.string());break;case 10:r.phase=e.int32();break;case 5:r.loss_weight=e.floats(r.loss_weight,a);break;case 6:r.param.push($root.caffe.ParamSpec.decode(e,e.uint32()));break;case 7:r.blobs.push($root.caffe.BlobProto.decode(e,e.uint32()));break;case 11:r.propagate_down=e.array(r.propagate_down,(()=>e.bool()),a);break;case 8:r.include.push($root.caffe.NetStateRule.decode(e,e.uint32()));break;case 9:r.exclude.push($root.caffe.NetStateRule.decode(e,e.uint32()));break;case 100:r.transform_param=$root.caffe.TransformationParameter.decode(e,e.uint32());break;case 101:r.loss_param=$root.caffe.LossParameter.decode(e,e.uint32());break;case 102:r.accuracy_param=$root.caffe.AccuracyParameter.decode(e,e.uint32());break;case 103:r.argmax_param=$root.caffe.ArgMaxParameter.decode(e,e.uint32());break;case 139:r.batch_norm_param=$root.caffe.BatchNormParameter.decode(e,e.uint32());break;case 141:r.bias_param=$root.caffe.BiasParameter.decode(e,e.uint32());break;case 148:r.clip_param=$root.caffe.ClipParameter.decode(e,e.uint32());break;case 104:r.concat_param=$root.caffe.ConcatParameter.decode(e,e.uint32());break;case 105:r.contrastive_loss_param=$root.caffe.ContrastiveLossParameter.decode(e,e.uint32());break;case 106:r.convolution_param=$root.caffe.ConvolutionParameter.decode(e,e.uint32());break;case 144:r.crop_param=$root.caffe.CropParameter.decode(e,e.uint32());break;case 107:r.data_param=$root.caffe.DataParameter.decode(e,e.uint32());break;case 108:r.dropout_param=$root.caffe.DropoutParameter.decode(e,e.uint32());break;case 109:r.dummy_data_param=$root.caffe.DummyDataParameter.decode(e,e.uint32());break;case 110:r.eltwise_param=$root.caffe.EltwiseParameter.decode(e,e.uint32());break;case 140:r.elu_param=$root.caffe.ELUParameter.decode(e,e.uint32());break;case 137:r.embed_param=$root.caffe.EmbedParameter.decode(e,e.uint32());break;case 111:r.exp_param=$root.caffe.ExpParameter.decode(e,e.uint32());break;case 135:r.flatten_param=$root.caffe.FlattenParameter.decode(e,e.uint32());break;case 112:r.hdf5_data_param=$root.caffe.HDF5DataParameter.decode(e,e.uint32());break;case 113:r.hdf5_output_param=$root.caffe.HDF5OutputParameter.decode(e,e.uint32());break;case 114:r.hinge_loss_param=$root.caffe.HingeLossParameter.decode(e,e.uint32());break;case 115:r.image_data_param=$root.caffe.ImageDataParameter.decode(e,e.uint32());break;case 116:r.infogain_loss_param=$root.caffe.InfogainLossParameter.decode(e,e.uint32());break;case 117:r.inner_product_param=$root.caffe.InnerProductParameter.decode(e,e.uint32());break;case 143:r.input_param=$root.caffe.InputParameter.decode(e,e.uint32());break;case 134:r.log_param=$root.caffe.LogParameter.decode(e,e.uint32());break;case 118:r.lrn_param=$root.caffe.LRNParameter.decode(e,e.uint32());break;case 119:r.memory_data_param=$root.caffe.MemoryDataParameter.decode(e,e.uint32());break;case 120:r.mvn_param=$root.caffe.MVNParameter.decode(e,e.uint32());break;case 145:r.parameter_param=$root.caffe.ParameterParameter.decode(e,e.uint32());break;case 121:r.pooling_param=$root.caffe.PoolingParameter.decode(e,e.uint32());break;case 122:r.power_param=$root.caffe.PowerParameter.decode(e,e.uint32());break;case 131:r.prelu_param=$root.caffe.PReLUParameter.decode(e,e.uint32());break;case 130:r.python_param=$root.caffe.PythonParameter.decode(e,e.uint32());break;case 146:r.recurrent_param=$root.caffe.RecurrentParameter.decode(e,e.uint32());break;case 136:r.reduction_param=$root.caffe.ReductionParameter.decode(e,e.uint32());break;case 123:r.relu_param=$root.caffe.ReLUParameter.decode(e,e.uint32());break;case 133:r.reshape_param=$root.caffe.ReshapeParameter.decode(e,e.uint32());break;case 142:r.scale_param=$root.caffe.ScaleParameter.decode(e,e.uint32());break;case 124:r.sigmoid_param=$root.caffe.SigmoidParameter.decode(e,e.uint32());break;case 125:r.softmax_param=$root.caffe.SoftmaxParameter.decode(e,e.uint32());break;case 132:r.spp_param=$root.caffe.SPPParameter.decode(e,e.uint32());break;case 126:r.slice_param=$root.caffe.SliceParameter.decode(e,e.uint32());break;case 147:r.swish_param=$root.caffe.SwishParameter.decode(e,e.uint32());break;case 127:r.tanh_param=$root.caffe.TanHParameter.decode(e,e.uint32());break;case 128:r.threshold_param=$root.caffe.ThresholdParameter.decode(e,e.uint32());break;case 138:r.tile_param=$root.caffe.TileParameter.decode(e,e.uint32());break;case 129:r.window_data_param=$root.caffe.WindowDataParameter.decode(e,e.uint32());break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.LayerParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"name":a.name=e.string();break;case"type":a.type=e.string();break;case"bottom":e.array(a.bottom,(()=>e.string()));break;case"top":e.array(a.top,(()=>e.string()));break;case"phase":a.phase=e.enum($root.caffe.Phase);break;case"loss_weight":e.array(a.loss_weight,(()=>e.float()));break;case"param":a.param.push($root.caffe.ParamSpec.decodeText(e,!0));break;case"blobs":a.blobs.push($root.caffe.BlobProto.decodeText(e,!0));break;case"propagate_down":e.array(a.propagate_down,(()=>e.boolean()));break;case"include":a.include.push($root.caffe.NetStateRule.decodeText(e,!0));break;case"exclude":a.exclude.push($root.caffe.NetStateRule.decodeText(e,!0));break;case"transform_param":a.transform_param=$root.caffe.TransformationParameter.decodeText(e,!0);break;case"loss_param":a.loss_param=$root.caffe.LossParameter.decodeText(e,!0);break;case"accuracy_param":a.accuracy_param=$root.caffe.AccuracyParameter.decodeText(e,!0);break;case"argmax_param":a.argmax_param=$root.caffe.ArgMaxParameter.decodeText(e,!0);break;case"batch_norm_param":a.batch_norm_param=$root.caffe.BatchNormParameter.decodeText(e,!0);break;case"bias_param":a.bias_param=$root.caffe.BiasParameter.decodeText(e,!0);break;case"clip_param":a.clip_param=$root.caffe.ClipParameter.decodeText(e,!0);break;case"concat_param":a.concat_param=$root.caffe.ConcatParameter.decodeText(e,!0);break;case"contrastive_loss_param":a.contrastive_loss_param=$root.caffe.ContrastiveLossParameter.decodeText(e,!0);break;case"convolution_param":a.convolution_param=$root.caffe.ConvolutionParameter.decodeText(e,!0);break;case"crop_param":a.crop_param=$root.caffe.CropParameter.decodeText(e,!0);break;case"data_param":a.data_param=$root.caffe.DataParameter.decodeText(e,!0);break;case"dropout_param":a.dropout_param=$root.caffe.DropoutParameter.decodeText(e,!0);break;case"dummy_data_param":a.dummy_data_param=$root.caffe.DummyDataParameter.decodeText(e,!0);break;case"eltwise_param":a.eltwise_param=$root.caffe.EltwiseParameter.decodeText(e,!0);break;case"elu_param":a.elu_param=$root.caffe.ELUParameter.decodeText(e,!0);break;case"embed_param":a.embed_param=$root.caffe.EmbedParameter.decodeText(e,!0);break;case"exp_param":a.exp_param=$root.caffe.ExpParameter.decodeText(e,!0);break;case"flatten_param":a.flatten_param=$root.caffe.FlattenParameter.decodeText(e,!0);break;case"hdf5_data_param":a.hdf5_data_param=$root.caffe.HDF5DataParameter.decodeText(e,!0);break;case"hdf5_output_param":a.hdf5_output_param=$root.caffe.HDF5OutputParameter.decodeText(e,!0);break;case"hinge_loss_param":a.hinge_loss_param=$root.caffe.HingeLossParameter.decodeText(e,!0);break;case"image_data_param":a.image_data_param=$root.caffe.ImageDataParameter.decodeText(e,!0);break;case"infogain_loss_param":a.infogain_loss_param=$root.caffe.InfogainLossParameter.decodeText(e,!0);break;case"inner_product_param":a.inner_product_param=$root.caffe.InnerProductParameter.decodeText(e,!0);break;case"input_param":a.input_param=$root.caffe.InputParameter.decodeText(e,!0);break;case"log_param":a.log_param=$root.caffe.LogParameter.decodeText(e,!0);break;case"lrn_param":a.lrn_param=$root.caffe.LRNParameter.decodeText(e,!0);break;case"memory_data_param":a.memory_data_param=$root.caffe.MemoryDataParameter.decodeText(e,!0);break;case"mvn_param":a.mvn_param=$root.caffe.MVNParameter.decodeText(e,!0);break;case"parameter_param":a.parameter_param=$root.caffe.ParameterParameter.decodeText(e,!0);break;case"pooling_param":a.pooling_param=$root.caffe.PoolingParameter.decodeText(e,!0);break;case"power_param":a.power_param=$root.caffe.PowerParameter.decodeText(e,!0);break;case"prelu_param":a.prelu_param=$root.caffe.PReLUParameter.decodeText(e,!0);break;case"python_param":a.python_param=$root.caffe.PythonParameter.decodeText(e,!0);break;case"recurrent_param":a.recurrent_param=$root.caffe.RecurrentParameter.decodeText(e,!0);break;case"reduction_param":a.reduction_param=$root.caffe.ReductionParameter.decodeText(e,!0);break;case"relu_param":a.relu_param=$root.caffe.ReLUParameter.decodeText(e,!0);break;case"reshape_param":a.reshape_param=$root.caffe.ReshapeParameter.decodeText(e,!0);break;case"scale_param":a.scale_param=$root.caffe.ScaleParameter.decodeText(e,!0);break;case"sigmoid_param":a.sigmoid_param=$root.caffe.SigmoidParameter.decodeText(e,!0);break;case"softmax_param":a.softmax_param=$root.caffe.SoftmaxParameter.decodeText(e,!0);break;case"spp_param":a.spp_param=$root.caffe.SPPParameter.decodeText(e,!0);break;case"slice_param":a.slice_param=$root.caffe.SliceParameter.decodeText(e,!0);break;case"swish_param":a.swish_param=$root.caffe.SwishParameter.decodeText(e,!0);break;case"tanh_param":a.tanh_param=$root.caffe.TanHParameter.decodeText(e,!0);break;case"threshold_param":a.threshold_param=$root.caffe.ThresholdParameter.decodeText(e,!0);break;case"tile_param":a.tile_param=$root.caffe.TileParameter.decodeText(e,!0);break;case"window_data_param":a.window_data_param=$root.caffe.WindowDataParameter.decodeText(e,!0);break;default:e.field(r,a)}}return a}},$root.caffe.LayerParameter.prototype.name="",$root.caffe.LayerParameter.prototype.type="",$root.caffe.LayerParameter.prototype.phase=0,$root.caffe.LayerParameter.prototype.transform_param=null,$root.caffe.LayerParameter.prototype.loss_param=null,$root.caffe.LayerParameter.prototype.accuracy_param=null,$root.caffe.LayerParameter.prototype.argmax_param=null,$root.caffe.LayerParameter.prototype.batch_norm_param=null,$root.caffe.LayerParameter.prototype.bias_param=null,$root.caffe.LayerParameter.prototype.clip_param=null,$root.caffe.LayerParameter.prototype.concat_param=null,$root.caffe.LayerParameter.prototype.contrastive_loss_param=null,$root.caffe.LayerParameter.prototype.convolution_param=null,$root.caffe.LayerParameter.prototype.crop_param=null,$root.caffe.LayerParameter.prototype.data_param=null,$root.caffe.LayerParameter.prototype.dropout_param=null,$root.caffe.LayerParameter.prototype.dummy_data_param=null,$root.caffe.LayerParameter.prototype.eltwise_param=null,$root.caffe.LayerParameter.prototype.elu_param=null,$root.caffe.LayerParameter.prototype.embed_param=null,$root.caffe.LayerParameter.prototype.exp_param=null,$root.caffe.LayerParameter.prototype.flatten_param=null,$root.caffe.LayerParameter.prototype.hdf5_data_param=null,$root.caffe.LayerParameter.prototype.hdf5_output_param=null,$root.caffe.LayerParameter.prototype.hinge_loss_param=null,$root.caffe.LayerParameter.prototype.image_data_param=null,$root.caffe.LayerParameter.prototype.infogain_loss_param=null,$root.caffe.LayerParameter.prototype.inner_product_param=null,$root.caffe.LayerParameter.prototype.input_param=null,$root.caffe.LayerParameter.prototype.log_param=null,$root.caffe.LayerParameter.prototype.lrn_param=null,$root.caffe.LayerParameter.prototype.memory_data_param=null,$root.caffe.LayerParameter.prototype.mvn_param=null,$root.caffe.LayerParameter.prototype.parameter_param=null,$root.caffe.LayerParameter.prototype.pooling_param=null,$root.caffe.LayerParameter.prototype.power_param=null,$root.caffe.LayerParameter.prototype.prelu_param=null,$root.caffe.LayerParameter.prototype.python_param=null,$root.caffe.LayerParameter.prototype.recurrent_param=null,$root.caffe.LayerParameter.prototype.reduction_param=null,$root.caffe.LayerParameter.prototype.relu_param=null,$root.caffe.LayerParameter.prototype.reshape_param=null,$root.caffe.LayerParameter.prototype.scale_param=null,$root.caffe.LayerParameter.prototype.sigmoid_param=null,$root.caffe.LayerParameter.prototype.softmax_param=null,$root.caffe.LayerParameter.prototype.spp_param=null,$root.caffe.LayerParameter.prototype.slice_param=null,$root.caffe.LayerParameter.prototype.swish_param=null,$root.caffe.LayerParameter.prototype.tanh_param=null,$root.caffe.LayerParameter.prototype.threshold_param=null,$root.caffe.LayerParameter.prototype.tile_param=null,$root.caffe.LayerParameter.prototype.window_data_param=null,$root.caffe.TransformationParameter=class{constructor(){this.mean_value=[]}static decode(e,a){const r=new $root.caffe.TransformationParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.scale=e.float();break;case 2:r.mirror=e.bool();break;case 3:r.crop_size=e.uint32();break;case 4:r.mean_file=e.string();break;case 5:r.mean_value=e.floats(r.mean_value,a);break;case 6:r.force_color=e.bool();break;case 7:r.force_gray=e.bool();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.TransformationParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"scale":a.scale=e.float();break;case"mirror":a.mirror=e.boolean();break;case"crop_size":a.crop_size=e.integer();break;case"mean_file":a.mean_file=e.string();break;case"mean_value":e.array(a.mean_value,(()=>e.float()));break;case"force_color":a.force_color=e.boolean();break;case"force_gray":a.force_gray=e.boolean();break;default:e.field(r,a)}}return a}},$root.caffe.TransformationParameter.prototype.scale=1,$root.caffe.TransformationParameter.prototype.mirror=!1,$root.caffe.TransformationParameter.prototype.crop_size=0,$root.caffe.TransformationParameter.prototype.mean_file="",$root.caffe.TransformationParameter.prototype.force_color=!1,$root.caffe.TransformationParameter.prototype.force_gray=!1,$root.caffe.LossParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.LossParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.ignore_label=e.int32();break;case 3:r.normalization=e.int32();break;case 2:r.normalize=e.bool();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.LossParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"ignore_label":a.ignore_label=e.integer();break;case"normalization":a.normalization=e.enum($root.caffe.LossParameter.NormalizationMode);break;case"normalize":a.normalize=e.boolean();break;default:e.field(r,a)}}return a}},$root.caffe.LossParameter.prototype.ignore_label=0,$root.caffe.LossParameter.prototype.normalization=1,$root.caffe.LossParameter.prototype.normalize=!1,$root.caffe.LossParameter.NormalizationMode={FULL:0,VALID:1,BATCH_SIZE:2,NONE:3},$root.caffe.AccuracyParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.AccuracyParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.top_k=e.uint32();break;case 2:r.axis=e.int32();break;case 3:r.ignore_label=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.AccuracyParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"top_k":a.top_k=e.integer();break;case"axis":a.axis=e.integer();break;case"ignore_label":a.ignore_label=e.integer();break;default:e.field(r,a)}}return a}},$root.caffe.AccuracyParameter.prototype.top_k=1,$root.caffe.AccuracyParameter.prototype.axis=1,$root.caffe.AccuracyParameter.prototype.ignore_label=0,$root.caffe.ArgMaxParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.ArgMaxParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.out_max_val=e.bool();break;case 2:r.top_k=e.uint32();break;case 3:r.axis=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ArgMaxParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"out_max_val":a.out_max_val=e.boolean();break;case"top_k":a.top_k=e.integer();break;case"axis":a.axis=e.integer();break;default:e.field(r,a)}}return a}},$root.caffe.ArgMaxParameter.prototype.out_max_val=!1,$root.caffe.ArgMaxParameter.prototype.top_k=1,$root.caffe.ArgMaxParameter.prototype.axis=0,$root.caffe.ClipParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.ClipParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.min=e.float();break;case 2:r.max=e.float();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ClipParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"min":a.min=e.float();break;case"max":a.max=e.float();break;default:e.field(r,a)}}return a}},$root.caffe.ClipParameter.prototype.min=0,$root.caffe.ClipParameter.prototype.max=0,$root.caffe.ConcatParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.ConcatParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 2:r.axis=e.int32();break;case 1:r.concat_dim=e.uint32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ConcatParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"axis":a.axis=e.integer();break;case"concat_dim":a.concat_dim=e.integer();break;default:e.field(r,a)}}return a}},$root.caffe.ConcatParameter.prototype.axis=1,$root.caffe.ConcatParameter.prototype.concat_dim=1,$root.caffe.BatchNormParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.BatchNormParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.use_global_stats=e.bool();break;case 2:r.moving_average_fraction=e.float();break;case 3:r.eps=e.float();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.BatchNormParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"use_global_stats":a.use_global_stats=e.boolean();break;case"moving_average_fraction":a.moving_average_fraction=e.float();break;case"eps":a.eps=e.float();break;default:e.field(r,a)}}return a}},$root.caffe.BatchNormParameter.prototype.use_global_stats=!1,$root.caffe.BatchNormParameter.prototype.moving_average_fraction=.999,$root.caffe.BatchNormParameter.prototype.eps=1e-5,$root.caffe.BiasParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.BiasParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.axis=e.int32();break;case 2:r.num_axes=e.int32();break;case 3:r.filler=$root.caffe.FillerParameter.decode(e,e.uint32());break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.BiasParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"axis":a.axis=e.integer();break;case"num_axes":a.num_axes=e.integer();break;case"filler":a.filler=$root.caffe.FillerParameter.decodeText(e,!0);break;default:e.field(r,a)}}return a}},$root.caffe.BiasParameter.prototype.axis=1,$root.caffe.BiasParameter.prototype.num_axes=1,$root.caffe.BiasParameter.prototype.filler=null,$root.caffe.ContrastiveLossParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.ContrastiveLossParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.margin=e.float();break;case 2:r.legacy_version=e.bool();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ContrastiveLossParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"margin":a.margin=e.float();break;case"legacy_version":a.legacy_version=e.boolean();break;default:e.field(r,a)}}return a}},$root.caffe.ContrastiveLossParameter.prototype.margin=1,$root.caffe.ContrastiveLossParameter.prototype.legacy_version=!1,$root.caffe.ConvolutionParameter=class{constructor(){this.pad=[],this.kernel_size=[],this.stride=[],this.dilation=[]}static decode(e,a){const r=new $root.caffe.ConvolutionParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.num_output=e.uint32();break;case 2:r.bias_term=e.bool();break;case 3:r.pad=e.array(r.pad,(()=>e.uint32()),a);break;case 4:r.kernel_size=e.array(r.kernel_size,(()=>e.uint32()),a);break;case 6:r.stride=e.array(r.stride,(()=>e.uint32()),a);break;case 18:r.dilation=e.array(r.dilation,(()=>e.uint32()),a);break;case 9:r.pad_h=e.uint32();break;case 10:r.pad_w=e.uint32();break;case 11:r.kernel_h=e.uint32();break;case 12:r.kernel_w=e.uint32();break;case 13:r.stride_h=e.uint32();break;case 14:r.stride_w=e.uint32();break;case 5:r.group=e.uint32();break;case 7:r.weight_filler=$root.caffe.FillerParameter.decode(e,e.uint32());break;case 8:r.bias_filler=$root.caffe.FillerParameter.decode(e,e.uint32());break;case 15:r.engine=e.int32();break;case 16:r.axis=e.int32();break;case 17:r.force_nd_im2col=e.bool();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ConvolutionParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"num_output":a.num_output=e.integer();break;case"bias_term":a.bias_term=e.boolean();break;case"pad":e.array(a.pad,(()=>e.integer()));break;case"kernel_size":e.array(a.kernel_size,(()=>e.integer()));break;case"stride":e.array(a.stride,(()=>e.integer()));break;case"dilation":e.array(a.dilation,(()=>e.integer()));break;case"pad_h":a.pad_h=e.integer();break;case"pad_w":a.pad_w=e.integer();break;case"kernel_h":a.kernel_h=e.integer();break;case"kernel_w":a.kernel_w=e.integer();break;case"stride_h":a.stride_h=e.integer();break;case"stride_w":a.stride_w=e.integer();break;case"group":a.group=e.integer();break;case"weight_filler":a.weight_filler=$root.caffe.FillerParameter.decodeText(e,!0);break;case"bias_filler":a.bias_filler=$root.caffe.FillerParameter.decodeText(e,!0);break;case"engine":a.engine=e.enum($root.caffe.ConvolutionParameter.Engine);break;case"axis":a.axis=e.integer();break;case"force_nd_im2col":a.force_nd_im2col=e.boolean();break;default:e.field(r,a)}}return a}},$root.caffe.ConvolutionParameter.prototype.num_output=0,$root.caffe.ConvolutionParameter.prototype.bias_term=!0,$root.caffe.ConvolutionParameter.prototype.pad_h=0,$root.caffe.ConvolutionParameter.prototype.pad_w=0,$root.caffe.ConvolutionParameter.prototype.kernel_h=0,$root.caffe.ConvolutionParameter.prototype.kernel_w=0,$root.caffe.ConvolutionParameter.prototype.stride_h=0,$root.caffe.ConvolutionParameter.prototype.stride_w=0,$root.caffe.ConvolutionParameter.prototype.group=1,$root.caffe.ConvolutionParameter.prototype.weight_filler=null,$root.caffe.ConvolutionParameter.prototype.bias_filler=null,$root.caffe.ConvolutionParameter.prototype.engine=0,$root.caffe.ConvolutionParameter.prototype.axis=1,$root.caffe.ConvolutionParameter.prototype.force_nd_im2col=!1,$root.caffe.ConvolutionParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.CropParameter=class{constructor(){this.offset=[]}static decode(e,a){const r=new $root.caffe.CropParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.axis=e.int32();break;case 2:r.offset=e.array(r.offset,(()=>e.uint32()),a);break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.CropParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"axis":a.axis=e.integer();break;case"offset":e.array(a.offset,(()=>e.integer()));break;default:e.field(r,a)}}return a}},$root.caffe.CropParameter.prototype.axis=2,$root.caffe.DataParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.DataParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.source=e.string();break;case 4:r.batch_size=e.uint32();break;case 7:r.rand_skip=e.uint32();break;case 8:r.backend=e.int32();break;case 2:r.scale=e.float();break;case 3:r.mean_file=e.string();break;case 5:r.crop_size=e.uint32();break;case 6:r.mirror=e.bool();break;case 9:r.force_encoded_color=e.bool();break;case 10:r.prefetch=e.uint32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.DataParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"source":a.source=e.string();break;case"batch_size":a.batch_size=e.integer();break;case"rand_skip":a.rand_skip=e.integer();break;case"backend":a.backend=e.enum($root.caffe.DataParameter.DB);break;case"scale":a.scale=e.float();break;case"mean_file":a.mean_file=e.string();break;case"crop_size":a.crop_size=e.integer();break;case"mirror":a.mirror=e.boolean();break;case"force_encoded_color":a.force_encoded_color=e.boolean();break;case"prefetch":a.prefetch=e.integer();break;default:e.field(r,a)}}return a}},$root.caffe.DataParameter.prototype.source="",$root.caffe.DataParameter.prototype.batch_size=0,$root.caffe.DataParameter.prototype.rand_skip=0,$root.caffe.DataParameter.prototype.backend=0,$root.caffe.DataParameter.prototype.scale=1,$root.caffe.DataParameter.prototype.mean_file="",$root.caffe.DataParameter.prototype.crop_size=0,$root.caffe.DataParameter.prototype.mirror=!1,$root.caffe.DataParameter.prototype.force_encoded_color=!1,$root.caffe.DataParameter.prototype.prefetch=4,$root.caffe.DataParameter.DB={LEVELDB:0,LMDB:1},$root.caffe.DropoutParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.DropoutParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.dropout_ratio=e.float();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.DropoutParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"dropout_ratio":a.dropout_ratio=e.float();break;default:e.field(r,a)}}return a}},$root.caffe.DropoutParameter.prototype.dropout_ratio=.5,$root.caffe.DummyDataParameter=class{constructor(){this.data_filler=[],this.shape=[],this.num=[],this.channels=[],this.height=[],this.width=[]}static decode(e,a){const r=new $root.caffe.DummyDataParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.data_filler.push($root.caffe.FillerParameter.decode(e,e.uint32()));break;case 6:r.shape.push($root.caffe.BlobShape.decode(e,e.uint32()));break;case 2:r.num=e.array(r.num,(()=>e.uint32()),a);break;case 3:r.channels=e.array(r.channels,(()=>e.uint32()),a);break;case 4:r.height=e.array(r.height,(()=>e.uint32()),a);break;case 5:r.width=e.array(r.width,(()=>e.uint32()),a);break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.DummyDataParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"data_filler":a.data_filler.push($root.caffe.FillerParameter.decodeText(e,!0));break;case"shape":a.shape.push($root.caffe.BlobShape.decodeText(e,!0));break;case"num":e.array(a.num,(()=>e.integer()));break;case"channels":e.array(a.channels,(()=>e.integer()));break;case"height":e.array(a.height,(()=>e.integer()));break;case"width":e.array(a.width,(()=>e.integer()));break;default:e.field(r,a)}}return a}},$root.caffe.EltwiseParameter=class{constructor(){this.coeff=[]}static decode(e,a){const r=new $root.caffe.EltwiseParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.operation=e.int32();break;case 2:r.coeff=e.floats(r.coeff,a);break;case 3:r.stable_prod_grad=e.bool();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.EltwiseParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"operation":a.operation=e.enum($root.caffe.EltwiseParameter.EltwiseOp);break;case"coeff":e.array(a.coeff,(()=>e.float()));break;case"stable_prod_grad":a.stable_prod_grad=e.boolean();break;default:e.field(r,a)}}return a}},$root.caffe.EltwiseParameter.prototype.operation=1,$root.caffe.EltwiseParameter.prototype.stable_prod_grad=!0,$root.caffe.EltwiseParameter.EltwiseOp={PROD:0,SUM:1,MAX:2},$root.caffe.ELUParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.ELUParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.alpha=e.float();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ELUParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"alpha":a.alpha=e.float();break;default:e.field(r,a)}}return a}},$root.caffe.ELUParameter.prototype.alpha=1,$root.caffe.EmbedParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.EmbedParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.num_output=e.uint32();break;case 2:r.input_dim=e.uint32();break;case 3:r.bias_term=e.bool();break;case 4:r.weight_filler=$root.caffe.FillerParameter.decode(e,e.uint32());break;case 5:r.bias_filler=$root.caffe.FillerParameter.decode(e,e.uint32());break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.EmbedParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"num_output":a.num_output=e.integer();break;case"input_dim":a.input_dim=e.integer();break;case"bias_term":a.bias_term=e.boolean();break;case"weight_filler":a.weight_filler=$root.caffe.FillerParameter.decodeText(e,!0);break;case"bias_filler":a.bias_filler=$root.caffe.FillerParameter.decodeText(e,!0);break;default:e.field(r,a)}}return a}},$root.caffe.EmbedParameter.prototype.num_output=0,$root.caffe.EmbedParameter.prototype.input_dim=0,$root.caffe.EmbedParameter.prototype.bias_term=!0,$root.caffe.EmbedParameter.prototype.weight_filler=null,$root.caffe.EmbedParameter.prototype.bias_filler=null,$root.caffe.ExpParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.ExpParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.base=e.float();break;case 2:r.scale=e.float();break;case 3:r.shift=e.float();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ExpParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"base":a.base=e.float();break;case"scale":a.scale=e.float();break;case"shift":a.shift=e.float();break;default:e.field(r,a)}}return a}},$root.caffe.ExpParameter.prototype.base=-1,$root.caffe.ExpParameter.prototype.scale=1,$root.caffe.ExpParameter.prototype.shift=0,$root.caffe.FlattenParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.FlattenParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.axis=e.int32();break;case 2:r.end_axis=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.FlattenParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"axis":a.axis=e.integer();break;case"end_axis":a.end_axis=e.integer();break;default:e.field(r,a)}}return a}},$root.caffe.FlattenParameter.prototype.axis=1,$root.caffe.FlattenParameter.prototype.end_axis=-1,$root.caffe.HDF5DataParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.HDF5DataParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.source=e.string();break;case 2:r.batch_size=e.uint32();break;case 3:r.shuffle=e.bool();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.HDF5DataParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"source":a.source=e.string();break;case"batch_size":a.batch_size=e.integer();break;case"shuffle":a.shuffle=e.boolean();break;default:e.field(r,a)}}return a}},$root.caffe.HDF5DataParameter.prototype.source="",$root.caffe.HDF5DataParameter.prototype.batch_size=0,$root.caffe.HDF5DataParameter.prototype.shuffle=!1,$root.caffe.HDF5OutputParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.HDF5OutputParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.file_name=e.string();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.HDF5OutputParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"file_name":a.file_name=e.string();break;default:e.field(r,a)}}return a}},$root.caffe.HDF5OutputParameter.prototype.file_name="",$root.caffe.HingeLossParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.HingeLossParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.norm=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.HingeLossParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"norm":a.norm=e.enum($root.caffe.HingeLossParameter.Norm);break;default:e.field(r,a)}}return a}},$root.caffe.HingeLossParameter.prototype.norm=1,$root.caffe.HingeLossParameter.Norm={L1:1,L2:2},$root.caffe.ImageDataParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.ImageDataParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.source=e.string();break;case 4:r.batch_size=e.uint32();break;case 7:r.rand_skip=e.uint32();break;case 8:r.shuffle=e.bool();break;case 9:r.new_height=e.uint32();break;case 10:r.new_width=e.uint32();break;case 11:r.is_color=e.bool();break;case 2:r.scale=e.float();break;case 3:r.mean_file=e.string();break;case 5:r.crop_size=e.uint32();break;case 6:r.mirror=e.bool();break;case 12:r.root_folder=e.string();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ImageDataParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"source":a.source=e.string();break;case"batch_size":a.batch_size=e.integer();break;case"rand_skip":a.rand_skip=e.integer();break;case"shuffle":a.shuffle=e.boolean();break;case"new_height":a.new_height=e.integer();break;case"new_width":a.new_width=e.integer();break;case"is_color":a.is_color=e.boolean();break;case"scale":a.scale=e.float();break;case"mean_file":a.mean_file=e.string();break;case"crop_size":a.crop_size=e.integer();break;case"mirror":a.mirror=e.boolean();break;case"root_folder":a.root_folder=e.string();break;default:e.field(r,a)}}return a}},$root.caffe.ImageDataParameter.prototype.source="",$root.caffe.ImageDataParameter.prototype.batch_size=1,$root.caffe.ImageDataParameter.prototype.rand_skip=0,$root.caffe.ImageDataParameter.prototype.shuffle=!1,$root.caffe.ImageDataParameter.prototype.new_height=0,$root.caffe.ImageDataParameter.prototype.new_width=0,$root.caffe.ImageDataParameter.prototype.is_color=!0,$root.caffe.ImageDataParameter.prototype.scale=1,$root.caffe.ImageDataParameter.prototype.mean_file="",$root.caffe.ImageDataParameter.prototype.crop_size=0,$root.caffe.ImageDataParameter.prototype.mirror=!1,$root.caffe.ImageDataParameter.prototype.root_folder="",$root.caffe.InfogainLossParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.InfogainLossParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.source=e.string();break;case 2:r.axis=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.InfogainLossParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"source":a.source=e.string();break;case"axis":a.axis=e.integer();break;default:e.field(r,a)}}return a}},$root.caffe.InfogainLossParameter.prototype.source="",$root.caffe.InfogainLossParameter.prototype.axis=1,$root.caffe.InnerProductParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.InnerProductParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.num_output=e.uint32();break;case 2:r.bias_term=e.bool();break;case 3:r.weight_filler=$root.caffe.FillerParameter.decode(e,e.uint32());break;case 4:r.bias_filler=$root.caffe.FillerParameter.decode(e,e.uint32());break;case 5:r.axis=e.int32();break;case 6:r.transpose=e.bool();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.InnerProductParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"num_output":a.num_output=e.integer();break;case"bias_term":a.bias_term=e.boolean();break;case"weight_filler":a.weight_filler=$root.caffe.FillerParameter.decodeText(e,!0);break;case"bias_filler":a.bias_filler=$root.caffe.FillerParameter.decodeText(e,!0);break;case"axis":a.axis=e.integer();break;case"transpose":a.transpose=e.boolean();break;default:e.field(r,a)}}return a}},$root.caffe.InnerProductParameter.prototype.num_output=0,$root.caffe.InnerProductParameter.prototype.bias_term=!0,$root.caffe.InnerProductParameter.prototype.weight_filler=null,$root.caffe.InnerProductParameter.prototype.bias_filler=null,$root.caffe.InnerProductParameter.prototype.axis=1,$root.caffe.InnerProductParameter.prototype.transpose=!1,$root.caffe.InputParameter=class{constructor(){this.shape=[]}static decode(e,a){const r=new $root.caffe.InputParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.shape.push($root.caffe.BlobShape.decode(e,e.uint32()));break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.InputParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"shape":a.shape.push($root.caffe.BlobShape.decodeText(e,!0));break;default:e.field(r,a)}}return a}},$root.caffe.LogParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.LogParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.base=e.float();break;case 2:r.scale=e.float();break;case 3:r.shift=e.float();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.LogParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"base":a.base=e.float();break;case"scale":a.scale=e.float();break;case"shift":a.shift=e.float();break;default:e.field(r,a)}}return a}},$root.caffe.LogParameter.prototype.base=-1,$root.caffe.LogParameter.prototype.scale=1,$root.caffe.LogParameter.prototype.shift=0,$root.caffe.LRNParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.LRNParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.local_size=e.uint32();break;case 2:r.alpha=e.float();break;case 3:r.beta=e.float();break;case 4:r.norm_region=e.int32();break;case 5:r.k=e.float();break;case 6:r.engine=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.LRNParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"local_size":a.local_size=e.integer();break;case"alpha":a.alpha=e.float();break;case"beta":a.beta=e.float();break;case"norm_region":a.norm_region=e.enum($root.caffe.LRNParameter.NormRegion);break;case"k":a.k=e.float();break;case"engine":a.engine=e.enum($root.caffe.LRNParameter.Engine);break;default:e.field(r,a)}}return a}},$root.caffe.LRNParameter.prototype.local_size=5,$root.caffe.LRNParameter.prototype.alpha=1,$root.caffe.LRNParameter.prototype.beta=.75,$root.caffe.LRNParameter.prototype.norm_region=0,$root.caffe.LRNParameter.prototype.k=1,$root.caffe.LRNParameter.prototype.engine=0,$root.caffe.LRNParameter.NormRegion={ACROSS_CHANNELS:0,WITHIN_CHANNEL:1},$root.caffe.LRNParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.MemoryDataParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.MemoryDataParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.batch_size=e.uint32();break;case 2:r.channels=e.uint32();break;case 3:r.height=e.uint32();break;case 4:r.width=e.uint32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.MemoryDataParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"batch_size":a.batch_size=e.integer();break;case"channels":a.channels=e.integer();break;case"height":a.height=e.integer();break;case"width":a.width=e.integer();break;default:e.field(r,a)}}return a}},$root.caffe.MemoryDataParameter.prototype.batch_size=0,$root.caffe.MemoryDataParameter.prototype.channels=0,$root.caffe.MemoryDataParameter.prototype.height=0,$root.caffe.MemoryDataParameter.prototype.width=0,$root.caffe.MVNParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.MVNParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.normalize_variance=e.bool();break;case 2:r.across_channels=e.bool();break;case 3:r.eps=e.float();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.MVNParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"normalize_variance":a.normalize_variance=e.boolean();break;case"across_channels":a.across_channels=e.boolean();break;case"eps":a.eps=e.float();break;default:e.field(r,a)}}return a}},$root.caffe.MVNParameter.prototype.normalize_variance=!0,$root.caffe.MVNParameter.prototype.across_channels=!1,$root.caffe.MVNParameter.prototype.eps=1e-9,$root.caffe.ParameterParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.ParameterParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.shape=$root.caffe.BlobShape.decode(e,e.uint32());break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ParameterParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"shape":a.shape=$root.caffe.BlobShape.decodeText(e,!0);break;default:e.field(r,a)}}return a}},$root.caffe.ParameterParameter.prototype.shape=null,$root.caffe.PoolingParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.PoolingParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.pool=e.int32();break;case 4:r.pad=e.uint32();break;case 9:r.pad_h=e.uint32();break;case 10:r.pad_w=e.uint32();break;case 2:r.kernel_size=e.uint32();break;case 5:r.kernel_h=e.uint32();break;case 6:r.kernel_w=e.uint32();break;case 3:r.stride=e.uint32();break;case 7:r.stride_h=e.uint32();break;case 8:r.stride_w=e.uint32();break;case 11:r.engine=e.int32();break;case 12:r.global_pooling=e.bool();break;case 13:r.round_mode=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.PoolingParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"pool":a.pool=e.enum($root.caffe.PoolingParameter.PoolMethod);break;case"pad":a.pad=e.integer();break;case"pad_h":a.pad_h=e.integer();break;case"pad_w":a.pad_w=e.integer();break;case"kernel_size":a.kernel_size=e.integer();break;case"kernel_h":a.kernel_h=e.integer();break;case"kernel_w":a.kernel_w=e.integer();break;case"stride":a.stride=e.integer();break;case"stride_h":a.stride_h=e.integer();break;case"stride_w":a.stride_w=e.integer();break;case"engine":a.engine=e.enum($root.caffe.PoolingParameter.Engine);break;case"global_pooling":a.global_pooling=e.boolean();break;case"round_mode":a.round_mode=e.enum($root.caffe.PoolingParameter.RoundMode);break;default:e.field(r,a)}}return a}},$root.caffe.PoolingParameter.prototype.pool=0,$root.caffe.PoolingParameter.prototype.pad=0,$root.caffe.PoolingParameter.prototype.pad_h=0,$root.caffe.PoolingParameter.prototype.pad_w=0,$root.caffe.PoolingParameter.prototype.kernel_size=0,$root.caffe.PoolingParameter.prototype.kernel_h=0,$root.caffe.PoolingParameter.prototype.kernel_w=0,$root.caffe.PoolingParameter.prototype.stride=1,$root.caffe.PoolingParameter.prototype.stride_h=0,$root.caffe.PoolingParameter.prototype.stride_w=0,$root.caffe.PoolingParameter.prototype.engine=0,$root.caffe.PoolingParameter.prototype.global_pooling=!1,$root.caffe.PoolingParameter.prototype.round_mode=0,$root.caffe.PoolingParameter.PoolMethod={MAX:0,AVE:1,STOCHASTIC:2},$root.caffe.PoolingParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.PoolingParameter.RoundMode={CEIL:0,FLOOR:1},$root.caffe.PowerParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.PowerParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.power=e.float();break;case 2:r.scale=e.float();break;case 3:r.shift=e.float();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.PowerParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"power":a.power=e.float();break;case"scale":a.scale=e.float();break;case"shift":a.shift=e.float();break;default:e.field(r,a)}}return a}},$root.caffe.PowerParameter.prototype.power=1,$root.caffe.PowerParameter.prototype.scale=1,$root.caffe.PowerParameter.prototype.shift=0,$root.caffe.PythonParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.PythonParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.module=e.string();break;case 2:r.layer=e.string();break;case 3:r.param_str=e.string();break;case 4:r.share_in_parallel=e.bool();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.PythonParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"module":a.module=e.string();break;case"layer":a.layer=e.string();break;case"param_str":a.param_str=e.string();break;case"share_in_parallel":a.share_in_parallel=e.boolean();break;default:e.field(r,a)}}return a}},$root.caffe.PythonParameter.prototype.module="",$root.caffe.PythonParameter.prototype.layer="",$root.caffe.PythonParameter.prototype.param_str="",$root.caffe.PythonParameter.prototype.share_in_parallel=!1,$root.caffe.RecurrentParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.RecurrentParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.num_output=e.uint32();break;case 2:r.weight_filler=$root.caffe.FillerParameter.decode(e,e.uint32());break;case 3:r.bias_filler=$root.caffe.FillerParameter.decode(e,e.uint32());break;case 4:r.debug_info=e.bool();break;case 5:r.expose_hidden=e.bool();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.RecurrentParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"num_output":a.num_output=e.integer();break;case"weight_filler":a.weight_filler=$root.caffe.FillerParameter.decodeText(e,!0);break;case"bias_filler":a.bias_filler=$root.caffe.FillerParameter.decodeText(e,!0);break;case"debug_info":a.debug_info=e.boolean();break;case"expose_hidden":a.expose_hidden=e.boolean();break;default:e.field(r,a)}}return a}},$root.caffe.RecurrentParameter.prototype.num_output=0,$root.caffe.RecurrentParameter.prototype.weight_filler=null,$root.caffe.RecurrentParameter.prototype.bias_filler=null,$root.caffe.RecurrentParameter.prototype.debug_info=!1,$root.caffe.RecurrentParameter.prototype.expose_hidden=!1,$root.caffe.ReductionParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.ReductionParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.operation=e.int32();break;case 2:r.axis=e.int32();break;case 3:r.coeff=e.float();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ReductionParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"operation":a.operation=e.enum($root.caffe.ReductionParameter.ReductionOp);break;case"axis":a.axis=e.integer();break;case"coeff":a.coeff=e.float();break;default:e.field(r,a)}}return a}},$root.caffe.ReductionParameter.prototype.operation=1,$root.caffe.ReductionParameter.prototype.axis=0,$root.caffe.ReductionParameter.prototype.coeff=1,$root.caffe.ReductionParameter.ReductionOp={SUM:1,ASUM:2,SUMSQ:3,MEAN:4},$root.caffe.ReLUParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.ReLUParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.negative_slope=e.float();break;case 2:r.engine=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ReLUParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"negative_slope":a.negative_slope=e.float();break;case"engine":a.engine=e.enum($root.caffe.ReLUParameter.Engine);break;default:e.field(r,a)}}return a}},$root.caffe.ReLUParameter.prototype.negative_slope=0,$root.caffe.ReLUParameter.prototype.engine=0,$root.caffe.ReLUParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.ReshapeParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.ReshapeParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.shape=$root.caffe.BlobShape.decode(e,e.uint32());break;case 2:r.axis=e.int32();break;case 3:r.num_axes=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ReshapeParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"shape":a.shape=$root.caffe.BlobShape.decodeText(e,!0);break;case"axis":a.axis=e.integer();break;case"num_axes":a.num_axes=e.integer();break;default:e.field(r,a)}}return a}},$root.caffe.ReshapeParameter.prototype.shape=null,$root.caffe.ReshapeParameter.prototype.axis=0,$root.caffe.ReshapeParameter.prototype.num_axes=-1,$root.caffe.ScaleParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.ScaleParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.axis=e.int32();break;case 2:r.num_axes=e.int32();break;case 3:r.filler=$root.caffe.FillerParameter.decode(e,e.uint32());break;case 4:r.bias_term=e.bool();break;case 5:r.bias_filler=$root.caffe.FillerParameter.decode(e,e.uint32());break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ScaleParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"axis":a.axis=e.integer();break;case"num_axes":a.num_axes=e.integer();break;case"filler":a.filler=$root.caffe.FillerParameter.decodeText(e,!0);break;case"bias_term":a.bias_term=e.boolean();break;case"bias_filler":a.bias_filler=$root.caffe.FillerParameter.decodeText(e,!0);break;default:e.field(r,a)}}return a}},$root.caffe.ScaleParameter.prototype.axis=1,$root.caffe.ScaleParameter.prototype.num_axes=1,$root.caffe.ScaleParameter.prototype.filler=null,$root.caffe.ScaleParameter.prototype.bias_term=!1,$root.caffe.ScaleParameter.prototype.bias_filler=null,$root.caffe.SigmoidParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.SigmoidParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.engine=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.SigmoidParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"engine":a.engine=e.enum($root.caffe.SigmoidParameter.Engine);break;default:e.field(r,a)}}return a}},$root.caffe.SigmoidParameter.prototype.engine=0,$root.caffe.SigmoidParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.SliceParameter=class{constructor(){this.slice_point=[]}static decode(e,a){const r=new $root.caffe.SliceParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 3:r.axis=e.int32();break;case 2:r.slice_point=e.array(r.slice_point,(()=>e.uint32()),a);break;case 1:r.slice_dim=e.uint32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.SliceParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"axis":a.axis=e.integer();break;case"slice_point":e.array(a.slice_point,(()=>e.integer()));break;case"slice_dim":a.slice_dim=e.integer();break;default:e.field(r,a)}}return a}},$root.caffe.SliceParameter.prototype.axis=1,$root.caffe.SliceParameter.prototype.slice_dim=1,$root.caffe.SoftmaxParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.SoftmaxParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.engine=e.int32();break;case 2:r.axis=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.SoftmaxParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"engine":a.engine=e.enum($root.caffe.SoftmaxParameter.Engine);break;case"axis":a.axis=e.integer();break;default:e.field(r,a)}}return a}},$root.caffe.SoftmaxParameter.prototype.engine=0,$root.caffe.SoftmaxParameter.prototype.axis=1,$root.caffe.SoftmaxParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.SwishParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.SwishParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.beta=e.float();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.SwishParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"beta":a.beta=e.float();break;default:e.field(r,a)}}return a}},$root.caffe.SwishParameter.prototype.beta=1,$root.caffe.TanHParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.TanHParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.engine=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.TanHParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"engine":a.engine=e.enum($root.caffe.TanHParameter.Engine);break;default:e.field(r,a)}}return a}},$root.caffe.TanHParameter.prototype.engine=0,$root.caffe.TanHParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.TileParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.TileParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.axis=e.int32();break;case 2:r.tiles=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.TileParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"axis":a.axis=e.integer();break;case"tiles":a.tiles=e.integer();break;default:e.field(r,a)}}return a}},$root.caffe.TileParameter.prototype.axis=1,$root.caffe.TileParameter.prototype.tiles=0,$root.caffe.ThresholdParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.ThresholdParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.threshold=e.float();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.ThresholdParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"threshold":a.threshold=e.float();break;default:e.field(r,a)}}return a}},$root.caffe.ThresholdParameter.prototype.threshold=0,$root.caffe.WindowDataParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.WindowDataParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.source=e.string();break;case 2:r.scale=e.float();break;case 3:r.mean_file=e.string();break;case 4:r.batch_size=e.uint32();break;case 5:r.crop_size=e.uint32();break;case 6:r.mirror=e.bool();break;case 7:r.fg_threshold=e.float();break;case 8:r.bg_threshold=e.float();break;case 9:r.fg_fraction=e.float();break;case 10:r.context_pad=e.uint32();break;case 11:r.crop_mode=e.string();break;case 12:r.cache_images=e.bool();break;case 13:r.root_folder=e.string();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.WindowDataParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"source":a.source=e.string();break;case"scale":a.scale=e.float();break;case"mean_file":a.mean_file=e.string();break;case"batch_size":a.batch_size=e.integer();break;case"crop_size":a.crop_size=e.integer();break;case"mirror":a.mirror=e.boolean();break;case"fg_threshold":a.fg_threshold=e.float();break;case"bg_threshold":a.bg_threshold=e.float();break;case"fg_fraction":a.fg_fraction=e.float();break;case"context_pad":a.context_pad=e.integer();break;case"crop_mode":a.crop_mode=e.string();break;case"cache_images":a.cache_images=e.boolean();break;case"root_folder":a.root_folder=e.string();break;default:e.field(r,a)}}return a}},$root.caffe.WindowDataParameter.prototype.source="",$root.caffe.WindowDataParameter.prototype.scale=1,$root.caffe.WindowDataParameter.prototype.mean_file="",$root.caffe.WindowDataParameter.prototype.batch_size=0,$root.caffe.WindowDataParameter.prototype.crop_size=0,$root.caffe.WindowDataParameter.prototype.mirror=!1,$root.caffe.WindowDataParameter.prototype.fg_threshold=.5,$root.caffe.WindowDataParameter.prototype.bg_threshold=.5,$root.caffe.WindowDataParameter.prototype.fg_fraction=.25,$root.caffe.WindowDataParameter.prototype.context_pad=0,$root.caffe.WindowDataParameter.prototype.crop_mode="warp",$root.caffe.WindowDataParameter.prototype.cache_images=!1,$root.caffe.WindowDataParameter.prototype.root_folder="",$root.caffe.SPPParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.SPPParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.pyramid_height=e.uint32();break;case 2:r.pool=e.int32();break;case 6:r.engine=e.int32();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.SPPParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"pyramid_height":a.pyramid_height=e.integer();break;case"pool":a.pool=e.enum($root.caffe.SPPParameter.PoolMethod);break;case"engine":a.engine=e.enum($root.caffe.SPPParameter.Engine);break;default:e.field(r,a)}}return a}},$root.caffe.SPPParameter.prototype.pyramid_height=0,$root.caffe.SPPParameter.prototype.pool=0,$root.caffe.SPPParameter.prototype.engine=0,$root.caffe.SPPParameter.PoolMethod={MAX:0,AVE:1,STOCHASTIC:2},$root.caffe.SPPParameter.Engine={DEFAULT:0,CAFFE:1,CUDNN:2},$root.caffe.V1LayerParameter=class{constructor(){this.bottom=[],this.top=[],this.include=[],this.exclude=[],this.blobs=[],this.param=[],this.blob_share_mode=[],this.blobs_lr=[],this.weight_decay=[],this.loss_weight=[]}static decode(e,a){const r=new $root.caffe.V1LayerParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 2:r.bottom.push(e.string());break;case 3:r.top.push(e.string());break;case 4:r.name=e.string();break;case 32:r.include.push($root.caffe.NetStateRule.decode(e,e.uint32()));break;case 33:r.exclude.push($root.caffe.NetStateRule.decode(e,e.uint32()));break;case 5:r.type=e.int32();break;case 6:r.blobs.push($root.caffe.BlobProto.decode(e,e.uint32()));break;case 1001:r.param.push(e.string());break;case 1002:r.blob_share_mode=e.array(r.blob_share_mode,(()=>e.int32()),a);break;case 7:r.blobs_lr=e.floats(r.blobs_lr,a);break;case 8:r.weight_decay=e.floats(r.weight_decay,a);break;case 35:r.loss_weight=e.floats(r.loss_weight,a);break;case 27:r.accuracy_param=$root.caffe.AccuracyParameter.decode(e,e.uint32());break;case 23:r.argmax_param=$root.caffe.ArgMaxParameter.decode(e,e.uint32());break;case 9:r.concat_param=$root.caffe.ConcatParameter.decode(e,e.uint32());break;case 40:r.contrastive_loss_param=$root.caffe.ContrastiveLossParameter.decode(e,e.uint32());break;case 10:r.convolution_param=$root.caffe.ConvolutionParameter.decode(e,e.uint32());break;case 11:r.data_param=$root.caffe.DataParameter.decode(e,e.uint32());break;case 12:r.dropout_param=$root.caffe.DropoutParameter.decode(e,e.uint32());break;case 26:r.dummy_data_param=$root.caffe.DummyDataParameter.decode(e,e.uint32());break;case 24:r.eltwise_param=$root.caffe.EltwiseParameter.decode(e,e.uint32());break;case 41:r.exp_param=$root.caffe.ExpParameter.decode(e,e.uint32());break;case 13:r.hdf5_data_param=$root.caffe.HDF5DataParameter.decode(e,e.uint32());break;case 14:r.hdf5_output_param=$root.caffe.HDF5OutputParameter.decode(e,e.uint32());break;case 29:r.hinge_loss_param=$root.caffe.HingeLossParameter.decode(e,e.uint32());break;case 15:r.image_data_param=$root.caffe.ImageDataParameter.decode(e,e.uint32());break;case 16:r.infogain_loss_param=$root.caffe.InfogainLossParameter.decode(e,e.uint32());break;case 17:r.inner_product_param=$root.caffe.InnerProductParameter.decode(e,e.uint32());break;case 18:r.lrn_param=$root.caffe.LRNParameter.decode(e,e.uint32());break;case 22:r.memory_data_param=$root.caffe.MemoryDataParameter.decode(e,e.uint32());break;case 34:r.mvn_param=$root.caffe.MVNParameter.decode(e,e.uint32());break;case 19:r.pooling_param=$root.caffe.PoolingParameter.decode(e,e.uint32());break;case 21:r.power_param=$root.caffe.PowerParameter.decode(e,e.uint32());break;case 30:r.relu_param=$root.caffe.ReLUParameter.decode(e,e.uint32());break;case 38:r.sigmoid_param=$root.caffe.SigmoidParameter.decode(e,e.uint32());break;case 39:r.softmax_param=$root.caffe.SoftmaxParameter.decode(e,e.uint32());break;case 31:r.slice_param=$root.caffe.SliceParameter.decode(e,e.uint32());break;case 37:r.tanh_param=$root.caffe.TanHParameter.decode(e,e.uint32());break;case 25:r.threshold_param=$root.caffe.ThresholdParameter.decode(e,e.uint32());break;case 20:r.window_data_param=$root.caffe.WindowDataParameter.decode(e,e.uint32());break;case 36:r.transform_param=$root.caffe.TransformationParameter.decode(e,e.uint32());break;case 42:r.loss_param=$root.caffe.LossParameter.decode(e,e.uint32());break;case 1:r.layer=$root.caffe.V0LayerParameter.decode(e,e.uint32());break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.V1LayerParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"bottom":e.array(a.bottom,(()=>e.string()));break;case"top":e.array(a.top,(()=>e.string()));break;case"name":a.name=e.string();break;case"include":a.include.push($root.caffe.NetStateRule.decodeText(e,!0));break;case"exclude":a.exclude.push($root.caffe.NetStateRule.decodeText(e,!0));break;case"type":a.type=e.enum($root.caffe.V1LayerParameter.LayerType);break;case"blobs":a.blobs.push($root.caffe.BlobProto.decodeText(e,!0));break;case"param":e.array(a.param,(()=>e.string()));break;case"blob_share_mode":e.array(a.blob_share_mode,(()=>e.enum($root.caffe.V1LayerParameter.DimCheckMode)));break;case"blobs_lr":e.array(a.blobs_lr,(()=>e.float()));break;case"weight_decay":e.array(a.weight_decay,(()=>e.float()));break;case"loss_weight":e.array(a.loss_weight,(()=>e.float()));break;case"accuracy_param":a.accuracy_param=$root.caffe.AccuracyParameter.decodeText(e,!0);break;case"argmax_param":a.argmax_param=$root.caffe.ArgMaxParameter.decodeText(e,!0);break;case"concat_param":a.concat_param=$root.caffe.ConcatParameter.decodeText(e,!0);break;case"contrastive_loss_param":a.contrastive_loss_param=$root.caffe.ContrastiveLossParameter.decodeText(e,!0);break;case"convolution_param":a.convolution_param=$root.caffe.ConvolutionParameter.decodeText(e,!0);break;case"data_param":a.data_param=$root.caffe.DataParameter.decodeText(e,!0);break;case"dropout_param":a.dropout_param=$root.caffe.DropoutParameter.decodeText(e,!0);break;case"dummy_data_param":a.dummy_data_param=$root.caffe.DummyDataParameter.decodeText(e,!0);break;case"eltwise_param":a.eltwise_param=$root.caffe.EltwiseParameter.decodeText(e,!0);break;case"exp_param":a.exp_param=$root.caffe.ExpParameter.decodeText(e,!0);break;case"hdf5_data_param":a.hdf5_data_param=$root.caffe.HDF5DataParameter.decodeText(e,!0);break;case"hdf5_output_param":a.hdf5_output_param=$root.caffe.HDF5OutputParameter.decodeText(e,!0);break;case"hinge_loss_param":a.hinge_loss_param=$root.caffe.HingeLossParameter.decodeText(e,!0);break;case"image_data_param":a.image_data_param=$root.caffe.ImageDataParameter.decodeText(e,!0);break;case"infogain_loss_param":a.infogain_loss_param=$root.caffe.InfogainLossParameter.decodeText(e,!0);break;case"inner_product_param":a.inner_product_param=$root.caffe.InnerProductParameter.decodeText(e,!0);break;case"lrn_param":a.lrn_param=$root.caffe.LRNParameter.decodeText(e,!0);break;case"memory_data_param":a.memory_data_param=$root.caffe.MemoryDataParameter.decodeText(e,!0);break;case"mvn_param":a.mvn_param=$root.caffe.MVNParameter.decodeText(e,!0);break;case"pooling_param":a.pooling_param=$root.caffe.PoolingParameter.decodeText(e,!0);break;case"power_param":a.power_param=$root.caffe.PowerParameter.decodeText(e,!0);break;case"relu_param":a.relu_param=$root.caffe.ReLUParameter.decodeText(e,!0);break;case"sigmoid_param":a.sigmoid_param=$root.caffe.SigmoidParameter.decodeText(e,!0);break;case"softmax_param":a.softmax_param=$root.caffe.SoftmaxParameter.decodeText(e,!0);break;case"slice_param":a.slice_param=$root.caffe.SliceParameter.decodeText(e,!0);break;case"tanh_param":a.tanh_param=$root.caffe.TanHParameter.decodeText(e,!0);break;case"threshold_param":a.threshold_param=$root.caffe.ThresholdParameter.decodeText(e,!0);break;case"window_data_param":a.window_data_param=$root.caffe.WindowDataParameter.decodeText(e,!0);break;case"transform_param":a.transform_param=$root.caffe.TransformationParameter.decodeText(e,!0);break;case"loss_param":a.loss_param=$root.caffe.LossParameter.decodeText(e,!0);break;case"layer":a.layer=$root.caffe.V0LayerParameter.decodeText(e,!0);break;default:e.field(r,a)}}return a}},$root.caffe.V1LayerParameter.prototype.name="",$root.caffe.V1LayerParameter.prototype.type=0,$root.caffe.V1LayerParameter.prototype.accuracy_param=null,$root.caffe.V1LayerParameter.prototype.argmax_param=null,$root.caffe.V1LayerParameter.prototype.concat_param=null,$root.caffe.V1LayerParameter.prototype.contrastive_loss_param=null,$root.caffe.V1LayerParameter.prototype.convolution_param=null,$root.caffe.V1LayerParameter.prototype.data_param=null,$root.caffe.V1LayerParameter.prototype.dropout_param=null,$root.caffe.V1LayerParameter.prototype.dummy_data_param=null,$root.caffe.V1LayerParameter.prototype.eltwise_param=null,$root.caffe.V1LayerParameter.prototype.exp_param=null,$root.caffe.V1LayerParameter.prototype.hdf5_data_param=null,$root.caffe.V1LayerParameter.prototype.hdf5_output_param=null,$root.caffe.V1LayerParameter.prototype.hinge_loss_param=null,$root.caffe.V1LayerParameter.prototype.image_data_param=null,$root.caffe.V1LayerParameter.prototype.infogain_loss_param=null,$root.caffe.V1LayerParameter.prototype.inner_product_param=null,$root.caffe.V1LayerParameter.prototype.lrn_param=null,$root.caffe.V1LayerParameter.prototype.memory_data_param=null,$root.caffe.V1LayerParameter.prototype.mvn_param=null,$root.caffe.V1LayerParameter.prototype.pooling_param=null,$root.caffe.V1LayerParameter.prototype.power_param=null,$root.caffe.V1LayerParameter.prototype.relu_param=null,$root.caffe.V1LayerParameter.prototype.sigmoid_param=null,$root.caffe.V1LayerParameter.prototype.softmax_param=null,$root.caffe.V1LayerParameter.prototype.slice_param=null,$root.caffe.V1LayerParameter.prototype.tanh_param=null,$root.caffe.V1LayerParameter.prototype.threshold_param=null,$root.caffe.V1LayerParameter.prototype.window_data_param=null,$root.caffe.V1LayerParameter.prototype.transform_param=null,$root.caffe.V1LayerParameter.prototype.loss_param=null,$root.caffe.V1LayerParameter.prototype.layer=null,$root.caffe.V1LayerParameter.LayerType={NONE:0,ABSVAL:35,ACCURACY:1,ARGMAX:30,BNLL:2,CONCAT:3,CONTRASTIVE_LOSS:37,CONVOLUTION:4,DATA:5,DECONVOLUTION:39,DROPOUT:6,DUMMY_DATA:32,EUCLIDEAN_LOSS:7,ELTWISE:25,EXP:38,FLATTEN:8,HDF5_DATA:9,HDF5_OUTPUT:10,HINGE_LOSS:28,IM2COL:11,IMAGE_DATA:12,INFOGAIN_LOSS:13,INNER_PRODUCT:14,LRN:15,MEMORY_DATA:29,MULTINOMIAL_LOGISTIC_LOSS:16,MVN:34,POOLING:17,POWER:26,RELU:18,SIGMOID:19,SIGMOID_CROSS_ENTROPY_LOSS:27,SILENCE:36,SOFTMAX:20,SOFTMAX_LOSS:21,SPLIT:22,SLICE:33,TANH:23,WINDOW_DATA:24,THRESHOLD:31},$root.caffe.V1LayerParameter.DimCheckMode={STRICT:0,PERMISSIVE:1},$root.caffe.V0LayerParameter=class{constructor(){this.blobs=[],this.blobs_lr=[],this.weight_decay=[]}static decode(e,a){const r=new $root.caffe.V0LayerParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.name=e.string();break;case 2:r.type=e.string();break;case 3:r.num_output=e.uint32();break;case 4:r.biasterm=e.bool();break;case 5:r.weight_filler=$root.caffe.FillerParameter.decode(e,e.uint32());break;case 6:r.bias_filler=$root.caffe.FillerParameter.decode(e,e.uint32());break;case 7:r.pad=e.uint32();break;case 8:r.kernelsize=e.uint32();break;case 9:r.group=e.uint32();break;case 10:r.stride=e.uint32();break;case 11:r.pool=e.int32();break;case 12:r.dropout_ratio=e.float();break;case 13:r.local_size=e.uint32();break;case 14:r.alpha=e.float();break;case 15:r.beta=e.float();break;case 22:r.k=e.float();break;case 16:r.source=e.string();break;case 17:r.scale=e.float();break;case 18:r.meanfile=e.string();break;case 19:r.batchsize=e.uint32();break;case 20:r.cropsize=e.uint32();break;case 21:r.mirror=e.bool();break;case 50:r.blobs.push($root.caffe.BlobProto.decode(e,e.uint32()));break;case 51:r.blobs_lr=e.floats(r.blobs_lr,a);break;case 52:r.weight_decay=e.floats(r.weight_decay,a);break;case 53:r.rand_skip=e.uint32();break;case 54:r.det_fg_threshold=e.float();break;case 55:r.det_bg_threshold=e.float();break;case 56:r.det_fg_fraction=e.float();break;case 58:r.det_context_pad=e.uint32();break;case 59:r.det_crop_mode=e.string();break;case 60:r.new_num=e.int32();break;case 61:r.new_channels=e.int32();break;case 62:r.new_height=e.int32();break;case 63:r.new_width=e.int32();break;case 64:r.shuffle_images=e.bool();break;case 65:r.concat_dim=e.uint32();break;case 1001:r.hdf5_output_param=$root.caffe.HDF5OutputParameter.decode(e,e.uint32());break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.V0LayerParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"name":a.name=e.string();break;case"type":a.type=e.string();break;case"num_output":a.num_output=e.integer();break;case"biasterm":a.biasterm=e.boolean();break;case"weight_filler":a.weight_filler=$root.caffe.FillerParameter.decodeText(e,!0);break;case"bias_filler":a.bias_filler=$root.caffe.FillerParameter.decodeText(e,!0);break;case"pad":a.pad=e.integer();break;case"kernelsize":a.kernelsize=e.integer();break;case"group":a.group=e.integer();break;case"stride":a.stride=e.integer();break;case"pool":a.pool=e.enum($root.caffe.V0LayerParameter.PoolMethod);break;case"dropout_ratio":a.dropout_ratio=e.float();break;case"local_size":a.local_size=e.integer();break;case"alpha":a.alpha=e.float();break;case"beta":a.beta=e.float();break;case"k":a.k=e.float();break;case"source":a.source=e.string();break;case"scale":a.scale=e.float();break;case"meanfile":a.meanfile=e.string();break;case"batchsize":a.batchsize=e.integer();break;case"cropsize":a.cropsize=e.integer();break;case"mirror":a.mirror=e.boolean();break;case"blobs":a.blobs.push($root.caffe.BlobProto.decodeText(e,!0));break;case"blobs_lr":e.array(a.blobs_lr,(()=>e.float()));break;case"weight_decay":e.array(a.weight_decay,(()=>e.float()));break;case"rand_skip":a.rand_skip=e.integer();break;case"det_fg_threshold":a.det_fg_threshold=e.float();break;case"det_bg_threshold":a.det_bg_threshold=e.float();break;case"det_fg_fraction":a.det_fg_fraction=e.float();break;case"det_context_pad":a.det_context_pad=e.integer();break;case"det_crop_mode":a.det_crop_mode=e.string();break;case"new_num":a.new_num=e.integer();break;case"new_channels":a.new_channels=e.integer();break;case"new_height":a.new_height=e.integer();break;case"new_width":a.new_width=e.integer();break;case"shuffle_images":a.shuffle_images=e.boolean();break;case"concat_dim":a.concat_dim=e.integer();break;case"hdf5_output_param":a.hdf5_output_param=$root.caffe.HDF5OutputParameter.decodeText(e,!0);break;default:e.field(r,a)}}return a}},$root.caffe.V0LayerParameter.prototype.name="",$root.caffe.V0LayerParameter.prototype.type="",$root.caffe.V0LayerParameter.prototype.num_output=0,$root.caffe.V0LayerParameter.prototype.biasterm=!0,$root.caffe.V0LayerParameter.prototype.weight_filler=null,$root.caffe.V0LayerParameter.prototype.bias_filler=null,$root.caffe.V0LayerParameter.prototype.pad=0,$root.caffe.V0LayerParameter.prototype.kernelsize=0,$root.caffe.V0LayerParameter.prototype.group=1,$root.caffe.V0LayerParameter.prototype.stride=1,$root.caffe.V0LayerParameter.prototype.pool=0,$root.caffe.V0LayerParameter.prototype.dropout_ratio=.5,$root.caffe.V0LayerParameter.prototype.local_size=5,$root.caffe.V0LayerParameter.prototype.alpha=1,$root.caffe.V0LayerParameter.prototype.beta=.75,$root.caffe.V0LayerParameter.prototype.k=1,$root.caffe.V0LayerParameter.prototype.source="",$root.caffe.V0LayerParameter.prototype.scale=1,$root.caffe.V0LayerParameter.prototype.meanfile="",$root.caffe.V0LayerParameter.prototype.batchsize=0,$root.caffe.V0LayerParameter.prototype.cropsize=0,$root.caffe.V0LayerParameter.prototype.mirror=!1,$root.caffe.V0LayerParameter.prototype.rand_skip=0,$root.caffe.V0LayerParameter.prototype.det_fg_threshold=.5,$root.caffe.V0LayerParameter.prototype.det_bg_threshold=.5,$root.caffe.V0LayerParameter.prototype.det_fg_fraction=.25,$root.caffe.V0LayerParameter.prototype.det_context_pad=0,$root.caffe.V0LayerParameter.prototype.det_crop_mode="warp",$root.caffe.V0LayerParameter.prototype.new_num=0,$root.caffe.V0LayerParameter.prototype.new_channels=0,$root.caffe.V0LayerParameter.prototype.new_height=0,$root.caffe.V0LayerParameter.prototype.new_width=0,$root.caffe.V0LayerParameter.prototype.shuffle_images=!1,$root.caffe.V0LayerParameter.prototype.concat_dim=1,$root.caffe.V0LayerParameter.prototype.hdf5_output_param=null,$root.caffe.V0LayerParameter.PoolMethod={MAX:0,AVE:1,STOCHASTIC:2},$root.caffe.PReLUParameter=class{constructor(){}static decode(e,a){const r=new $root.caffe.PReLUParameter,t=e.next(a);for(;e.end(t);){const a=e.uint32();switch(a>>>3){case 1:r.filler=$root.caffe.FillerParameter.decode(e,e.uint32());break;case 2:r.channel_shared=e.bool();break;default:e.skipType(7&a)}}return r}static decodeText(e){const a=new $root.caffe.PReLUParameter;for(e.start();!e.end();){const r=e.tag();switch(r){case"filler":a.filler=$root.caffe.FillerParameter.decodeText(e,!0);break;case"channel_shared":a.channel_shared=e.boolean();break;default:e.field(r,a)}}return a}},$root.caffe.PReLUParameter.prototype.filler=null,$root.caffe.PReLUParameter.prototype.channel_shared=!1;