var tflite=tflite||{},base=base||require("./base"),flatbuffers=flatbuffers||require("./flatbuffers"),long=long||{Long:require("long")};tflite.ModelFactory=class{match(t){const e=t.identifier.split(".").pop().toLowerCase();if(-1!==["tflite","lite","tfl","bin","pb","model","tmfile","h5"].indexOf(e)){const e=t.buffer,i="TFL3";if(e&&e.length>8&&e.subarray(4,8).every(((t,e)=>t===i.charCodeAt(e))))return!0}if("json"===e){const e=t.text;if(-1!==e.indexOf('"subgraphs"',0)&&-1!==e.indexOf('"operator_codes"',0))return!0}return!1}open(t,e){return e.require("./tflite-schema").then((()=>(tflite.schema=flatbuffers.get("tflite").tflite,tflite.Metadata.open(e).then((e=>{const i=t.identifier;try{switch(i.split(".").pop().toLowerCase()){default:{const i=new flatbuffers.Reader(t.buffer);if(!tflite.schema.Model.identifier(i))throw new tflite.Error("File format is not tflite.Model.");const n=tflite.schema.Model.create(i);return new tflite.Model(e,n)}case"json":{const i=new flatbuffers.TextReader(t.text),n=tflite.schema.Model.createText(i);return new tflite.Model(e,n)}}}catch(t){const e=t&&t.message?t.message:t.toString();throw new tflite.Error(e.replace(/\.$/,"")+" in '"+i+"'.")}})))))}},tflite.Model=class{constructor(t,e){this._graphs=[],this._format="TensorFlow Lite",this._format=this._format+" v"+e.version.toString(),this._description=e.description||"";const i=[],n={};for(const t of Object.keys(tflite.schema.BuiltinOperator))n[tflite.schema.BuiltinOperator[t]]=tflite.Utility.type(t);for(let t=0;t<e.operator_codes.length;t++){const s=e.operator_codes[t],a=s.builtin_code,r=s.version,o=a===tflite.schema.BuiltinOperator.CUSTOM,l=o?s.custom_code:n[a];if(!l)throw new tflite.Error("Invalid built-in code '"+a.toString()+"' at '"+t.toString()+"'.");i.push(o?{name:l,version:r,custom:!0}:{name:l,version:r})}let s=null;for(const t of e.metadata)switch(t.name){case"min_runtime_version":{const i=e.buffers[t.buffer].data;this._runtime=i?(new TextDecoder).decode(i):void 0;break}case"TFLITE_METADATA":{const i=e.buffers[t.buffer].data||new Uint8Array(0),n=new flatbuffers.Reader(i);tflite.schema.ModelMetadata.identifier(n)&&(s=tflite.schema.ModelMetadata.create(n),this._name=s.name||"",this._version=s.version||"",this._description=s.description?[this.description,s.description].join(" "):this._description,this._author=s.author||"",this._license=s.license||"");break}}const a=e.subgraphs,r=s?s.subgraph_metadata:null;for(let n=0;n<a.length;n++){const s=a[n],o=a.length>1?n.toString():"",l=r&&n<r.length?r[n]:null;this._graphs.push(new tflite.Graph(t,s,l,o,i,e))}}get format(){return this._format}get runtime(){return this._runtime}get name(){return this._name}get version(){return this._version}get description(){return this._description}get author(){return this._author}get license(){return this._license}get graphs(){return this._graphs}},tflite.Graph=class{constructor(t,e,i,n,s,a){this._nodes=[],this._inputs=[],this._outputs=[],this._name=e.name||n;const r=[],o=[];for(let t=0;t<e.tensors.length;t++){const i=e.tensors[t],n=a.buffers[i.buffer],s=i.is_variable,l=n.data,u=l&&l.length>0||s?new tflite.Tensor(t,i,n,s):null;r.push(new tflite.Argument(t,i,u)),o.push(i.name)}const l=e.operators;for(let i=0;i<e.operators.length;i++){const e=l[i],n=e.opcode_index,a=n<s.length?s[n]:{name:"("+n.toString()+")"};this._nodes.push(new tflite.Node(t,e,a,i.toString(),r))}const u=(t,e)=>{if(e){const i=e.description;i&&(t.description=i);const n=e.content;if(t.type&&n){let e=null;const i=n.content_properties;if(i instanceof tflite.schema.FeatureProperties)e="Feature";else if(i instanceof tflite.schema.ImageProperties)switch(e="Image",i.color_space){case 1:e+="(RGB)";break;case 2:e+="(Grayscale)"}else i instanceof tflite.schema.BoundingBoxProperties&&(e="BoundingBox");e&&(t.type.denotation=e)}}},h=e.inputs;for(let t=0;t<h.length;t++){const e=h[t],n=r[e];i&&t<i.input_tensor_metadata.length&&u(n,i.input_tensor_metadata[t]),this._inputs.push(new tflite.Parameter(o[e],!0,[n]))}const c=e.outputs;for(let t=0;t<c.length;t++){const e=c[t],n=r[e];i&&t<i.output_tensor_metadata.length&&u(n,i.output_tensor_metadata[t]),this._outputs.push(new tflite.Parameter(o[e],!0,[n]))}}get name(){return this._name}get groups(){return!1}get inputs(){return this._inputs}get outputs(){return this._outputs}get nodes(){return this._nodes}},tflite.Node=class{constructor(t,e,i,n,s){if(this._metadata=t,this._location=n,this._type=i,this._inputs=[],this._outputs=[],this._attributes=[],e){let n=[],a=[];n=Array.from(e.inputs||new Int32Array(0)),a=Array.from(e.outputs||new Int32Array(0));const r=this._metadata.type(this.type);let o=0;for(;o<n.length;){let t=1,e=null,i=!0;const a=[];if(r&&r.inputs&&o<r.inputs.length){const s=r.inputs[o];e=s.name,"variadic"==s.option&&(t=n.length-o),Object.prototype.hasOwnProperty.call(s,"visible")&&!s.visible&&(i=!1)}const l=n.slice(o,o+t);for(let t=0;t<l.length;t++)-1!=l[t]&&a.push(s[l[t]]);o+=t,e=e||o.toString(),this._inputs.push(new tflite.Parameter(e,i,a))}for(let t=0;t<a.length;t++){const e=s[a[t]];let i=t.toString();if(r&&r.outputs&&t<r.outputs.length){const e=r.outputs[t];!e||e.option&&"variadic"==e.opcodeIndex||!e.name||(i=e.name)}this._outputs.push(new tflite.Parameter(i,!0,[e]))}if(i.custom&&e.custom_options.length>0){const i=t.attribute(this.type,"custom");this._attributes.push(new tflite.Attribute(i,"custom",Array.from(e.custom_options)))}const l=e.builtin_options;if(l)for(const e of Object.keys(l)){const i=l[e];if("fused_activation_function"===e&&0!==i){const e={1:"Relu",2:"ReluN1To1",3:"Relu6",4:"Tanh",5:"SignBit"};if(!e[i])throw new tflite.Error("Unknown activation funtion index '"+JSON.stringify(i)+"'.");const n=e[i];this._chain=[new tflite.Node(t,null,{name:n},null,[])]}const n=t.attribute(this.type,e);this._attributes.push(new tflite.Attribute(n,e,i))}}}get type(){return this._type.name}get name(){return""}get location(){return this._location}get domain(){return null}get metadata(){return this._type.custom?{name:this.type,category:"custom"}:this._metadata.type(this.type)}get group(){return null}get inputs(){return this._inputs}get outputs(){return this._outputs}get chain(){return this._chain}get attributes(){return this._attributes}},tflite.Attribute=class{constructor(t,e,i){if(this._type=null,this._name=e,this._value=i,"fused_activation_function"==this._name&&(this._visible=!1),t){if(t.type&&(this._type=t.type),this._type)switch(this._type){case"shape":this._value=new tflite.TensorShape(i);break;case"TensorType":this._value=tflite.Utility.dataType(this._value);break;default:this._value=tflite.Utility.enum(this._type,this._value)}Object.prototype.hasOwnProperty.call(t,"visible")&&!t.visible?this._visible=!1:Object.prototype.hasOwnProperty.call(t,"default")&&("function"==typeof(i=this._value)&&(i=i()),i==t.default&&(this._visible=!1))}}get name(){return this._name}get type(){return this._type}get value(){return this._value}get visible(){return 0!=this._visible}},tflite.Parameter=class{constructor(t,e,i){this._name=t,this._visible=e,this._arguments=i}get name(){return this._name}get visible(){return this._visible}get arguments(){return this._arguments}},tflite.Argument=class{constructor(t,e,i){this._location=t.toString(),this._type=new tflite.TensorType(e),this._initializer=i,this._name=e.name;const n=e.quantization;if(n){let t="q";const e=1==n.scale.length?n.scale[0]:0,i=1==n.zero_point.length?n.zero_point[0]:0;0==e&&0==i||(t=e.toString()+" * "+(0==i?"q":"(q - "+i.toString()+")")),1==n.min.length&&(t=n.min[0].toString()+" ≤ "+t),1==n.max.length&&(t=t+" ≤ "+n.max[0].toString()),"q"!=t&&(this._quantization=t)}}get name(){return this._name}get location(){return this._location}get type(){return this._type}get quantization(){return this._quantization}set description(t){this._description=t}get description(){return this._description}get initializer(){return this._initializer}},tflite.Tensor=class{constructor(t,e,i,n){this._location=t.toString(),this._type=new tflite.TensorType(e),this._is_variable=n,this._name=e.name,this._data=i.data.slice(0)}get kind(){return this._is_variable?"Variable":""}get name(){return this._name}get location(){return this._location}get type(){return this._type}get state(){return this._context().state}get value(){const t=this._context();return t.state?null:(t.limit=Number.MAX_SAFE_INTEGER,this._decode(t,0))}toString(){const t=this._context();if(t.state)return"";t.limit=1e4;const e=this._decode(t,0);return JSON.stringify(e,null,4)}_context(){const t={state:null,index:0,count:0};if(null==this._data||0===this._data.length)return t.state="Tensor data is empty.",t;if(t.dataType=this._type.dataType,t.shape=this._type.shape.dimensions,t.data=new DataView(this._data.buffer,this._data.byteOffset,this._data.byteLength),"string"==this._type.dataType){let e=0;const i=t.data.getInt32(0,!0);e+=4;const n=[];for(let s=0;s<i;s++)n.push(t.data.getInt32(e,!0)),e+=4;n.push(this._data.length);const s=[],a=new TextDecoder("utf-8");for(let t=0;t<i;t++){const e=this._data.subarray(n[t],n[t+1]);s.push(a.decode(e))}t.data=s}return t}_decode(t,e){const i=0==t.shape.length?[1]:t.shape,n=i[e],s=[];if(e==i.length-1)for(let e=0;e<n;e++){if(t.count>t.limit)return s.push("..."),s;switch(t.dataType){case"uint8":s.push(t.data.getUint8(t.index)),t.index+=1,t.count++;break;case"int8":s.push(t.data.getInt8(t.index)),t.index+=1,t.count++;break;case"int16":s.push(t.data.getInt16(t.index)),t.index+=2,t.count++;break;case"int32":s.push(t.data.getInt32(t.index,!0)),t.index+=4,t.count++;break;case"int64":s.push(new long.Long(t.data.getUint32(t.index,!0),t.data.getUint32(t.index+4,!0),!1)),t.index+=8,t.count++;break;case"float16":s.push(t.data.getFloat16(t.index,!0)),t.index+=2,t.count++;break;case"float32":s.push(t.data.getFloat32(t.index,!0)),t.index+=4,t.count++;break;case"float64":s.push(t.data.getFloat64(t.index,!0)),t.index+=8,t.count++;break;case"string":s.push(t.data[t.index++]),t.count++}}else for(let i=0;i<n;i++){if(t.count>t.limit)return s.push("..."),s;s.push(this._decode(t,e+1))}return 0==t.shape.length?s[0]:s}},tflite.TensorType=class{constructor(t){this._dataType=tflite.Utility.dataType(t.type),this._shape=new tflite.TensorShape(Array.from(t.shape||[]))}get dataType(){return this._dataType}get shape(){return this._shape}set denotation(t){this._denotation=t}get denotation(){return this._denotation}toString(){return this.dataType+this._shape.toString()}},tflite.TensorShape=class{constructor(t){this._dimensions=t}get dimensions(){return this._dimensions}toString(){return this._dimensions&&0!=this._dimensions.length?"["+this._dimensions.map((t=>t.toString())).join(",")+"]":""}},tflite.Metadata=class{static open(t){return tflite.Metadata._metadata?Promise.resolve(tflite.Metadata._metadata):t.request(null,"tflite-metadata.json","utf-8").then((t=>(tflite.Metadata._metadata=new tflite.Metadata(t),tflite.Metadata._metadata))).catch((()=>(tflite.Metadata._metadata=new tflite.Metadata(null),tflite.Metadata._metadata)))}constructor(t){if(this._map=new Map,t){const e=JSON.parse(t);if(e)for(const t of e)t.schema.name=t.name,this._map.set(t.name,t.schema)}}type(t){return this._map.has(t)?this._map.get(t):null}attribute(t,e){const i=this.type(t);if(i){let t=i.attributeMap;if(!t){if(t={},i.attributes)for(const e of i.attributes)t[e.name]=e;i.attributeMap=t}const n=t[e];if(n)return n}return null}},tflite.Utility=class{static dataType(t){if(!tflite.Utility._tensorTypeMap){tflite.Utility._tensorTypeMap=new Map;for(const t of Object.keys(tflite.schema.TensorType))tflite.Utility._tensorTypeMap.set(tflite.schema.TensorType[t],t.toLowerCase());tflite.Utility._tensorTypeMap.set(6,"boolean")}return tflite.Utility._tensorTypeMap.has(t)?tflite.Utility._tensorTypeMap.get(t):"?"}static enum(t,e){const i=t&&tflite.schema?tflite.schema[t]:void 0;if(i){if(tflite.Utility._enumKeyMap=tflite.Utility._enumKeyMap||new Map,!tflite.Utility._enumKeyMap.has(t)){const e=new Map;for(const t of Object.keys(i))e.set(i[t],t);tflite.Utility._enumKeyMap.set(t,e)}const n=tflite.Utility._enumKeyMap.get(t);if(n.has(e))return n.get(e)}return e}static type(t){const e=new Set(["2D","LSH","SVDF","RNN","L2","LSTM"]);return t.split("_").map((t=>t.length<1||e.has(t)?t:t[0]+t.substring(1).toLowerCase())).join("")}},tflite.Error=class extends Error{constructor(t){super(t),this.name="Error loading TensorFlow Lite model."}},"undefined"!=typeof module&&"object"==typeof module.exports&&(module.exports.ModelFactory=tflite.ModelFactory);