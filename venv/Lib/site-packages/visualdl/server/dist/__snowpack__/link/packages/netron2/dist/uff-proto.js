var $root=protobuf.get("uff");$root.uff={},$root.uff.MetaGraph=class{constructor(){this.descriptors=[],this.graphs=[],this.referenced_data=[],this.extra_fields=[]}static decode(e,t){const r=new $root.uff.MetaGraph,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.version=e.int64();break;case 2:r.descriptor_core_version=e.int64();break;case 3:r.descriptors.push($root.uff.Descriptor.decode(e,e.uint32()));break;case 4:r.graphs.push($root.uff.Graph.decode(e,e.uint32()));break;case 5:r.referenced_data.push($root.uff.MetaGraph.ReferencedDataEntry.decode(e,e.uint32()));break;case 100:r.extra_fields.push($root.uff.MetaGraph.ExtraFieldsEntry.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.MetaGraph;for(e.start();!e.end();){const r=e.tag();switch(r){case"version":t.version=e.integer();break;case"descriptor_core_version":t.descriptor_core_version=e.integer();break;case"descriptors":t.descriptors.push($root.uff.Descriptor.decodeText(e,!0));break;case"graphs":t.graphs.push($root.uff.Graph.decodeText(e,!0));break;case"referenced_data":t.referenced_data.push($root.uff.MetaGraph.ReferencedDataEntry.decodeText(e,!0));break;case"extra_fields":t.extra_fields.push($root.uff.MetaGraph.ExtraFieldsEntry.decodeText(e,!0));break;default:e.field(r,t)}}return t}},$root.uff.MetaGraph.prototype.version=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.uff.MetaGraph.prototype.descriptor_core_version=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.uff.MetaGraph.ReferencedDataEntry=class{constructor(){}static decode(e,t){const r=new $root.uff.MetaGraph.ReferencedDataEntry,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.key=e.string();break;case 2:r.value=$root.uff.Data.decode(e,e.uint32());break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.MetaGraph.ReferencedDataEntry;for(e.start();!e.end();){const r=e.tag();switch(r){case"key":t.key=e.string();break;case"value":t.value=$root.uff.Data.decodeText(e,!0);break;default:e.field(r,t)}}return t}},$root.uff.MetaGraph.ReferencedDataEntry.prototype.key="",$root.uff.MetaGraph.ReferencedDataEntry.prototype.value=null,$root.uff.MetaGraph.ExtraFieldsEntry=class{constructor(){}static decode(e,t){const r=new $root.uff.MetaGraph.ExtraFieldsEntry,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.key=e.string();break;case 2:r.value=$root.uff.Data.decode(e,e.uint32());break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.MetaGraph.ExtraFieldsEntry;for(e.start();!e.end();){const r=e.tag();switch(r){case"key":t.key=e.string();break;case"value":t.value=$root.uff.Data.decodeText(e,!0);break;default:e.field(r,t)}}return t}},$root.uff.MetaGraph.ExtraFieldsEntry.prototype.key="",$root.uff.MetaGraph.ExtraFieldsEntry.prototype.value=null,$root.uff.Descriptor=class{constructor(){}static decode(e,t){const r=new $root.uff.Descriptor,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.id=e.string();break;case 2:r.version=e.int64();break;case 3:r.optional=e.bool();break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.Descriptor;for(e.start();!e.end();){const r=e.tag();switch(r){case"id":t.id=e.string();break;case"version":t.version=e.integer();break;case"optional":t.optional=e.boolean();break;default:e.field(r,t)}}return t}},$root.uff.Descriptor.prototype.id="",$root.uff.Descriptor.prototype.version=protobuf.Long?protobuf.Long.fromBits(0,0,!1):0,$root.uff.Descriptor.prototype.optional=!1,$root.uff.Graph=class{constructor(){this.nodes=[],this.extra_fields=[]}static decode(e,t){const r=new $root.uff.Graph,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.id=e.string();break;case 2:r.nodes.push($root.uff.Node.decode(e,e.uint32()));break;case 100:r.extra_fields.push($root.uff.Graph.ExtraFieldsEntry.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.Graph;for(e.start();!e.end();){const r=e.tag();switch(r){case"id":t.id=e.string();break;case"nodes":t.nodes.push($root.uff.Node.decodeText(e,!0));break;case"extra_fields":t.extra_fields.push($root.uff.Graph.ExtraFieldsEntry.decodeText(e,!0));break;default:e.field(r,t)}}return t}},$root.uff.Graph.prototype.id="",$root.uff.Graph.ExtraFieldsEntry=class{constructor(){}static decode(e,t){const r=new $root.uff.Graph.ExtraFieldsEntry,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.key=e.string();break;case 2:r.value=$root.uff.Data.decode(e,e.uint32());break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.Graph.ExtraFieldsEntry;for(e.start();!e.end();){const r=e.tag();switch(r){case"key":t.key=e.string();break;case"value":t.value=$root.uff.Data.decodeText(e,!0);break;default:e.field(r,t)}}return t}},$root.uff.Graph.ExtraFieldsEntry.prototype.key="",$root.uff.Graph.ExtraFieldsEntry.prototype.value=null,$root.uff.Node=class{constructor(){this.inputs=[],this.fields=[],this.extra_fields=[]}static decode(e,t){const r=new $root.uff.Node,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.id=e.string();break;case 2:r.inputs.push(e.string());break;case 3:r.operation=e.string();break;case 4:r.fields.push($root.uff.Node.FieldsEntry.decode(e,e.uint32()));break;case 100:r.extra_fields.push($root.uff.Node.ExtraFieldsEntry.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.Node;for(e.start();!e.end();){const r=e.tag();switch(r){case"id":t.id=e.string();break;case"inputs":e.array(t.inputs,(()=>e.string()));break;case"operation":t.operation=e.string();break;case"fields":t.fields.push($root.uff.Node.FieldsEntry.decodeText(e,!0));break;case"extra_fields":t.extra_fields.push($root.uff.Node.ExtraFieldsEntry.decodeText(e,!0));break;default:e.field(r,t)}}return t}},$root.uff.Node.prototype.id="",$root.uff.Node.prototype.operation="",$root.uff.Node.FieldsEntry=class{constructor(){}static decode(e,t){const r=new $root.uff.Node.FieldsEntry,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.key=e.string();break;case 2:r.value=$root.uff.Data.decode(e,e.uint32());break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.Node.FieldsEntry;for(e.start();!e.end();){const r=e.tag();switch(r){case"key":t.key=e.string();break;case"value":t.value=$root.uff.Data.decodeText(e,!0);break;default:e.field(r,t)}}return t}},$root.uff.Node.FieldsEntry.prototype.key="",$root.uff.Node.FieldsEntry.prototype.value=null,$root.uff.Node.ExtraFieldsEntry=class{constructor(){}static decode(e,t){const r=new $root.uff.Node.ExtraFieldsEntry,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.key=e.string();break;case 2:r.value=$root.uff.Data.decode(e,e.uint32());break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.Node.ExtraFieldsEntry;for(e.start();!e.end();){const r=e.tag();switch(r){case"key":t.key=e.string();break;case"value":t.value=$root.uff.Data.decodeText(e,!0);break;default:e.field(r,t)}}return t}},$root.uff.Node.ExtraFieldsEntry.prototype.key="",$root.uff.Node.ExtraFieldsEntry.prototype.value=null,$root.uff.Data=class{constructor(){}get type(){return $root.uff.Data.typeSet=$root.uff.Data.typeSet||new Set(["s","s_list","d","d_list","b","b_list","i","i_list","blob","ref","dtype","dtype_list","dim_orders","dim_orders_list"]),Object.keys(this).find((e=>$root.uff.Data.typeSet.has(e)&&null!=this[e]))}static decode(e,t){const r=new $root.uff.Data,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.s=e.string();break;case 2:r.s_list=$root.uff.ListString.decode(e,e.uint32());break;case 3:r.d=e.double();break;case 4:r.d_list=$root.uff.ListDouble.decode(e,e.uint32());break;case 5:r.b=e.bool();break;case 6:r.b_list=$root.uff.ListBool.decode(e,e.uint32());break;case 7:r.i=e.int64();break;case 8:r.i_list=$root.uff.ListInt64.decode(e,e.uint32());break;case 9:r.blob=e.bytes();break;case 100:r.ref=e.string();break;case 101:r.dtype=e.int32();break;case 102:r.dtype_list=$root.uff.ListDataType.decode(e,e.uint32());break;case 103:r.dim_orders=$root.uff.DimensionOrders.decode(e,e.uint32());break;case 104:r.dim_orders_list=$root.uff.ListDimensionOrders.decode(e,e.uint32());break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.Data;for(e.start();!e.end();){const r=e.tag();switch(r){case"s":t.s=e.string();break;case"s_list":t.s_list=$root.uff.ListString.decodeText(e,!0);break;case"d":t.d=e.float();break;case"d_list":t.d_list=$root.uff.ListDouble.decodeText(e,!0);break;case"b":t.b=e.boolean();break;case"b_list":t.b_list=$root.uff.ListBool.decodeText(e,!0);break;case"i":t.i=e.integer();break;case"i_list":t.i_list=$root.uff.ListInt64.decodeText(e,!0);break;case"blob":t.blob=e.bytes();break;case"ref":t.ref=e.string();break;case"dtype":t.dtype=e.enum($root.uff.DataType);break;case"dtype_list":t.dtype_list=$root.uff.ListDataType.decodeText(e,!0);break;case"dim_orders":t.dim_orders=$root.uff.DimensionOrders.decodeText(e,!0);break;case"dim_orders_list":t.dim_orders_list=$root.uff.ListDimensionOrders.decodeText(e,!0);break;default:e.field(r,t)}}return t}},$root.uff.DataType={DT_INVALID:0,DT_INT8:65544,DT_INT16:65552,DT_INT32:65568,DT_INT64:65600,DT_FLOAT16:131088,DT_FLOAT32:131104},$root.uff.OrderEnum={OE_ZERO:0,OE_SPECIAL:-1,OE_INCREMENT:2147483647,OE_DECREMENT:-2147483648},$root.uff.DimensionOrders=class{constructor(){this.orders=[]}static decode(e,t){const r=new $root.uff.DimensionOrders,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.orders.push($root.uff.DimensionOrders.OrdersEntry.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.DimensionOrders;for(e.start();!e.end();){const r=e.tag();switch(r){case"orders":t.orders.push($root.uff.DimensionOrders.OrdersEntry.decodeText(e,!0));break;default:e.field(r,t)}}return t}},$root.uff.DimensionOrders.OrdersEntry=class{constructor(){}static decode(e,t){const r=new $root.uff.DimensionOrders.OrdersEntry,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.key=e.int32();break;case 2:r.value=$root.uff.ListInt64.decode(e,e.uint32());break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.DimensionOrders.OrdersEntry;for(e.start();!e.end();){const r=e.tag();switch(r){case"key":t.key=e.enum($root.uff.OrderEnum);break;case"value":t.value=$root.uff.ListInt64.decodeText(e,!0);break;default:e.field(r,t)}}return t}},$root.uff.DimensionOrders.OrdersEntry.prototype.key=0,$root.uff.DimensionOrders.OrdersEntry.prototype.value=null,$root.uff.ListString=class{constructor(){this.val=[]}static decode(e,t){const r=new $root.uff.ListString,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.val.push(e.string());break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.ListString;for(e.start();!e.end();){const r=e.tag();switch(r){case"val":e.array(t.val,(()=>e.string()));break;default:e.field(r,t)}}return t}},$root.uff.ListDouble=class{constructor(){this.val=[]}static decode(e,t){const r=new $root.uff.ListDouble,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.val=e.doubles(r.val,t);break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.ListDouble;for(e.start();!e.end();){const r=e.tag();switch(r){case"val":e.array(t.val,(()=>e.float()));break;default:e.field(r,t)}}return t}},$root.uff.ListBool=class{constructor(){this.val=[]}static decode(e,t){const r=new $root.uff.ListBool,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.val=e.array(r.val,(()=>e.bool()),t);break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.ListBool;for(e.start();!e.end();){const r=e.tag();switch(r){case"val":e.array(t.val,(()=>e.boolean()));break;default:e.field(r,t)}}return t}},$root.uff.ListInt64=class{constructor(){this.val=[]}static decode(e,t){const r=new $root.uff.ListInt64,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.val=e.array(r.val,(()=>e.int64()),t);break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.ListInt64;for(e.start();!e.end();){const r=e.tag();switch(r){case"val":e.array(t.val,(()=>e.integer()));break;default:e.field(r,t)}}return t}},$root.uff.ListDataType=class{constructor(){this.val=[]}static decode(e,t){const r=new $root.uff.ListDataType,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.val=e.array(r.val,(()=>e.int32()),t);break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.ListDataType;for(e.start();!e.end();){const r=e.tag();switch(r){case"val":e.array(t.val,(()=>e.enum($root.uff.DataType)));break;default:e.field(r,t)}}return t}},$root.uff.ListDimensionOrders=class{constructor(){this.val=[]}static decode(e,t){const r=new $root.uff.ListDimensionOrders,o=e.next(t);for(;e.end(o);){const t=e.uint32();switch(t>>>3){case 1:r.val.push($root.uff.DimensionOrders.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return r}static decodeText(e){const t=new $root.uff.ListDimensionOrders;for(e.start();!e.end();){const r=e.tag();switch(r){case"val":t.val.push($root.uff.DimensionOrders.decodeText(e,!0));break;default:e.field(r,t)}}return t}};