import{G as p,B as C,D as G,V as E,i as j,e as U,n as z,f as V,g as A}from"../common/html-43a4a009.js";p.prototype.toSVG=function(c,e){const t=this.getPlugin("export");t&&t.toSVG(c,e)},p.prototype.toPNG=function(c,e){const t=this.getPlugin("export");t&&t.toPNG(c,e)},p.prototype.toJPEG=function(c,e){const t=this.getPlugin("export");t&&t.toJPEG(c,e)},p.prototype.exportPNG=function(c,e){const t=this.getPlugin("export");t&&t.exportPNG(c,e)},p.prototype.exportJPEG=function(c,e){const t=this.getPlugin("export");t&&t.exportJPEG(c,e)},p.prototype.exportSVG=function(c,e){const t=this.getPlugin("export");t&&t.exportSVG(c,e)};class B extends C{constructor(){super();this.name="export"}init(e){this.graph=e}get view(){return this.graph.view}exportPNG(e="chart",t={}){this.toPNG(a=>{G.downloadDataUri(a,e)},t)}exportJPEG(e="chart",t={}){this.toPNG(a=>{G.downloadDataUri(a,e)},t)}exportSVG(e="chart",t={}){this.toSVG(a=>{G.downloadDataUri(G.svgToDataUrl(a),e)},t)}toSVG(e,t={}){this.notify("before:export",t);const a=this.view.svg,o=E.create(a).clone();let m=o.node;const b=o.findOne(`.${this.view.prefixClassName("graph-svg-stage")}`),l=t.viewBox||this.graph.graphToLocal(this.graph.getContentBBox()),n=t.preserveDimensions;if(n){const i=typeof n=="boolean"?l:n;o.attr({width:i.width,height:i.height})}if(o.removeAttribute("style").attr("viewBox",[l.x,l.y,l.width,l.height].join(" ")),b.removeAttribute("transform"),t.copyStyles!==!1){const i=a.ownerDocument,h=Array.from(a.querySelectorAll("*")),g=Array.from(m.querySelectorAll("*")),f=i.styleSheets.length,P=[];for(let s=f-1;s>=0;s-=1)P[s]=i.styleSheets[s],i.styleSheets[s].disabled=!0;const w={};h.forEach((s,d)=>{const y=window.getComputedStyle(s,null),v={};Object.keys(y).forEach(x=>{v[x]=y.getPropertyValue(x)}),w[d]=v}),f!==i.styleSheets.length&&P.forEach((s,d)=>{i.styleSheets[d]=s});for(let s=0;s<f;s+=1)i.styleSheets[s].disabled=!1;const D={};h.forEach((s,d)=>{const y=window.getComputedStyle(s,null),v=w[d],x={};Object.keys(y).forEach(S=>{!j(S)&&y.getPropertyValue(S)!==v[S]&&(x[S]=y.getPropertyValue(S))}),D[d]=x}),g.forEach((s,d)=>{U(s,D[d])})}const u=t.stylesheet;if(typeof u=="string"){const i=a.ownerDocument.implementation.createDocument(null,"xml",null).createCDATASection(u);o.prepend(E.create("style",{type:"text/css"},[i]))}const r=()=>{const i=t.beforeSerialize;if(typeof i=="function"){const g=A(i,this.graph,m);g instanceof SVGSVGElement&&(m=g)}const h=new XMLSerializer().serializeToString(m).replace(/&nbsp;/g,"\xA0");this.notify("after:export",t),e(h)};if(t.serializeImages){const i=o.find("image").map(h=>new Promise(g=>{const f=h.attr("xlink:href")||h.attr("href");G.imageToDataUri(f,(P,w)=>{!P&&w&&h.attr("xlink:href",w),g()})}));Promise.all(i).then(r)}else r()}toDataURL(e,t){let a=t.viewBox||this.graph.getContentBBox();const o=z(t.padding);t.width&&t.height&&(o.left+o.right>=t.width&&(o.left=o.right=0),o.top+o.bottom>=t.height&&(o.top=o.bottom=0));const m=new V(-o.left,-o.top,o.left+o.right,o.top+o.bottom);if(t.width&&t.height){const r=a.width+o.left+o.right,i=a.height+o.top+o.bottom;m.scale(r/t.width,i/t.height)}a=V.create(a).moveAndExpand(m);const b=typeof t.width=="number"&&typeof t.height=="number"?{width:t.width,height:t.height}:a;let l=t.ratio?parseFloat(t.ratio):1;(!Number.isFinite(l)||l===0)&&(l=1);const n={width:Math.max(Math.round(b.width*l),1),height:Math.max(Math.round(b.height*l),1)};{const r=document.createElement("canvas"),i=r.getContext("2d");r.width=n.width,r.height=n.height;const h=n.width-1,g=n.height-1;i.fillStyle="rgb(1,1,1)",i.fillRect(h,g,1,1);const f=i.getImageData(h,g,1,1).data;if(f[0]!==1||f[1]!==1||f[2]!==1)throw new Error("size exceeded")}const u=new Image;u.onload=()=>{const r=document.createElement("canvas");r.width=n.width,r.height=n.height;const i=r.getContext("2d");i.fillStyle=t.backgroundColor||"white",i.fillRect(0,0,n.width,n.height);try{i.drawImage(u,0,0,n.width,n.height);const h=r.toDataURL(t.type,t.quality);e(h)}catch(h){}},this.toSVG(r=>{u.src=`data:image/svg+xml,${encodeURIComponent(r)}`},Object.assign(Object.assign({},t),{viewBox:a,serializeImages:!0,preserveDimensions:Object.assign({},n)}))}toPNG(e,t={}){this.toDataURL(e,Object.assign(Object.assign({},t),{type:"image/png"}))}toJPEG(e,t={}){this.toDataURL(e,Object.assign(Object.assign({},t),{type:"image/jpeg"}))}notify(e,t){this.trigger(e,t),this.graph.trigger(e,t)}}export{B as Export};
